{
  "log": {
    "version": "1.2",
    "creator": {
      "name": "WebInspector",
      "version": "537.36"
    },
    "pages": [
      {
        "startedDateTime": "2022-12-13T14:53:31.640Z",
        "id": "page_1",
        "title": "https://exactspace.co/",
        "pageTimings": {
          "onContentLoad": 1964.5369999998366,
          "onLoad": 4617.399999995541
        }
      }
    ],
    "entries": [
      {
        "_initiator": {
          "type": "other"
        },
        "_priority": "VeryHigh",
        "_resourceType": "document",
        "cache": {},
        "connection": "88818",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Accept-Language",
              "value": "en-GB,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "exactspace.co"
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "document"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "navigate"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Sec-Fetch-User",
              "value": "?1"
            },
            {
              "name": "Upgrade-Insecure-Requests",
              "value": "1"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 706,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Cache-Control",
              "value": "no-cache, must-revalidate, max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Content-Length",
              "value": "42420"
            },
            {
              "name": "Content-Type",
              "value": "text/html; charset=UTF-8"
            },
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 14:53:32 GMT"
            },
            {
              "name": "Expires",
              "value": "Wed, 11 Jan 1984 05:00:00 GMT"
            },
            {
              "name": "Link",
              "value": "<https://exactspace.co/wp-json/>; rel=\"https://api.w.org/\""
            },
            {
              "name": "Link",
              "value": "<https://exactspace.co/>; rel=shortlink"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Strict-Transport-Security",
              "value": "max-age=31536000"
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "cookies": [],
          "content": {
            "size": 327936,
            "mimeType": "text/html",
            "compression": 285516,
            "text": "<!DOCTYPE html>\n<html lang=\"en-US\" class=\"no-js scheme_default\">\n<head>\n\t\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n\t\t<meta name=\"format-detection\" content=\"telephone=no\">\n\t\t<link rel=\"profile\" href=\"http://gmpg.org/xfn/11\">\n\t\t<link rel=\"pingback\" href=\"https://exactspace.co/xmlrpc.php\">\n\t\t<title>ExactSpace</title>\n<link rel='dns-prefetch' href='//fonts.googleapis.com' />\n<link rel='dns-prefetch' href='//s.w.org' />\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"ExactSpace &raquo; Feed\" href=\"https://exactspace.co/feed/\" />\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"ExactSpace &raquo; Comments Feed\" href=\"https://exactspace.co/comments/feed/\" />\n\t\t<script type=\"text/javascript\">\n\t\t\twindow._wpemojiSettings = {\"baseUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/11\\/72x72\\/\",\"ext\":\".png\",\"svgUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/11\\/svg\\/\",\"svgExt\":\".svg\",\"source\":{\"concatemoji\":\"https:\\/\\/exactspace.co\\/wp-includes\\/js\\/wp-emoji-release.min.js?ver=4.9.22\"}};\n\t\t\t!function(e,a,t){var n,r,o,i=a.createElement(\"canvas\"),p=i.getContext&&i.getContext(\"2d\");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement(\"script\");t.src=e,t.defer=t.type=\"text/javascript\",a.getElementsByTagName(\"head\")[0].appendChild(t)}for(o=Array(\"flag\",\"emoji\"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline=\"top\",p.font=\"600 32px Arial\",e){case\"flag\":return s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])?!1:!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case\"emoji\":return!s([55358,56760,9792,65039],[55358,56760,8203,9792,65039])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],\"flag\"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener(\"DOMContentLoaded\",n,!1),e.addEventListener(\"load\",n,!1)):(e.attachEvent(\"onload\",n),a.attachEvent(\"onreadystatechange\",function(){\"complete\"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script>\n\t\t<style type=\"text/css\">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n<link property=\"stylesheet\" rel='stylesheet' id='contact-form-7-css'  href='https://exactspace.co/wp-content/plugins/contact-form-7/includes/css/styles.css?ver=5.1.1' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='rs-plugin-settings-css'  href='https://exactspace.co/wp-content/plugins/revslider/public/assets/css/settings.css?ver=5.4.6.4' type='text/css' media='all' />\n<style id='rs-plugin-settings-inline-css' type='text/css'>\n#rs-demo-id {}\n</style>\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-debug-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/css/trx_addons.debug.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-events-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/api/the-events-calendar/the-events-calendar.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-woocommerce-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/api/woocommerce/woocommerce.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-editor-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/editor/css/trx_addons.editor.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/shortcodes.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-icons-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/css/font-icons/css/trx_addons_icons-embedded.css?ver=4.9.22' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='swiperslider-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/js/swiper/swiper.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='magnific-popup-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/js/magnific/magnific-popup.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/css/trx_addons.front.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-hovers-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/css/trx_addons.hovers.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-animation-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/css/trx_addons.animation.css?ver=4.9.22' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-cpt_layouts-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/cpt/layouts/layouts.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_layouts_logo-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/cpt/layouts/shortcodes/logo/logo.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_layouts_search-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/cpt/layouts/shortcodes/search/search.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_layouts_cart-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/cpt/layouts/shortcodes/cart/cart.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_layouts_menu-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/cpt/layouts/shortcodes/menu/menu.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_layouts_title-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/cpt/layouts/shortcodes/title/title.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_layouts_featured-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/cpt/layouts/shortcodes/featured/featured.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_layouts_currency-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/cpt/layouts/shortcodes/currency/currency.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_layouts_language-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/cpt/layouts/shortcodes/language/language.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-cpt_services-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/cpt/services/services.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-cpt_team-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/cpt/team/team.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-cpt_testimonials-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/cpt/testimonials/testimonials.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-widget_audio-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/widgets/audio/audio.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-widget_categories_list-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/widgets/categories_list/categories_list.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-widget_contacts-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/widgets/contacts/contacts.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-widget_slider-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/widgets/slider/slider.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-widget_socials-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/widgets/socials/socials.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-widget_video-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/widgets/video/video.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_action-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/action/action.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_anchor-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/anchor/anchor.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_blogger-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/blogger/blogger.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_button-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/button/button.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_content-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/content/content.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_countdown-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/countdown/countdown.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_form-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/form/form.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_googlemap-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/googlemap/googlemap.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_icons-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/icons/icons.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_popup-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/popup/popup.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_price-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/price/price.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_promo-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/promo/promo.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_skills-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/skills/skills.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_socials-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/socials/socials.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_table-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/table/table.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='trx_addons-sc_title-css'  href='https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/title/title.css' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='js_composer_front-css'  href='https://exactspace.co/wp-content/plugins/js_composer/assets/css/js_composer.min.css?ver=5.4.5' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='js_composer_custom_css-css'  href='//exactspace.co/wp-content/uploads/js_composer/custom.css?ver=5.4.5' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='aquapro-font-google_fonts-css'  href='https://fonts.googleapis.com/css?family=Neuton%3A400%2C400i%7CMontserrat%3A400%2C700&#038;subset=latin%2Clatin-ext&#038;ver=4.9.22' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='aquapro-fontello-css'  href='https://exactspace.co/wp-content/themes/aquapro/css/fontello/css/fontello-embedded.css?ver=4.9.22' type='text/css' media='all' />\n<link property=\"stylesheet\" rel='stylesheet' id='aquapro-main-css'  href='https://exactspace.co/wp-content/themes/aquapro/style.css' type='text/css' media='all' />\n<style id='aquapro-main-inline-css' type='text/css'>\nbody{font-family:Neuton,serif;\tfont-size:1rem;\tfont-weight:400;\tfont-style:normal;\tline-height:1.412rem;\ttext-decoration:none;\ttext-transform:none;\tletter-spacing:0.24px}p,ul,ol,dl,blockquote,address{margin-top:0em;\tmargin-bottom:1.4em}h1{font-family:Montserrat,sans-serif;\tfont-size:3.529rem;\tfont-weight:700;\tfont-style:normal;\tline-height:1.13em;\ttext-decoration:none;\ttext-transform:none;\tletter-spacing:-0.3px;\tmargin-top:0.9583em;\tmargin-bottom:0.64em}h2{font-family:Montserrat,sans-serif;\tfont-size:2.824rem;\tfont-weight:700;\tfont-style:normal;\tline-height:3.176rem;\ttext-decoration:none;\ttext-transform:none;\tletter-spacing:-0.04px;\tmargin-top:2.5444em;\tmargin-bottom:0.74em}h3{font-family:Montserrat,sans-serif;\tfont-size:2.118rem;\tfont-weight:700;\tfont-style:normal;\tline-height:2.412rem;\ttext-decoration:none;\ttext-transform:none;\tletter-spacing:-0.1px;\tmargin-top:3.4333em;\tmargin-bottom:0.71em}h4{font-family:Montserrat,sans-serif;\tfont-size:1.765rem;\tfont-weight:600;\tfont-style:normal;\tline-height:2.059rem;\ttext-decoration:none;\ttext-transform:none;\tletter-spacing:-0.1px;\tmargin-top:4.1565em;\tmargin-bottom:0.5435em}h5{font-family:Montserrat,sans-serif;\tfont-size:1.412rem;\tfont-weight:700;\tfont-style:normal;\tline-height:1.706rem;\ttext-decoration:none;\ttext-transform:none;\tletter-spacing:-0.3px;\tmargin-top:5.44em;\tmargin-bottom:0.81em}h6{font-family:Montserrat,sans-serif;\tfont-size:1.059rem;\tfont-weight:700;\tfont-style:normal;\tline-height:1.299rem;\ttext-decoration:none;\ttext-transform:none;\tletter-spacing:0px;\tmargin-top:7em;\tmargin-bottom:1.4412em}input[type=\"text\"],input[type=\"number\"],input[type=\"email\"],input[type=\"tel\"],input[type=\"search\"],input[type=\"password\"],textarea,textarea.wp-editor-area,.select_container,select,.select_container select{font-family:Montserrat,sans-serif;\tfont-size:1em;\tfont-weight:400;\tfont-style:normal;\tline-height:1.2em;\ttext-decoration:none;\ttext-transform:none;\tletter-spacing:0px}button,input[type=\"button\"],input[type=\"reset\"],input[type=\"submit\"],.theme_button,.gallery_preview_show .post_readmore,.more-link,.aquapro_tabs .aquapro_tabs_titles li a{font-family:Montserrat,sans-serif;\tfont-size:14px;\tfont-weight:700;\tfont-style:normal;\tline-height:1.5em;\ttext-decoration:none;\ttext-transform:uppercase;\tletter-spacing:0.4px}.top_panel .slider_engine_revo .slide_title{font-family:Montserrat,sans-serif}blockquote,mark,ins,.logo_text,.post_price.price,.theme_scroll_down{font-family:Montserrat,sans-serif}.post_meta{font-family:Montserrat,sans-serif;\tfont-size:12px;\tfont-weight:700;\tfont-style:normal;\tline-height:1.5em;\ttext-decoration:none;\ttext-transform:uppercase;\tletter-spacing:0px;\tmargin-top:0.4em}.search_wrap .search_results .post_meta_item,.search_wrap .search_results .post_counters_item{font-family:Neuton,serif}.logo_text{font-family:Montserrat,sans-serif;\tfont-size:1.8em;\tfont-weight:400;\tfont-style:normal;\tline-height:1.25em;\ttext-decoration:none;\ttext-transform:uppercase;\tletter-spacing:1px}.logo_footer_text{font-family:Montserrat,sans-serif}.menu_main_nav_area{font-size:0.824rem;\tline-height:1.647rem}.menu_main_nav>li,.menu_main_nav>li>a{font-family:Montserrat,sans-serif;\tfont-weight:700;\tfont-style:normal;\ttext-decoration:none;\ttext-transform:none;\tletter-spacing:0px}.menu_main_nav>li ul,.menu_main_nav>li ul>li,.menu_main_nav>li ul>li>a{font-family:Montserrat,sans-serif;\tfont-size:0.824rem;\tfont-weight:700;\tfont-style:normal;\tline-height:1.2rem;\ttext-decoration:none;\ttext-transform:none;\tletter-spacing:0px}.menu_mobile .menu_mobile_nav_area>ul>li,.menu_mobile .menu_mobile_nav_area>ul>li>a{font-family:Montserrat,sans-serif}.menu_mobile .menu_mobile_nav_area>ul>li li,.menu_mobile .menu_mobile_nav_area>ul>li li>a{font-family:Montserrat,sans-serif}.top_panel .sc_layouts_row,.sc_layouts_row input[type=\"text\"]{font-family:Montserrat,sans-serif;\tfont-size:0.824rem;\tfont-weight:700;\tfont-style:normal;\tline-height:1.647rem}.sc_layouts_row .sc_button_wrap .sc_button{font-family:Montserrat,sans-serif;\tfont-size:14px;\tfont-weight:700;\tfont-style:normal;\tline-height:1.5em;\ttext-decoration:none;\ttext-transform:uppercase;\tletter-spacing:0.4px}.sc_layouts_menu_nav>li,.sc_layouts_menu_nav>li>a{font-family:Montserrat,sans-serif;\tfont-weight:700;\tfont-style:normal;\ttext-decoration:none;\ttext-transform:none;\tletter-spacing:0px}.sc_layouts_menu_popup .sc_layouts_menu_nav>li,.sc_layouts_menu_popup .sc_layouts_menu_nav>li>a,.sc_layouts_menu_nav>li ul,.sc_layouts_menu_nav>li ul>li,.sc_layouts_menu_nav>li ul>li>a{font-family:Montserrat,sans-serif;\tfont-size:0.824rem;\tfont-weight:700;\tfont-style:normal;\tline-height:1.2rem;\ttext-decoration:none;\ttext-transform:none;\tletter-spacing:0px}.sc_skills_pie.sc_skills_compact_off .sc_skills_item_title,.sc_dishes_compact .sc_services_item_title,.sc_services_iconed .sc_services_item_title{font-family:Neuton,serif}.sc_slider_controls .slider_controls_wrap>a,.slider_swiper.slider_controls_side .slider_controls_wrap>a,.slider_outer_controls_side .slider_controls_wrap>a{-webkit-border-radius:0; -ms-border-radius:0; border-radius:0}.sc_item_button a,.sc_form button,.sc_button,.sc_price_link,.sc_action_item_link,.sc_matches_item_pair .sc_matches_item_player .post_featured>img{-webkit-border-radius:0; -ms-border-radius:0; border-radius:0}.trx_addons_scroll_to_top,.socials_wrap .social_item a,.sc_matches_other .sc_matches_item_logo1 img,.sc_matches_other .sc_matches_item_logo2 img,.sc_points_table .sc_points_table_logo img{-webkit-border-radius:0; -ms-border-radius:0; border-radius:0}.vc_tta.vc_tta-accordion .vc_tta-panel-title .vc_tta-title-text{font-family:Neuton,serif}.vc_progress_bar.vc_progress_bar_narrow .vc_single_bar .vc_label .vc_label_units{font-family:Montserrat,sans-serif}button,input[type=\"button\"],input[type=\"reset\"],input[type=\"submit\"],.theme_button,.post_item .more-link,.gallery_preview_show .post_readmore,input[type=\"text\"],input[type=\"number\"],input[type=\"email\"],input[type=\"tel\"],input[type=\"password\"],input[type=\"search\"],select,.select_container,textarea,.widget_search .search-field,.woocommerce.widget_product_search .search_field,.widget_display_search #bbp_search,#bbpress-forums #bbp-search-form #bbp_search,.comments_wrap .comments_field input,.comments_wrap .comments_field textarea,.widget_product_tag_cloud a,.widget_tag_cloud a{-webkit-border-radius:0; -ms-border-radius:0; border-radius:0}.select_container:before{-webkit-border-radius:0 0 0 0; -ms-border-radius:0 0 0 0; border-radius:0 0 0 0}textarea.wp-editor-area{-webkit-border-radius:0 0 0 0; -ms-border-radius:0 0 0 0; border-radius:0 0 0 0}/* Radius 50% or 0 */.widget li a img{-webkit-border-radius:0; -ms-border-radius:0; border-radius:0}.scheme_default h1,.scheme_default h2,.scheme_default h3,.scheme_default h4,.scheme_default h5,.scheme_default h6,.scheme_default h1 a,.scheme_default h2 a,.scheme_default h3 a,.scheme_default h4 a,.scheme_default h5 a,.scheme_default h6 a,.scheme_default li a{color:#403535}.scheme_default h1 a:hover,.scheme_default h2 a:hover,.scheme_default h3 a:hover,.scheme_default h4 a:hover,.scheme_default h5 a:hover,.scheme_default h6 a:hover,.scheme_default li a:hover{color:#319966}.scheme_default dt,.scheme_default b,.scheme_default strong,.scheme_default mark,.scheme_default ins{color:#403535}.scheme_default s,.scheme_default strike,.scheme_default del{color:#b7b7b7}.scheme_default code{color:#333333;\tbackground-color:#e8e8e8;\tborder-color:#e3e3e3}.scheme_default code a{color:#319966}.scheme_default code a:hover{color:#72cfd5}.scheme_default a{color:#319966}.scheme_default a:hover{color:#8c8686}.scheme_default blockquote{color:#8c8686}.scheme_default blockquote:before{color:#319966}.scheme_default blockquote a{color:#403535}.scheme_default blockquote a:hover{color:#319966}.scheme_default table th,.scheme_default table th + th,.scheme_default table td + th{border-color:rgba(255,255,255,0.2)}.scheme_default table td,.scheme_default table th + td,.scheme_default table td + td{border-color:rgba(227,227,227,0.3)}.scheme_default table th{color:#ffffff;\tbackground-color:#403535}.scheme_default table>tbody>tr:nth-child(2n+1)>td{background-color:#e9f6f7}.scheme_default table>tbody>tr:nth-child(2n)>td{background-color:#e9f6f7}.scheme_default table th a:hover{color:#ffffff}.scheme_default .sc_table table tr:first-child th,.scheme_default .sc_table table tr:first-child td{background-color:#319966; color:#ffffff; border-color:rgba(227,227,227,0.2)}.scheme_default hr{border-color:#f1f1f1}.scheme_default figure figcaption,.scheme_default .wp-caption .wp-caption-text,.scheme_default .wp-caption .wp-caption-dd,.scheme_default .wp-caption-overlay .wp-caption .wp-caption-text,.scheme_default .wp-caption-overlay .wp-caption .wp-caption-dd{color:#ffffff;\tbackground-color:rgba(64,53,53,0.5)}.scheme_default ul>li:before{color:#319966}.scheme_default fieldset{border-color:#f1f1f1}.scheme_default fieldset legend{color:#403535;\tbackground-color:#ffffff}.scheme_default::-webkit-input-placeholder{color:#b7b7b7}.scheme_default::-moz-placeholder{color:#b7b7b7}.scheme_default:-ms-input-placeholder{color:#b7b7b7}.scheme_default input[type=\"text\"],.scheme_default input[type=\"number\"],.scheme_default input[type=\"email\"],.scheme_default input[type=\"tel\"],.scheme_default input[type=\"search\"],.scheme_default input[type=\"password\"],.scheme_default textarea,.scheme_default textarea.wp-editor-area{color:#8c8686;\tborder-color:#e8e8e8;\tbackground-color:transparent}.scheme_default .select_container,.scheme_default .select2-container .select2-selection,.scheme_default .select2-container .select2-choice{background-color:rgba(255,255,255,0)}.scheme_default .select2-container .select2-selection:hover,.scheme_default .select2-container .select2-choice:hover{background-color:rgba(255,255,255,0)}.scheme_default input[type=\"text\"]:focus,.scheme_default input[type=\"number\"]:focus,.scheme_default input[type=\"email\"]:focus,.scheme_default input[type=\"tel\"]:focus,.scheme_default input[type=\"search\"]:focus,.scheme_default input[type=\"password\"]:focus,.scheme_default select option:hover,.scheme_default select option:focus,.scheme_default textarea:focus,.scheme_default textarea.wp-editor-area:focus{color:#8c8686;\tborder-color:#319966;\tbackground-color:transparent}.scheme_default .select_container:before{color:#8c8686}.scheme_default .select_container:focus:before,.scheme_default .select_container:hover:before{color:#8c8686}.scheme_default .select_container:after{color:#191b1c}.scheme_default .select_container:focus:after,.scheme_default .select_container:hover:after{color:#319966}.scheme_default .select_container select{color:#8c8686}.scheme_default .select_container select:focus{color:#1a1c1d;\tborder-color:#e0e0e0}.scheme_default .widget .post_item .post_info a{color:#403535}.scheme_default .widget .post_item .post_info a:hover{color:#319966}.scheme_default .widget_area .post_item .post_title a,.scheme_default .widget .post_item .post_title a{color:#8c8686}.scheme_default .widget_search form:after,.scheme_default .woocommerce.widget_product_search form:after,.scheme_default .widget_display_search form:after,.scheme_default #bbpress-forums #bbp-search-form:after{color:#319966}.scheme_default .widget_search form:hover:after,.scheme_default .woocommerce.widget_product_search form:hover:after,.scheme_default .widget_display_search form:hover:after,.scheme_default #bbpress-forums #bbp-search-form:hover:after{color:#8c8686}.scheme_default input[type=\"radio\"] + label:before,.scheme_default input[type=\"checkbox\"] + label:before{border-color:#e7eaed;\tbackground-color:#eeeded}.scheme_default button,.scheme_default input[type=\"reset\"],.scheme_default input[type=\"submit\"],.scheme_default input[type=\"button\"]{color:#ffffff;\tbackground-color:#319966;\tborder--color:#319966}.scheme_default input[type=\"submit\"]:hover,.scheme_default input[type=\"reset\"]:hover,.scheme_default input[type=\"button\"]:hover,.scheme_default button:hover,.scheme_default input[type=\"submit\"]:focus,.scheme_default input[type=\"reset\"]:focus,.scheme_default input[type=\"button\"]:focus,.scheme_default button:focus{color:#ffffff;\tbackground-color:#e9f6f7;\tborder-color:#e9f6f7}.scheme_default .wp-editor-container input[type=\"button\"]{background-color:#e8e8e8;\tborder-color:#e3e3e3;\tcolor:#4d4a51;\t-webkit-box-shadow:0 1px 0 0 #dadada; -ms-box-shadow:0 1px 0 0 #dadada; box-shadow:0 1px 0 0 #dadada}.scheme_default .wp-editor-container input[type=\"button\"]:hover,.scheme_default .wp-editor-container input[type=\"button\"]:focus{background-color:#e6e8eb;\tborder-color:#dadada;\tcolor:#319966}.scheme_default .select2-results{color:#191b1c;\tborder-color:#e0e0e0;\tbackground:#eeeded}.scheme_default .select2-results .select2-highlighted{color:#1a1c1d;\tbackground:#e7eaed}.scheme_default .sticky{border-color:#f1f1f1}.scheme_default .sticky .label_sticky{border-top-color:#319966}.scheme_default body{color:#8c8686;\tbackground-color:#ffffff}.scheme_default #page_preloader,.scheme_default.header_position_under .page_content_wrap,.scheme_default .page_wrap{background-color:#ffffff}.scheme_default .preloader_wrap>div{background-color:#319966}.scheme_default .sc_services_default .sc_services_item_button a{background:rgba(255,255,255,0) !important; border-color:rgba(255,255,255,0) !important; color:#319966 !important}.scheme_default .sc_services_default .sc_services_item_button a:hover{background:rgba(255,255,255,0) !important; border-color:#319966 !important; color:#319966 !important}.scheme_default.sc_services_default .sc_services_item_button a{background:rgba(255,255,255,0) !important; border-color:rgba(255,255,255,0) !important; color:#403535 !important}.scheme_default.sc_services_default .sc_services_item_button a:hover{background:rgba(255,255,255,0) !important; border-color:#403535 !important; color:#403535 !important}.scheme_default .sc_item_descr{color:#8c8686}.scheme_default .scheme_dark .sc_team_full .sc_team_item_content,.scheme_default .scheme_dark .sc_promo .sc_promo_descr,.scheme_default .scheme_dark .sc_item_descr{color:rgba(255,255,255,0.8)}.scheme_default .scheme_dark .sc_promo .sc_item_subtitle{color:#ffffff}.scheme_default .scheme_dark .sc_promo.sc_promo_default.sc_promo_size_normal .sc_item_subtitle.sc_promo_subtitle.sc_align_left:after{background-color:rgba(255,255,255,0.6)}.scheme_default .sc_team_full .sc_team_item_subtitle{color:#319966}.scheme_default.top_panel.with_bg_image:before{background-color:rgba(255,255,255,0.7)}.scheme_default.top_panel .slider_engine_revo .slide_subtitle,.scheme_default .top_panel .slider_engine_revo .slide_subtitle{color:#319966}.scheme_default .top_panel_default .top_panel_title,.scheme_default.top_panel_default .top_panel_title{background-color:#e8e8e8}.scheme_default .aquapro_tabs .aquapro_tabs_titles li a{color:#4d4a51;\tbackground-color:#e8e8e8}.scheme_default .aquapro_tabs .aquapro_tabs_titles li a:hover{color:#4b5664;\tbackground-color:#319966}.scheme_default .aquapro_tabs .aquapro_tabs_titles li.ui-state-active a{color:#ffffff;\tbackground-color:#403535}.scheme_default .top_panel.with_bg_image .sc_layouts_row.sc_layouts_row_fixed_on{background-color:#1a1c1d}.scheme_default .post_item{color:#8c8686}.scheme_default .post_meta,.scheme_default .post_meta_item,.scheme_default .post_meta_item a,.scheme_default .post_meta_item:before,.scheme_default .post_meta_item:hover:before,.scheme_default .post_date:before,.scheme_default .post_info .post_info_item,.scheme_default .post_info .post_info_item a,.scheme_default .post_info_counters .post_counters_item,.scheme_default .post_counters .socials_share .socials_caption:before,.scheme_default .post_counters .socials_share .socials_caption:hover:before{color:#8c8686}.scheme_default .post_date a{color:#319966}.scheme_default a.post_meta_item:hover,.scheme_default .post_meta_item a:hover,.scheme_default .post_info .post_info_item a:hover,.scheme_default .post_info_counters .post_counters_item:hover{color:#319966}.scheme_default .post_date a:hover{color:#8c8686}.scheme_default .post_item .post_title a:hover{color:#319966}.scheme_default .post_meta_item.post_categories,.scheme_default .post_meta_item.post_categories a{color:#8c8686}.scheme_default .post_meta_item.post_categories a:hover{color:#319966}.scheme_default .post_meta_item .socials_share .social_items{background-color:#ffffff}.scheme_default .post_meta_item .social_items,.scheme_default .post_meta_item .social_items:before{background-color:#ffffff;\tborder-color:#f1f1f1;\tcolor:#b7b7b7}.scheme_default .post_layout_excerpt + .post_layout_excerpt{border-color:#f1f1f1}.scheme_default .post_layout_classic{border-color:#f1f1f1}.scheme_default.gallery_preview:before{background-color:#ffffff}.scheme_default.gallery_preview{color:#8c8686}.scheme_default .format-audio .post_featured .post_audio_author{color:#8c8686}.scheme_default .format-audio .post_featured.without_thumb .post_audio{border-color:#e9f6f7;\tbackground:#e9f6f7}.scheme_default .format-audio .post_featured.without_thumb,.scheme_default .without_thumb .mejs-controls .mejs-currenttime,.scheme_default .without_thumb .mejs-controls .mejs-duration{color:#8c8686}.scheme_default .post_audio_title{color:#403535}.scheme_default .mejs-container,.scheme_default .mejs-container .mejs-controls,.scheme_default .mejs-embed,.scheme_default .mejs-embed body{background:rgba(64,53,53,0.7)}.scheme_default .mejs-controls .mejs-button,.scheme_default .mejs-controls .mejs-time-rail .mejs-time-current,.scheme_default .mejs-controls .mejs-horizontal-volume-slider .mejs-horizontal-volume-current{color:#ffffff;\tbackground:#319966}.scheme_default .mejs-controls .mejs-button:hover{color:#ffffff;\tbackground:#319966}.scheme_default .mejs-controls .mejs-time-rail .mejs-time-total,.scheme_default .mejs-controls .mejs-time-rail .mejs-time-loaded,.scheme_default .mejs-container .mejs-controls .mejs-horizontal-volume-slider .mejs-horizontal-volume-total{background:#ffffff}.scheme_default .format-aside .post_content_inner{color:#4d4a51;\tbackground-color:#e8e8e8}.scheme_default .format-link .post_content_inner,.scheme_default .format-status .post_content_inner{color:#403535}.scheme_default .format-chat p>b,.scheme_default .format-chat p>strong{color:#403535}.scheme_default .post_layout_chess .post_content_inner:after{background:linear-gradient(to top,#ffffff 0%,rgba(255,255,255,0) 100%) no-repeat scroll right top / 100% 100% rgba(255,255,255,0)}.scheme_default .post_layout_chess_1 .post_meta:before{background-color:#f1f1f1}.scheme_default .nav-links-old{color:#403535}.scheme_default .nav-links-old a:hover{color:#403535;\tborder-color:#403535}.scheme_default .page_links>a,.scheme_default .comments_pagination .page-numbers,.scheme_default .nav-links .page-numbers{color:#319966;\tbackground-color:#e9f6f7}.scheme_default .page_links>a:hover,.scheme_default .page_links>span:not(.page_links_title),.scheme_default .comments_pagination a.page-numbers:hover,.scheme_default .comments_pagination .page-numbers.current,.scheme_default .nav-links a.page-numbers:hover,.scheme_default .nav-links .page-numbers.current{color:#ffffff;\tbackground-color:#319966}.scheme_default .post_item_single .post_header .post_date{color:#b7b7b7}.scheme_default .post_item_single .post_header .post_categories,.scheme_default .post_item_single .post_header .post_categories a{color:#319966}.scheme_default .post_item_single .post_content .post_meta_label,.scheme_default .post_item_single .post_content .post_meta_item:hover .post_meta_label{color:#319966}.scheme_default .post_item_single .post_content .post_tags,.scheme_default .post_item_single .post_content .post_tags a{color:#8c8686}.scheme_default .post_item_single .post_content .post_tags a:hover{color:#319966}.scheme_default .post_item_single .post_content .post_meta .post_share .social_item a{color:#319966 !important;\tbackground-color:rgba(255,255,255,0)!important;\tborder-color:#319966}.scheme_default .post_item_single .post_content .post_meta .post_share .social_item a:hover{color:#ffffff !important;\tbackground-color:#319966!important;\tborder-color:#319966}.scheme_default .post-password-form input[type=\"submit\"]{border-color:#403535}.scheme_default .post-password-form input[type=\"submit\"]:hover,.scheme_default .post-password-form input[type=\"submit\"]:focus{color:#ffffff}.scheme_default .nav-links-single .nav-links{border-color:#f1f1f1}.scheme_default .nav-links-single .nav-links a .meta-nav{color:#b7b7b7}.scheme_default .nav-links-single .nav-links a .post_date{color:#b7b7b7}.scheme_default .nav-links-single .nav-links a:hover .meta-nav,.scheme_default .nav-links-single .nav-links a:hover .post_date{color:#403535}.scheme_default .nav-links-single .nav-links a:hover .post-title{color:#319966}.scheme_default .author_info{color:#8c8686;\tbackground-color:#e9f6f7}.scheme_default .author_info .author_title{color:#403535}.scheme_default .author_info a{color:#403535}.scheme_default .author_info a:hover{color:#319966}.scheme_default .related_wrap{border-color:#f1f1f1}.scheme_default .related_wrap .related_item_style_1 .post_header{background-color:rgba(255,255,255,0.7)}.scheme_default .related_wrap .related_item_style_1:hover .post_header{background-color:#ffffff}.scheme_default .related_wrap .related_item_style_1 .post_date a{color:#8c8686}.scheme_default .related_wrap .related_item_style_1:hover .post_date a{color:#b7b7b7}.scheme_default .related_wrap .related_item_style_1:hover .post_date a:hover{color:#403535}.scheme_default .comments_list_wrap,.scheme_default .comments_list_wrap>ul{border-color:#f1f1f1}.scheme_default .comments_list_wrap li + li,.scheme_default .comments_list_wrap li ul{border-color:#f1f1f1}.scheme_default .comments_list_wrap .comment_info{color:#8c8686}.scheme_default .comments_list_wrap .comment_info .comment_author,.scheme_default .comments_list_wrap .comment_info .comment_date{color:#403535}.scheme_default .comments_list_wrap .comment_counters a{color:#319966}.scheme_default .comments_list_wrap .comment_counters a:before{color:#319966}.scheme_default .comments_list_wrap .comment_counters a:hover:before,.scheme_default .comments_list_wrap .comment_counters a:hover{color:#e9f6f7}.scheme_default .comments_list_wrap .comment_text{color:#8c8686}.scheme_default .comments_list_wrap .comment_reply a{color:#319966}.scheme_default .comments_list_wrap .comment_reply a:hover{color:#403535}.scheme_default .comments_form_wrap{border-color:#f1f1f1}.scheme_default .comments_wrap .comments_notes{color:#b7b7b7}.scheme_default .post_item_404 .page_title{color:#b7b7b7}.scheme_default .post_item_404 .page_description{color:#319966}.scheme_default .post_item_404 .go_home{border-color:#403535}.scheme_default.sidebar .sidebar_inner{background-color:#e8e8e8;\tcolor:#333333}.scheme_default .sidebar_inner .widget + .widget{border-color:#f1f1f1}.scheme_default.sidebar .widget + .widget{border-color:#e3e3e3}.scheme_default.sidebar h1,.scheme_default.sidebar h2,.scheme_default.sidebar h3,.scheme_default.sidebar h4,.scheme_default.sidebar h5,.scheme_default.sidebar h6,.scheme_default.sidebar h1 a,.scheme_default.sidebar h2 a,.scheme_default.sidebar h3 a,.scheme_default.sidebar h4 a,.scheme_default.sidebar h5 a,.scheme_default.sidebar h6 a{color:#4d4a51}.scheme_default.sidebar h1 a:hover,.scheme_default.sidebar h2 a:hover,.scheme_default.sidebar h3 a:hover,.scheme_default.sidebar h4 a:hover,.scheme_default.sidebar h5 a:hover,.scheme_default.sidebar h6 a:hover{color:#319966}.scheme_default .widget_search .search-field{background-color:rgba(255,255,255,0); border-color:#e8e8e8}.scheme_default .widget_search .search-field:focus{background-color:rgba(255,255,255,0); border-color:#e8e8e8}.scheme_default .widget_search .search-field:after{color:#319966}.scheme_default .widget li a:hover{color:#319966}.scheme_default .widget li a{color:#8c8686}.scheme_default .widget.widget_recent_comments span{color:#403535}.scheme_default .widget li:before{background-color:#319966}.scheme_default.sidebar li:before{background-color:#319966}.scheme_default.sidebar a{color:#319966}.scheme_default.sidebar a:hover{color:#72cfd5}.scheme_default.sidebar li>a,.scheme_default.sidebar .post_title>a{color:#4d4a51}.scheme_default.sidebar li>a:hover,.scheme_default.sidebar .post_title>a:hover{color:#319966}.scheme_default.sidebar .widget_archive li{color:#4d4a51}.scheme_default .widget_calendar caption,.scheme_default .widget_calendar tbody td a,.scheme_default .widget_calendar th{color:#8c8686}.scheme_default .widget_calendar table{background-color:#ffffff}.scheme_default.sidebar .widget_calendar tbody td a,.scheme_default.sidebar .widget_calendar th{color:#4d4a51}.scheme_default .widget_calendar caption{color:#319966}.scheme_default .widget_calendar tbody td{color:#8c8686 !important}.scheme_default.sidebar .widget_calendar tbody td{color:#333333 !important}.scheme_default .widget_calendar tbody td a:hover{color:#319966}.scheme_default.sidebar .widget_calendar tbody td a:hover{color:#319966}.scheme_default .widget_calendar tbody td a:after{background-color:#319966}.scheme_default.sidebar .widget_calendar tbody td a:after{background-color:#319966}.scheme_default .widget_calendar td#today{color:#8c8686}.scheme_default .widget_calendar td#today a{color:#4b5664}.scheme_default .widget_calendar td#today a:hover{color:#1d1d1d}.scheme_default .widget_calendar td#today:before{background-color:rgba(255,255,255,0);\tborder-color:#319966}.scheme_default.sidebar .widget_calendar td#today:before{background-color:#319966}.scheme_default .widget_calendar td#today a:after{background-color:#4b5664}.scheme_default .widget_calendar td#today a:hover:after{background-color:#1d1d1d}.scheme_default .widget_calendar #prev a,.scheme_default .widget_calendar #next a{color:#319966}.scheme_default.sidebar .widget_calendar #prev a,.scheme_default.sidebar .widget_calendar #next a{color:#319966}.scheme_default .widget_calendar #prev a:hover,.scheme_default .widget_calendar #next a:hover{color:#8c8686}.scheme_default.sidebar .widget_calendar #prev a:hover,.scheme_default.sidebar .widget_calendar #next a:hover{color:#8c8686}.scheme_default .widget_calendar td#prev a:before,.scheme_default .widget_calendar td#next a:before{background-color:#ffffff}.scheme_default.sidebar .widget_calendar td#prev a:before,.scheme_default.sidebar .widget_calendar td#next a:before{background-color:#e8e8e8}.scheme_default .widget_categories li{color:#403535}.scheme_default.sidebar .widget_categories li{color:#4d4a51}.scheme_default .sc_countdown .sc_countdown_label{color:#319966}.scheme_default .widget_product_tag_cloud a,.scheme_default .widget_tag_cloud a{color:#8c8686;\tbackground-color:#f1f1f1}.scheme_default .widget .widget_title:before,.scheme_default .widget .widgettitle:before{color:#319966}.scheme_default.sidebar .widget_product_tag_cloud a,.scheme_default.sidebar .widget_tag_cloud a{color:#4d4a51;\tbackground-color:#e3e3e3}.scheme_default .widget_product_tag_cloud a:hover,.scheme_default .widget_tag_cloud a:hover{color:#ffffff !important;\tbackground-color:#319966}.scheme_default.sidebar .widget_product_tag_cloud a:hover,.scheme_default.sidebar .widget_tag_cloud a:hover{background-color:#319966}.scheme_default .widget_rss .widget_title a:first-child{color:#319966}.scheme_default.sidebar .widget_rss .widget_title a:first-child{color:#319966}.scheme_default .widget_rss .widget_title a:first-child:hover{color:#e9f6f7}.scheme_default.sidebar .widget_rss .widget_title a:first-child:hover{color:#72cfd5}.scheme_default .widget_rss .rss-date{color:#b7b7b7}.scheme_default.sidebar .widget_rss .rss-date{color:#b7b7b7}.scheme_default.footer_wrap,.footer_wrap .scheme_default.vc_row{background-color:#e8e8e8;\tcolor:#333333}.scheme_default.footer_wrap .widget .post_item .post_info a{color:#333333}.scheme_default.footer_wrap .widget .post_item .post_info a:hover{color:#403535}.scheme_default.footer_wrap .widget .post_item .post_info a.post_counters_item{color:#403535}.scheme_default.footer_wrap .widget .post_item .post_info a.post_counters_item:hover{color:#333333}.scheme_default.footer_wrap .sc_layouts_row_type_normal .sc_layouts_item,.footer_wrap .scheme_default.vc_row .sc_layouts_row_type_normal .sc_layouts_item{color:#333333}.scheme_default.footer_wrap .sc_layouts_row_type_normal .sc_layouts_item a,.scheme_default.footer_wrap .widget li a{color:#319966}.scheme_default.footer_wrap .sc_layouts_row_type_normal .sc_layouts_item a:hover,.scheme_default.footer_wrap .widget li a:hover{color:#403535}.scheme_default.footer_wrap .widget,.scheme_default.footer_wrap .sc_content .wpb_column,.footer_wrap .scheme_default.vc_row .widget,.footer_wrap .scheme_default.vc_row .sc_content .wpb_column{border-color:#e3e3e3}.scheme_default.footer_wrap h1,.scheme_default.footer_wrap h2,.scheme_default.footer_wrap h3,.scheme_default.footer_wrap h4,.scheme_default.footer_wrap h5,.scheme_default.footer_wrap h6,.scheme_default.footer_wrap h1 a,.scheme_default.footer_wrap h2 a,.scheme_default.footer_wrap h3 a,.scheme_default.footer_wrap h4 a,.scheme_default.footer_wrap h5 a,.scheme_default.footer_wrap h6 a,.footer_wrap .scheme_default.vc_row h1,.footer_wrap .scheme_default.vc_row h2,.footer_wrap .scheme_default.vc_row h3,.footer_wrap .scheme_default.vc_row h4,.footer_wrap .scheme_default.vc_row h5,.footer_wrap .scheme_default.vc_row h6,.footer_wrap .scheme_default.vc_row h1 a,.footer_wrap .scheme_default.vc_row h2 a,.footer_wrap .scheme_default.vc_row h3 a,.footer_wrap .scheme_default.vc_row h4 a,.footer_wrap .scheme_default.vc_row h5 a,.footer_wrap .scheme_default.vc_row h6 a{color:#4d4a51}.scheme_default.footer_wrap h1 a:hover,.scheme_default.footer_wrap h2 a:hover,.scheme_default.footer_wrap h3 a:hover,.scheme_default.footer_wrap h4 a:hover,.scheme_default.footer_wrap h5 a:hover,.scheme_default.footer_wrap h6 a:hover,.footer_wrap .scheme_default.vc_row h1 a:hover,.footer_wrap .scheme_default.vc_row h2 a:hover,.footer_wrap .scheme_default.vc_row h3 a:hover,.footer_wrap .scheme_default.vc_row h4 a:hover,.footer_wrap .scheme_default.vc_row h5 a:hover,.footer_wrap .scheme_default.vc_row h6 a:hover{color:#319966}.scheme_default.footer_wrap .widget li:before,.footer_wrap .scheme_default.vc_row .widget li:before{background-color:#319966}.scheme_default.footer_wrap a,.footer_wrap .scheme_default.vc_row a{color:#333333}.scheme_default.footer_wrap a:hover,.footer_wrap .scheme_default.vc_row a:hover{color:#4d4a51}.scheme_default .footer_logo_inner{border-color:#e3e3e3}.scheme_default .footer_logo_inner:after{background-color:#333333}.scheme_default .footer_socials_inner .social_item .social_icons{border-color:#333333;\tcolor:#333333}.scheme_default .footer_socials_inner .social_item .social_icons:hover{border-color:#4d4a51;\tcolor:#4d4a51}.scheme_default .menu_footer_nav_area ul li a{color:#4d4a51}.scheme_default .menu_footer_nav_area ul li a:hover{color:#319966}.scheme_default .menu_footer_nav_area ul li+li:before{border-color:#b7b7b7}.scheme_default .footer_copyright_inner{background-color:#ffffff;\tborder-color:#f1f1f1;\tcolor:#403535}.scheme_default .footer_copyright_inner a{color:#403535}.scheme_default .footer_copyright_inner a:hover{color:#319966}.scheme_default .footer_copyright_inner .copyright_text{color:#8c8686}.scheme_default .theme_button{color:#ffffff !important;\tbackground-color:#319966 !important}.scheme_default .theme_button:hover,.scheme_default .theme_button:focus{color:#1d1d1d !important;\tbackground-color:#3da677 !important}.scheme_default .more-link,.scheme_default .socials_share:not(.socials_type_drop) .social_icons,.scheme_default .comments_wrap .form-submit input[type=\"submit\"]{color:#ffffff;\tbackground-color:#319966}.scheme_default .post_item_none_search .search_wrap .search_submit,.scheme_default .post_item_none_archive .search_wrap .search_submit{color:#403535}.scheme_default .post_item_none_search .search_wrap .search_submit:hover,.scheme_default .post_item_none_archive .search_wrap .search_submit:hover{color:#319966}.scheme_default .more-link:hover,.scheme_default .socials_share:not(.socials_type_drop) .social_icons:hover,.scheme_default .comments_wrap .form-submit input[type=\"submit\"]:hover,.scheme_default .comments_wrap .form-submit input[type=\"submit\"]:focus{color:#319966;\tbackground-color:#e9f6f7}.scheme_default .sc_promo.sc_promo_default.sc_promo_size_normal .sc_item_subtitle.sc_promo_subtitle.sc_align_left:after,.scheme_default .sc_content.sc_align_left .sc_item_subtitle:after,.scheme_default .sc_content.sc_align_right .sc_item_subtitle:after{background-color:#319966}.scheme_default .sc_googlemap_content .sc_content.sc_align_left .sc_item_subtitle:after,.scheme_default .sc_googlemap_content .sc_content.sc_align_right .sc_item_subtitle:after{background-color:rgba(255,255,255,0.6)}.scheme_default .format-video .post_featured.with_thumb .post_video_hover{color:#ffffff}.scheme_default .format-video .post_featured.with_thumb .post_video_hover:hover{color:#ffffff;\tbackground-color:#319966}.scheme_default .theme_scroll_down:hover{color:#319966}.scheme_default .trx_addons_video_player.with_cover .video_hover{background-color:#ffffff}.scheme_default .mfp-bg{background-color:rgba(255,255,255,0.7)}.scheme_default .mfp-image-holder .mfp-close,.scheme_default .mfp-iframe-holder .mfp-close,.scheme_default .mfp-close-btn-in .mfp-close{color:#403535;\tbackground-color:transparent}.scheme_default .mfp-image-holder .mfp-close:hover,.scheme_default .mfp-iframe-holder .mfp-close:hover,.scheme_default .mfp-close-btn-in .mfp-close:hover{color:#319966}/* ================= BUTTON'S HOVERS ==================== */.scheme_default .sc_button_hover_slide_left{background:linear-gradient(to right,\t#e9f6f7 50%,#319966 50%) no-repeat scroll right bottom / 210% 100% #319966 !important}.scheme_default .sc_button_hover_slide_right{background:linear-gradient(to left,\t#e9f6f7 50%,#319966 50%) no-repeat scroll left bottom / 210% 100% #319966 !important}.scheme_default .sc_button_hover_slide_top{background:linear-gradient(to bottom,\t#e9f6f7 50%,#319966 50%) no-repeat scroll right bottom / 100% 210% #319966 !important}.scheme_default .sc_button_hover_slide_bottom{background:linear-gradient(to top,#e9f6f7 50%,#319966 50%) no-repeat scroll right top / 100% 210% #319966 !important}.scheme_default .sc_button_hover_style_dark.sc_button_hover_slide_left{background:linear-gradient(to right,\trgba(255,255,255,0) 50%,#319966 50%) no-repeat scroll right bottom / 210% 100% rgba(255,255,255,0) !important}.scheme_default .sc_button_hover_style_dark.sc_button_hover_slide_right{background:linear-gradient(to left,\trgba(255,255,255,0) 50%,#319966 50%) no-repeat scroll left bottom / 210% 100% rgba(255,255,255,0) !important}.scheme_default .sc_button_hover_style_dark.sc_button_hover_slide_top{background:linear-gradient(to bottom,\trgba(255,255,255,0) 50%,#319966 50%) no-repeat scroll right bottom / 100% 210% rgba(255,255,255,0) !important}.scheme_default .sc_button_hover_style_dark.sc_button_hover_slide_bottom{background:linear-gradient(to top,rgba(255,255,255,0) 50%,#319966 50%) no-repeat scroll right top / 100% 210% rgba(255,255,255,0) !important}.scheme_default .sc_button_hover_style_inverse.sc_button_hover_slide_left{background:linear-gradient(to right,\t#319966 50%,rgba(255,255,255,0) 50%) no-repeat scroll right bottom / 210% 100% rgba(255,255,255,0) !important}.scheme_default .sc_button_hover_style_inverse.sc_button_hover_slide_right{background:linear-gradient(to left,\t#319966 50%,rgba(255,255,255,0) 50%) no-repeat scroll left bottom / 210% 100% rgba(255,255,255,0) !important}.scheme_default .sc_button_hover_style_inverse.sc_button_hover_slide_top{background:linear-gradient(to bottom,\t#319966 50%,rgba(255,255,255,0) 50%) no-repeat scroll right bottom / 100% 210% rgba(255,255,255,0) !important}.scheme_default .sc_button_hover_style_inverse.sc_button_hover_slide_bottom{background:linear-gradient(to top,#319966 50%,rgba(255,255,255,0) 50%) no-repeat scroll right top / 100% 210% rgba(255,255,255,0) !important}.scheme_default .sc_button_hover_style_hover.sc_button_hover_slide_left{background:linear-gradient(to right,\t#e9f6f7 50%,#319966 50%) no-repeat scroll right bottom / 210% 100% #319966 !important}.scheme_default .sc_button_hover_style_hover.sc_button_hover_slide_right{background:linear-gradient(to left,\t#e9f6f7 50%,#319966 50%) no-repeat scroll left bottom / 210% 100% #319966 !important}.scheme_default .sc_button_hover_style_hover.sc_button_hover_slide_top{background:linear-gradient(to bottom,\t#e9f6f7 50%,#319966 50%) no-repeat scroll right bottom / 100% 210% #319966 !important}.scheme_default .sc_button_hover_style_hover.sc_button_hover_slide_bottom{background:linear-gradient(to top,#e9f6f7 50%,#319966 50%) no-repeat scroll right top / 100% 210% #319966 !important}.scheme_default .sc_button_hover_style_alter.sc_button_hover_slide_left{background:linear-gradient(to right,\t#4d4a51 50%,#319966 50%) no-repeat scroll right bottom / 210% 100% #319966 !important}.scheme_default .sc_button_hover_style_alter.sc_button_hover_slide_right{background:linear-gradient(to left,\t#4d4a51 50%,#319966 50%) no-repeat scroll left bottom / 210% 100% #319966 !important}.scheme_default .sc_button_hover_style_alter.sc_button_hover_slide_top{background:linear-gradient(to bottom,\t#4d4a51 50%,#319966 50%) no-repeat scroll right bottom / 100% 210% #319966 !important}.scheme_default .sc_button_hover_style_alter.sc_button_hover_slide_bottom{background:linear-gradient(to top,#4d4a51 50%,#319966 50%) no-repeat scroll right top / 100% 210% #319966 !important}.scheme_default .sc_button_hover_style_alterbd.sc_button_hover_slide_left{background:linear-gradient(to right,\t#319966 50%,#e9f6f7 50%) no-repeat scroll right bottom / 210% 100% #e3e3e3 !important}.scheme_default .sc_button_hover_style_alterbd.sc_button_hover_slide_right{background:linear-gradient(to left,\t#319966 50%,#e9f6f7 50%) no-repeat scroll left bottom / 210% 100% #e3e3e3 !important}.scheme_default .sc_button_hover_style_alterbd.sc_button_hover_slide_top{background:linear-gradient(to bottom,\t#319966 50%,#e9f6f7 50%) no-repeat scroll right bottom / 100% 210% #e3e3e3 !important}.scheme_default .sc_button_hover_style_alterbd.sc_button_hover_slide_bottom{background:linear-gradient(to top,#319966 50%,#e9f6f7 50%) no-repeat scroll right top / 100% 210% #e3e3e3 !important}.scheme_default .sc_button_hover_style_alter.sc_button_hover_slide_left:hover,.scheme_default .sc_button_hover_style_alter.sc_button_hover_slide_right:hover,.scheme_default .sc_button_hover_style_alter.sc_button_hover_slide_top,.scheme_default .sc_button_hover_style_alter.sc_button_hover_slide_bottom{color:#ffffff !important}.scheme_default .sc_button_hover_slide_left:hover,.scheme_default .sc_button_hover_slide_left.active,.scheme_default .ui-state-active .sc_button_hover_slide_left,.scheme_default .vc_active .sc_button_hover_slide_left,.scheme_default .vc_tta-accordion .vc_tta-panel-title:hover .sc_button_hover_slide_left,.scheme_default li.active .sc_button_hover_slide_left{background-position:left bottom !important; color:#319966 !important}.scheme_default .sc_button_hover_slide_right:hover,.scheme_default .sc_button_hover_slide_right.active,.scheme_default .ui-state-active .sc_button_hover_slide_right,.scheme_default .vc_active .sc_button_hover_slide_right,.scheme_default .vc_tta-accordion .vc_tta-panel-title:hover .sc_button_hover_slide_right,.scheme_default li.active .sc_button_hover_slide_right{background-position:right bottom !important; color:#319966 !important}.scheme_default .sc_button_hover_slide_top:hover,.scheme_default .sc_button_hover_slide_top.active,.scheme_default .ui-state-active .sc_button_hover_slide_top,.scheme_default .vc_active .sc_button_hover_slide_top,.scheme_default .vc_tta-accordion .vc_tta-panel-title:hover .sc_button_hover_slide_top,.scheme_default li.active .sc_button_hover_slide_top{background-position:right top !important; color:#319966 !important}.scheme_default .sc_button_hover_slide_bottom:hover,.scheme_default .sc_button_hover_slide_bottom.active,.scheme_default .ui-state-active .sc_button_hover_slide_bottom,.scheme_default .vc_active .sc_button_hover_slide_bottom,.scheme_default .vc_tta-accordion .vc_tta-panel-title:hover .sc_button_hover_slide_bottom,.scheme_default li.active .sc_button_hover_slide_bottom{background-position:right bottom !important; color:#319966 !important}/* ================= IMAGE'S HOVERS ==================== */.scheme_default .post_featured .mask{background-color:rgba(64,53,53,0.7)}.scheme_default .post_featured.hover_dots:hover .mask{background-color:rgba(64,53,53,0.7)}.scheme_default .post_featured.hover_dots .icons span{background-color:#319966}.scheme_default .post_featured.hover_dots .post_info{color:#ffffff}.scheme_default .post_featured.hover_icon .icons a{color:#ffffff}.scheme_default .post_featured.hover_icon a:hover{color:#319966}.scheme_default .post_featured.hover_icons .icons a{color:#403535;\tbackground-color:rgba(255,255,255,0.7)}.scheme_default .post_featured.hover_icons a:hover{color:#4b5664;\tbackground-color:#ffffff}.scheme_default .post_featured.hover_fade .post_info,.scheme_default .post_featured.hover_fade .post_info a,.scheme_default .post_featured.hover_fade .post_info .post_meta_item,.scheme_default .post_featured.hover_fade .post_info .post_meta .post_meta_item:before,.scheme_default .post_featured.hover_fade .post_info .post_meta .post_meta_item:hover:before{color:#4b5664}.scheme_default .post_featured.hover_fade .post_info a:hover{color:#319966}.scheme_default .post_featured.hover_slide .post_info,.scheme_default .post_featured.hover_slide .post_info a,.scheme_default .post_featured.hover_slide .post_info .post_meta_item,.scheme_default .post_featured.hover_slide .post_info .post_meta .post_meta_item:before,.scheme_default .post_featured.hover_slide .post_info .post_meta .post_meta_item:hover:before{color:#4b5664}.scheme_default .post_featured.hover_slide .post_info a:hover{color:#319966}.scheme_default .post_featured.hover_slide .post_info .post_title:after{background-color:#4b5664}.scheme_default .post_featured.hover_pull .post_info,.scheme_default .post_featured.hover_pull .post_info a{color:#4b5664}.scheme_default .post_featured.hover_pull .post_info a:hover{color:#319966}.scheme_default .post_featured.hover_pull .post_info .post_descr{background-color:#403535}.scheme_default .post_featured.hover_border .post_info,.scheme_default .post_featured.hover_border .post_info a,.scheme_default .post_featured.hover_border .post_info .post_meta_item,.scheme_default .post_featured.hover_border .post_info .post_meta .post_meta_item:before,.scheme_default .post_featured.hover_border .post_info .post_meta .post_meta_item:hover:before{color:#4b5664}.scheme_default .post_featured.hover_border .post_info a:hover{color:#319966}.scheme_default .post_featured.hover_border .post_info:before,.scheme_default .post_featured.hover_border .post_info:after{border-color:#4b5664}.scheme_default .post_featured.hover_shop .icons a{color:#403535 !important;\tborder-color:#403535 !important;\tbackground-color:transparent}.scheme_default .post_featured.hover_shop .icons a:hover{color:#ffffff !important;\tborder-color:#403535 !important;\tbackground-color:#403535}.scheme_default .post_featured.hover_shop_buttons .icons .shop_link{color:#ffffff;\tbackground-color:#403535}.scheme_default .post_featured.hover_shop_buttons .icons a:hover{color:#1d1d1d;\tbackground-color:#e9f6f7}.scheme_default .sc_layouts_row_delimiter,.scheme_default.sc_layouts_row_delimiter{border-color:#f1f1f1}.scheme_default .footer_wrap .sc_layouts_row_delimiter,.footer_wrap .scheme_default.vc_row .sc_layouts_row_delimiter,.footer_wrap .scheme_default.sc_layouts_row_delimiter,.scheme_default.footer_wrap .sc_layouts_row_delimiter{border-color:#e3e3e3}.scheme_default .sc_layouts_item_icon{color:#319966}.scheme_default .sc_layouts_item_icon:hover{color:#ffffff}.scheme_default .sc_layouts_item_details_line1{color:#319966}.scheme_default .sc_layouts_item_details_line2{color:#403535}.scheme_default .sc_layouts_row_fixed_on{background-color:rgba(255,255,255,0.9)}.scheme_default .scheme_dark.sc_layouts_row_fixed_on{background-color:#191b1c}/* Row type:Narrow */.scheme_default .sc_layouts_row.sc_layouts_row_type_narrow,.scheme_default.sc_layouts_row.sc_layouts_row_type_narrow{color:#333333;\tbackground-color:#e8e8e8}.scheme_default .sc_layouts_row_type_narrow .sc_layouts_item,.scheme_default.sc_layouts_row_type_narrow .sc_layouts_item{color:#333333}.scheme_default .sc_layouts_row_type_narrow .sc_layouts_item a,.scheme_default.sc_layouts_row_type_narrow .sc_layouts_item a{color:#333333}.scheme_default .sc_layouts_row_type_narrow .sc_layouts_item a:hover,.scheme_default .sc_layouts_row_type_narrow .sc_layouts_item a:hover .sc_layouts_item_icon,.scheme_default.sc_layouts_row_type_narrow .sc_layouts_item a:hover,.scheme_default.sc_layouts_row_type_narrow .sc_layouts_item a:hover .sc_layouts_item_icon{color:#4d4a51}.scheme_default .sc_layouts_row_type_narrow .sc_layouts_item_icon,.scheme_default.sc_layouts_row_type_narrow .sc_layouts_item_icon{color:#319966}.scheme_default .sc_layouts_row_type_narrow .sc_layouts_item_details_line1,.scheme_default .sc_layouts_row_type_narrow .sc_layouts_item_details_line2,.scheme_default.sc_layouts_row_type_narrow .sc_layouts_item_details_line1,.scheme_default.sc_layouts_row_type_narrow .sc_layouts_item_details_line2{color:#333333}.scheme_default .sc_layouts_row_type_narrow .socials_wrap .social_item a,.scheme_default.sc_layouts_row_type_narrow .socials_wrap .social_item a{background-color:transparent;\tcolor:#319966}.scheme_default .sc_layouts_row_type_narrow .socials_wrap .social_item a:hover,.scheme_default.sc_layouts_row_type_narrow .socials_wrap .social_item a:hover{background-color:transparent;\tcolor:#72cfd5}.scheme_default .sc_layouts_row_type_narrow .sc_button_wrap .sc_button,.scheme_default.sc_layouts_row_type_narrow .sc_button_wrap .sc_button{background-color:transparent;\tborder-color:#319966;\tcolor:#319966}.scheme_default .sc_layouts_row_type_narrow .sc_button_wrap .sc_button:hover,.scheme_default.sc_layouts_row_type_narrow .sc_button_wrap .sc_button:hover{background-color:transparent;\tborder-color:#72cfd5;\tcolor:#72cfd5 !important}.scheme_default .sc_layouts_row_type_narrow .search_wrap .search_submit,.scheme_default.sc_layouts_row_type_narrow .search_wrap .search_submit{background-color:transparent;\tcolor:#319966}.scheme_default .sc_layouts_row_type_narrow .search_wrap .search_field,.scheme_default.sc_layouts_row_type_narrow .search_wrap .search_field{color:#333333}.scheme_default .sc_layouts_row_type_narrow .search_wrap .search_field::-webkit-input-placeholder,.scheme_default.sc_layouts_row_type_narrow .search_wrap .search_field::-webkit-input-placeholder{color:#333333}.scheme_default .sc_layouts_row_type_narrow .search_wrap .search_field::-moz-placeholder,.scheme_default.sc_layouts_row_type_narrow .search_wrap .search_field::-moz-placeholder{color:#333333}.scheme_default .sc_layouts_row_type_narrow .search_wrap .search_field:-ms-input-placeholder,.scheme_default.sc_layouts_row_type_narrow .search_wrap .search_field:-ms-input-placeholder{color:#333333}.scheme_default .sc_layouts_row_type_narrow .search_wrap .search_field:focus,.scheme_default.sc_layouts_row_type_narrow .search_wrap .search_field:focus{color:#4d4a51}/* Row type:Compact */.scheme_default .sc_layouts_row_type_compact .sc_layouts_item,.scheme_default.sc_layouts_row_type_compact .sc_layouts_item{color:#ffffff}.scheme_default .sc_layouts_row_type_compact .sc_layouts_item a,.scheme_default.sc_layouts_row_type_compact .sc_layouts_item a{color:#403535}.scheme_default .sc_layouts_row_type_compact .sc_layouts_item a:hover,.scheme_default.sc_layouts_row_type_compact .sc_layouts_item a:hover,.scheme_default .sc_layouts_row_type_compact .sc_layouts_item a:hover .sc_layouts_item_icon,.scheme_default.sc_layouts_row_type_compact .sc_layouts_item a:hover .sc_layouts_item_icon{color:#403535}.scheme_default .sc_layouts_row_type_compact .sc_layouts_item_icon,.scheme_default.sc_layouts_row_type_compact .sc_layouts_item_icon{color:#319966}.scheme_default .sc_layouts_row_type_compact .sc_layouts_item_details_line1,.scheme_default .sc_layouts_row_type_compact .sc_layouts_item_details_line2,.scheme_default.sc_layouts_row_type_compact .sc_layouts_item_details_line1,.scheme_default.sc_layouts_row_type_compact .sc_layouts_item_details_line2{color:#403535}.scheme_default .sc_layouts_row_type_compact a:hover .sc_layouts_item_details_line1,.scheme_default .sc_layouts_row_type_compact a:hover .sc_layouts_item_details_line2,.scheme_default.sc_layouts_row_type_compact a:hover .sc_layouts_item_details_line1,.scheme_default.sc_layouts_row_type_compact a:hover .sc_layouts_item_details_line2{color:#319966}.scheme_default .sc_layouts_row_type_compact .socials_wrap .social_item a,.scheme_default.sc_layouts_row_type_compact .socials_wrap .social_item a{background-color:transparent;\tcolor:#403535}.scheme_default .sc_layouts_row_type_compact .socials_wrap .social_item a:hover,.scheme_default.sc_layouts_row_type_compact .socials_wrap .social_item a:hover{background-color:transparent;\tcolor:#e9f6f7}.scheme_default .sc_layouts_row_type_compact .search_wrap .search_submit,.scheme_default.sc_layouts_row_type_compact .search_wrap .search_submit{background-color:transparent;\tcolor:#319966}.scheme_default .sc_layouts_row_type_compact .search_wrap .search_submit:hover,.scheme_default.sc_layouts_row_type_compact .search_wrap .search_submit:hover{background-color:transparent;\tcolor:#403535}.scheme_default .sc_layouts_row_type_compact .search_wrap.search_style_normal .search_submit,.scheme_default.sc_layouts_row_type_compact .search_wrap.search_style_normal .search_submit{color:#319966}.scheme_default .sc_layouts_row_type_compact .search_wrap.search_style_normal .search_submit:hover,.scheme_default.sc_layouts_row_type_compact .search_wrap.search_style_normal .search_submit:hover{color:#e9f6f7}.scheme_default .sc_layouts_row_type_compact .search_wrap .search_field::-webkit-input-placeholder,.scheme_default.sc_layouts_row_type_compact .search_wrap .search_field::-webkit-input-placeholder{color:#8c8686}.scheme_default .sc_layouts_row_type_compact .search_wrap .search_field::-moz-placeholder,.scheme_default.sc_layouts_row_type_compact .search_wrap .search_field::-moz-placeholder{color:#8c8686}.scheme_default .sc_layouts_row_type_compact .search_wrap .search_field:-ms-input-placeholder,.scheme_default.sc_layouts_row_type_compact .search_wrap .search_field:-ms-input-placeholder{color:#8c8686}/* Row type:Normal */.scheme_default .sc_layouts_row_type_normal .sc_layouts_item,.scheme_default.sc_layouts_row_type_normal .sc_layouts_item{color:#8c8686}.scheme_default .sc_layouts_row_type_normal .sc_layouts_item a,.scheme_default.sc_layouts_row_type_normal .sc_layouts_item a{color:#8c8686}.scheme_default .sc_layouts_row_type_normal .sc_layouts_item a:hover,.scheme_default.sc_layouts_row_type_normal .sc_layouts_item a:hover,.scheme_default .sc_layouts_row_type_normal .sc_layouts_item a:hover .sc_layouts_item_icon,.scheme_default.sc_layouts_row_type_normal .sc_layouts_item a:hover .sc_layouts_item_icon{color:#403535}.scheme_default .sc_layouts_row_type_normal .search_wrap .search_submit,.scheme_default.sc_layouts_row_type_normal .search_wrap .search_submit{background-color:transparent;\tcolor:#e5e5e5}.scheme_default .sc_layouts_row_type_normal .search_wrap .search_submit:hover,.scheme_default.sc_layouts_row_type_normal .search_wrap .search_submit:hover{background-color:transparent;\tcolor:#191b1c}.scheme_default .sc_layouts_logo b{color:#403535}.scheme_default .sc_layouts_logo i{color:#319966}.scheme_default .sc_layouts_logo_text{color:#319966}.scheme_default .sc_layouts_logo:hover .logo_text{color:#403535}.scheme_default .logo_slogan{color:#8c8686}.scheme_default .search_style_expand.search_opened{background-color:#ffffff;\tborder-color:#f1f1f1}.scheme_default .search_style_expand.search_opened .search_submit{color:#8c8686}.scheme_default .search_style_expand .search_submit:hover,.scheme_default .search_style_expand .search_submit:focus{color:#403535}.scheme_default .search_style_fullscreen.search_opened .search_form_wrap{background-color:rgba(255,255,255,0.9)}.scheme_default .search_style_fullscreen.search_opened .search_form{border-color:#403535}.scheme_default .search_style_fullscreen.search_opened .search_close,.scheme_default .search_style_fullscreen.search_opened .search_field,.scheme_default .search_style_fullscreen.search_opened .search_submit{color:#403535}.scheme_default .search_style_fullscreen.search_opened .search_close:hover,.scheme_default .search_style_fullscreen.search_opened .search_field:hover,.scheme_default .search_style_fullscreen.search_opened .search_field:focus{color:#403535}.scheme_default .search_style_fullscreen.search_opened .search_submit:hover,.scheme_default .search_style_fullscreen.search_opened .search_submit:focus{color:#319966}.scheme_default .search_style_fullscreen.search_opened .search_field::-webkit-input-placeholder{color:#403535; opacity:1}.scheme_default .search_style_fullscreen.search_opened .search_field::-moz-placeholder{color:#403535; opacity:1}.scheme_default .search_style_fullscreen.search_opened .search_field:-moz-placeholder{color:#403535; opacity:1}.scheme_default .search_style_fullscreen.search_opened .search_field:-ms-input-placeholder{color:#403535; opacity:1}.scheme_default .search_wrap .search_results{background-color:#ffffff;\tborder-color:#f1f1f1}.scheme_default .search_wrap .search_results:after{background-color:#ffffff;\tborder-left-color:#f1f1f1;\tborder-top-color:#f1f1f1}.scheme_default .search_wrap .search_results .search_results_close{color:#b7b7b7}.scheme_default .search_wrap .search_results .search_results_close:hover{color:#403535}.scheme_default .search_results.widget_area .post_item + .post_item{border-top-color:#f1f1f1}.scheme_default .sc_layouts_title .sc_layouts_title_meta,.scheme_default .sc_layouts_title .post_meta,.scheme_default .sc_layouts_title .post_meta_item,.scheme_default .sc_layouts_title .post_meta_item a,.scheme_default .sc_layouts_title .post_meta_item:before,.scheme_default .sc_layouts_title .post_meta_item:hover:before,.scheme_default .sc_layouts_title .post_meta_item.post_categories,.scheme_default .sc_layouts_title .post_meta_item.post_categories a,.scheme_default .sc_layouts_title .post_date a,.scheme_default .sc_layouts_title .post_date:before,.scheme_default .sc_layouts_title .post_info .post_info_item,.scheme_default .sc_layouts_title .post_info .post_info_item a,.scheme_default .sc_layouts_title .post_info_counters .post_counters_item,.scheme_default .sc_layouts_title .post_counters .socials_share .socials_caption:before,.scheme_default .sc_layouts_title .post_counters .socials_share .socials_caption:hover:before{color:#403535}.scheme_default .sc_layouts_title .post_date a:hover,.scheme_default .sc_layouts_title a.post_meta_item:hover,.scheme_default .sc_layouts_title .post_meta_item a:hover,.scheme_default .sc_layouts_title .post_meta_item.post_categories a:hover,.scheme_default .sc_layouts_title .post_info .post_info_item a:hover,.scheme_default .sc_layouts_title .post_info_counters .post_counters_item:hover{color:#b7b7b7}.scheme_default .sc_layouts_title .sc_layouts_title_description{color:#403535}.scheme_default .sc_layouts_title_breadcrumbs{color:#403535}.scheme_default .sc_layouts_title_breadcrumbs a{color:#403535 !important}.scheme_default .sc_layouts_title_breadcrumbs a:hover{color:#319966 !important}.scheme_default .sc_layouts_menu_nav>li>a{color:#403535}.scheme_default .sc_layouts_menu_nav>li>a:hover,.scheme_default .sc_layouts_menu_nav>li.sfHover>a{color:#319966 !important}.scheme_default .sc_layouts_menu_nav>li.current-menu-item>a,.scheme_default .sc_layouts_menu_nav>li.current-menu-parent>a,.scheme_default .sc_layouts_menu_nav>li.current-menu-ancestor>a{color:#319966 !important}.scheme_default .sc_layouts_menu_popup .sc_layouts_menu_nav,.scheme_default .sc_layouts_menu_nav>li ul{background-color:#319966}.scheme_default .sc_layouts_menu_popup .sc_layouts_menu_nav>li>a,.scheme_default .sc_layouts_menu_nav>li li>a{color:#ffffff !important}.scheme_default .sc_layouts_menu_popup .sc_layouts_menu_nav>li>a:hover,.scheme_default .sc_layouts_menu_popup .sc_layouts_menu_nav>li.sfHover>a,.scheme_default .sc_layouts_menu_nav>li li>a:hover,.scheme_default .sc_layouts_menu_nav>li li.sfHover>a{color:#ffffff !important;\tborder-color:#ffffff}.scheme_default .sc_layouts_menu_nav li[class*=\"columns-\"] li.menu-item-has-children>a:hover,.scheme_default .sc_layouts_menu_nav li[class*=\"columns-\"] li.menu-item-has-children.sfHover>a{color:#333333 !important;\tbackground-color:transparent}.scheme_default .sc_layouts_menu_nav>li li[class*=\"icon-\"]:before{color:#72cfd5}.scheme_default .sc_layouts_menu_nav>li li[class*=\"icon-\"]:hover:before,.scheme_default .sc_layouts_menu_nav>li li[class*=\"icon-\"].shHover:before{color:#72cfd5}.scheme_default .sc_layouts_menu_nav>li li.current-menu-item>a,.scheme_default .sc_layouts_menu_nav>li li.current-menu-parent>a,.scheme_default .sc_layouts_menu_nav>li li.current-menu-ancestor>a{color:#ffffff}.scheme_default .sc_layouts_menu_nav>li li.current-menu-item:before,.scheme_default .sc_layouts_menu_nav>li li.current-menu-parent:before,.scheme_default .sc_layouts_menu_nav>li li.current-menu-ancestor:before{color:#ffffff}.scheme_default.menu_side_wrap .menu_side_button{color:#4d4a51;\tborder-color:#e3e3e3;\tbackground-color:rgba(232,232,232,0.7)}.scheme_default.menu_side_wrap .menu_side_button:hover{color:#1d1d1d;\tborder-color:#72cfd5;\tbackground-color:#319966}.scheme_default .menu_side_inner,.scheme_default .menu_mobile_inner{color:#333333;\tbackground-color:#e8e8e8}.scheme_default .menu_mobile_button{color:#403535}.scheme_default .menu_mobile_button:hover{color:#319966}.scheme_default .menu_mobile_close:before,.scheme_default .menu_mobile_close:after{border-color:#4d4a51}.scheme_default .menu_mobile_close:hover:before,.scheme_default .menu_mobile_close:hover:after{border-color:#319966}.scheme_default .menu_mobile_inner a{color:#4d4a51}.scheme_default .menu_mobile_inner a:hover,.scheme_default .menu_mobile_inner .current-menu-ancestor>a,.scheme_default .menu_mobile_inner .current-menu-item>a{color:#319966}.scheme_default .menu_mobile_inner .search_mobile .search_submit{color:#319966}.scheme_default .menu_mobile_inner .search_mobile .search_submit:focus,.scheme_default .menu_mobile_inner .search_mobile .search_submit:hover{color:#1a1c1d}.scheme_default .menu_mobile_inner .social_item a{color:#319966}.scheme_default .menu_mobile_inner .social_item a:hover{color:#4d4a51}.scheme_default .menu_hover_fade_box .sc_layouts_menu_nav>a:hover,.scheme_default .menu_hover_fade_box .sc_layouts_menu_nav>li>a:hover,.scheme_default .menu_hover_fade_box .sc_layouts_menu_nav>li.sfHover>a{color:#319966;\tbackground-color:#e8e8e8}.scheme_default .menu_hover_slide_line .sc_layouts_menu_nav>li#blob{background-color:#319966}.scheme_default .menu_hover_slide_box .sc_layouts_menu_nav>li#blob{background-color:#e8e8e8}.scheme_default .menu_hover_zoom_line .sc_layouts_menu_nav>li>a:before{background-color:#319966}.scheme_default .menu_hover_path_line .sc_layouts_menu_nav>li:before,.scheme_default .menu_hover_path_line .sc_layouts_menu_nav>li:after,.scheme_default .menu_hover_path_line .sc_layouts_menu_nav>li>a:before,.scheme_default .menu_hover_path_line .sc_layouts_menu_nav>li>a:after{background-color:#319966}.scheme_default .menu_hover_roll_down .sc_layouts_menu_nav>li>a:before{background-color:#319966}.scheme_default .menu_hover_color_line .sc_layouts_menu_nav>li>a:before{background-color:#403535}.scheme_default .menu_hover_color_line .sc_layouts_menu_nav>li>a:after,.scheme_default .menu_hover_color_line .sc_layouts_menu_nav>li.menu-item-has-children>a:after{background-color:#319966}.scheme_default .menu_hover_color_line .sc_layouts_menu_nav>li.sfHover>a,.scheme_default .menu_hover_color_line .sc_layouts_menu_nav>li>a:hover,.scheme_default .menu_hover_color_line .sc_layouts_menu_nav>li>a:focus{color:#319966}.scheme_default.sc_layouts_row .vc_separator.vc_sep_color_grey .vc_sep_line,.scheme_default .sc_layouts_row .vc_separator.vc_sep_color_grey .vc_sep_line{border-color:#e3e3e3}.scheme_default .sc_layouts_cart_items_short{background-color:#403535;\tcolor:#ffffff}.scheme_default .sc_layouts_cart_widget{border-color:#f1f1f1;\tbackground-color:#ffffff;\tcolor:#8c8686}.scheme_default .sc_layouts_cart_widget:after{border-color:#f1f1f1;\tbackground-color:#ffffff}.scheme_default .sc_layouts_cart_widget .sc_layouts_cart_widget_close{color:#b7b7b7}.scheme_default .sc_layouts_cart_widget .sc_layouts_cart_widget_close:hover{color:#403535}.scheme_default .sc_layouts_currency .woocommerce-currency-switcher-form .wSelect-selected{color:#333333}.scheme_default .sc_layouts_currency .woocommerce-currency-switcher-form .wSelect-selected:hover{color:#4d4a51}.scheme_default .sc_layouts_currency .chosen-container .chosen-results,.scheme_default .sc_layouts_currency .woocommerce-currency-switcher-form .wSelect-options-holder,.scheme_default .sc_layouts_currency .woocommerce-currency-switcher-form .dd-options,.scheme_default .sc_layouts_currency .woocommerce-currency-switcher-form .dd-option{background:#e8e8e8;\tcolor:#4d4a51}.scheme_default .sc_layouts_currency .chosen-container .chosen-results li,.scheme_default .sc_layouts_currency .woocommerce-currency-switcher-form .wSelect-option{color:#4d4a51}.scheme_default .sc_layouts_currency .chosen-container .active-result.highlighted,.scheme_default .sc_layouts_currency .chosen-container .active-result.result-selected,.scheme_default .sc_layouts_currency .woocommerce-currency-switcher-form .wSelect-option:hover,.scheme_default .sc_layouts_currency .woocommerce-currency-switcher-form .wSelect-options-holder .wSelect-option-selected,.scheme_default .sc_layouts_currency .woocommerce-currency-switcher-form .dd-option:hover,.scheme_default .sc_layouts_currency .woocommerce-currency-switcher-form .dd-option-selected{color:#319966 !important}.scheme_default .sc_layouts_currency .woocommerce-currency-switcher-form .dd-option-description{color:#333333}.scheme_default .socials_wrap .social_item a,.scheme_default .socials_wrap .social_item a i{color:#b7b7b7}.scheme_default .socials_wrap .social_item a:hover,.scheme_default .socials_wrap .social_item a:hover i{color:#403535}.scheme_default .footer_wrap .sc_layouts_row_type_compact .socials_wrap .social_item a,.scheme_default.footer_wrap .sc_layouts_row_type_compact .socials_wrap .social_item a{color:#403535;\tbackground-color:transparent}.scheme_default .footer_wrap .sc_layouts_row_type_compact .socials_wrap .social_item a:hover,.scheme_default.footer_wrap .sc_layouts_row_type_compact .socials_wrap .social_item a:hover{color:#319966;\tbackground-color:transparent}.scheme_default .trx_addons_accent,.scheme_default .trx_addons_accent>a,.scheme_default .trx_addons_accent>*{color:#319966}.scheme_default .trx_addons_accent>a:hover{color:#403535}.scheme_default .sidebar .trx_addons_accent,.scheme_default.sidebar .trx_addons_accent,.scheme_default .sidebar .trx_addons_accent>a,.scheme_default.sidebar .trx_addons_accent>a,.scheme_default .sidebar .trx_addons_accent>*,.scheme_default.sidebar .trx_addons_accent>*,.scheme_default .footer_wrap .trx_addons_accent,.scheme_default.footer_wrap .trx_addons_accent,.scheme_default .footer_wrap .trx_addons_accent>a,.scheme_default.footer_wrap .trx_addons_accent>a,.scheme_default .footer_wrap .trx_addons_accent>*,.scheme_default.footer_wrap .trx_addons_accent>*{color:#319966}.scheme_default .sidebar .trx_addons_accent>a:hover,.scheme_default.sidebar .trx_addons_accent>a:hover,.scheme_default .footer_wrap .trx_addons_accent>a:hover,.scheme_default.footer_wrap .trx_addons_accent>a:hover{color:#4d4a51}.scheme_default .trx_addons_hover,.scheme_default .trx_addons_hover>*{color:#e9f6f7}.scheme_default .trx_addons_accent_bg{background-color:#319966;\tcolor:#ffffff!important}.scheme_default .trx_addons_inverse{color:#ffffff;\tbackground-color:#403535}.scheme_default .trx_addons_dark,.scheme_default .trx_addons_dark>a{color:#403535}.scheme_default .trx_addons_dark>a:hover{color:#319966}.scheme_default .trx_addons_inverse,.scheme_default .trx_addons_inverse>a{color:#ffffff;\tbackground-color:#403535}.scheme_default .trx_addons_inverse>a:hover{color:#1d1d1d}.scheme_default .trx_addons_dropcap_style_1{color:#ffffff;\tbackground-color:#319966}.scheme_default .trx_addons_dropcap_style_2{color:#1d1d1d;\tbackground-color:rgba(255,255,255,0)}.scheme_default ul[class*=\"trx_addons_list\"]>li:before{color:#319966}.scheme_default ul[class*=\"trx_addons_list\"][class*=\"_circled\"]>li:before{color:#4b5664;\tbackground-color:#319966}.scheme_default .trx_addons_list_parameters>li + li{border-color:#f1f1f1}.scheme_default .trx_addons_tooltip{color:#8c8686;\tborder-color:#8c8686}.scheme_default .trx_addons_tooltip:before{color:#ffffff;\tbackground-color:#403535}.scheme_default .trx_addons_tooltip:after{border-top-color:#403535}.scheme_default blockquote.trx_addons_blockquote_style_1:before,.scheme_default blockquote.trx_addons_blockquote_style_1{blockquote}.scheme_default blockquote.trx_addons_blockquote_style_1 b{color:#ffffff}.scheme_default blockquote.trx_addons_blockquote_style_1 a{}.scheme_default blockquote.trx_addons_blockquote_style_1 cite{color:#319966}.scheme_default blockquote.trx_addons_blockquote_style_1 a:hover{color:#319966}.scheme_default blockquote.trx_addons_blockquote_style_2{color:#ffffff}.scheme_default blockquote.trx_addons_blockquote_style_2:before,.scheme_default blockquote.trx_addons_blockquote_style_2 a,.scheme_default blockquote.trx_addons_blockquote_style_2 cite{color:#4b5664}.scheme_default blockquote.trx_addons_blockquote_style_2 a:hover{color:#1d1d1d}.scheme_default ol>li::before{color:#319966}.scheme_default .trx_addons_hover_mask{background-color:rgba(64,53,53,0.7)}.scheme_default .trx_addons_hover_title{color:#4b5664}.scheme_default .trx_addons_hover_text{color:#b7b7b7}.scheme_default .trx_addons_hover_icon,.scheme_default .trx_addons_hover_links a{color:#4b5664;\tbackground-color:#319966}.scheme_default .trx_addons_hover_icon:hover,.scheme_default .trx_addons_hover_links a:hover{color:#319966 !important;\tbackground-color:#e8e8e8}.scheme_default .trx_addons_blockquote_style_1:before{background-color:#319966}.scheme_default .widget .trx_addons_tabs .trx_addons_tabs_titles li a{color:#333333;\tbackground-color:#e3e3e3}.scheme_default .widget .trx_addons_tabs .trx_addons_tabs_titles li.ui-state-active a,.scheme_default .widget .trx_addons_tabs .trx_addons_tabs_titles li a:hover{color:#4b5664;\tbackground-color:#319966}.scheme_default .slider_swiper .slide_info.slide_info_large{background-color:rgba(255,255,255,0.7)}.scheme_default .slider_swiper .slide_info.slide_info_large:hover{background-color:#ffffff}.scheme_default .slider_swiper .slide_info.slide_info_large .slide_cats a{color:#319966}.scheme_default .slider_swiper .slide_info.slide_info_large .slide_title a{color:#403535}.scheme_default .slider_swiper .slide_info.slide_info_large .slide_date{color:#8c8686}.scheme_default .slider_swiper .slide_info.slide_info_large:hover .slide_date{color:#b7b7b7}.scheme_default .slider_swiper .slide_info.slide_info_large .slide_cats a:hover,.scheme_default .slider_swiper .slide_info.slide_info_large .slide_title a:hover{color:#e9f6f7}.scheme_default .slider_swiper.slider_multi .slide_cats a:hover,.scheme_default .slider_swiper.slider_multi .slide_title a:hover,.scheme_default .slider_swiper.slider_multi a:hover .slide_title{color:#e9f6f7}.scheme_default .sc_slider_controls .slider_controls_wrap>a,.scheme_default .slider_swiper.slider_controls_side .slider_controls_wrap>a,.scheme_default .slider_outer_controls_side .slider_controls_wrap>a{color:rgba(255,255,255,0.5);\tbackground-color:rgba(255,255,255,0);\tborder-color:rgba(255,255,255,0)}.scheme_default .sc_slider_controls .slider_controls_wrap>a:hover,.scheme_default .slider_swiper.slider_controls_side .slider_controls_wrap>a:hover,.scheme_default .slider_outer_controls_side .slider_controls_wrap>a:hover{color:#ffffff;\tbackground-color:rgba(255,255,255,0);\tborder-color:rgba(255,255,255,0)}.scheme_default .slider_swiper.slider_controls_bottom .slider_controls_wrap>a,.scheme_default .slider_outer_controls_bottom .slider_controls_wrap>a{color:#ffffff;\tbackground-color:#403535;\tborder-color:#403535}.scheme_default .slider_swiper.slider_controls_bottom .slider_controls_wrap>a:hover,.scheme_default .slider_outer_controls_bottom .slider_controls_wrap>a:hover{color:#ffffff;\tborder-color:#319966;\tbackground-color:#319966}.scheme_default .slider_swiper .slider_pagination_wrap .swiper-pagination-bullet.swiper-pagination-bullet-active,.scheme_default .slider_swiper_outer .slider_pagination_wrap .swiper-pagination-bullet.swiper-pagination-bullet-active,.scheme_default .slider_swiper .slider_pagination_wrap .swiper-pagination-bullet:hover,.scheme_default .slider_swiper_outer .slider_pagination_wrap .swiper-pagination-bullet:hover{border-color:#319966;\tbackground-color:#319966}.scheme_default .slider_swiper .swiper-pagination-progress .swiper-pagination-progressbar,.scheme_default .slider_swiper_outer .swiper-pagination-progress .swiper-pagination-progressbar{background-color:#319966}.scheme_default .slider_titles_outside_wrap .slide_title a{color:#403535}.scheme_default .slider_titles_outside_wrap .slide_title a:hover{color:#319966}.scheme_default .slider_titles_outside_wrap .slide_cats,.scheme_default .slider_titles_outside_wrap .slide_subtitle{color:#319966}.scheme_default .slider_style_modern .slider_controls_label{color:#ffffff}.scheme_default .slider_style_modern .slider_pagination_wrap{color:#b7b7b7}.scheme_default .slider_style_modern .swiper-pagination-current{color:#403535}.scheme_default .sc_slider_controller .swiper-slide.swiper-slide-active{border-color:#319966}.scheme_default .sc_slider_controller_titles .swiper-slide{background-color:#e8e8e8}.scheme_default .sc_slider_controller_titles .swiper-slide:after{background-color:#e3e3e3}.scheme_default .sc_slider_controller_titles .swiper-slide.swiper-slide-active{background-color:#ffffff}.scheme_default .sc_slider_controller_titles .sc_slider_controller_info_title{color:#4d4a51}.scheme_default .sc_slider_controller_titles .sc_slider_controller_info_number{color:#b7b7b7}.scheme_default .sc_slider_controller_titles .slider_controls_wrap>a{color:#4b5664;\tbackground-color:#319966}.scheme_default .sc_slider_controller_titles .slider_controls_wrap>a:hover{color:#ffffff;\tbackground-color:#403535}.scheme_default .trx_addons_audio_player.without_cover{border-color:#e9f6f7;\tbackground-color:#e9f6f7}.scheme_default .trx_addons_audio_player.with_cover .audio_caption{color:#4b5664}.scheme_default .trx_addons_audio_player .audio_author{color:#8c8686}.scheme_default .trx_addons_audio_player .mejs-container .mejs-controls .mejs-time{color:#8c8686}.scheme_default .trx_addons_audio_player.with_cover .mejs-container .mejs-controls .mejs-time{color:#4b5664}.scheme_default .widget_categories_list .categories_list_style_2 .categories_list_title a:hover{color:#403535}.scheme_default .widget_categories li a{color:#8c8686}.scheme_default .widget_categories li a:hover{color:#319966}.scheme_default .widget_contacts .contacts_info{color:#333333}.scheme_default .widget_contacts .contacts_info span:before{color:#319966}.scheme_default .widget_contacts .contacts_info span a{color:#4d4a51}.scheme_default .widget_contacts .contacts_info span a:hover{color:#319966}/* Attention! This widget placed in the content area and should use main text colors */.scheme_default .sc_recent_news_header{border-color:#403535}.scheme_default .sc_recent_news_header_category_item_more{color:#319966}.scheme_default .sc_recent_news_header_more_categories{border-color:#e3e3e3;\tbackground-color:#e8e8e8}.scheme_default .sc_recent_news_header_more_categories>a{color:#319966}.scheme_default .sc_recent_news_header_more_categories>a:hover{color:#72cfd5;\tbackground-color:#e6e8eb}.scheme_default .sc_recent_news .post_counters_item,.scheme_default .sc_recent_news .post_counters .post_counters_edit a{color:#4b5664;\tbackground-color:#319966}.scheme_default .sc_recent_news .post_counters_item:hover,.scheme_default .sc_recent_news .post_counters .post_counters_edit a:hover{color:#ffffff;\tbackground-color:#403535}.scheme_default .sidebar_inner .sc_recent_news .post_counters_item:hover,.scheme_default .sidebar_inner .sc_recent_news .post_counters .post_counters_edit a:hover{color:#4d4a51;\tbackground-color:#e8e8e8}.scheme_default .sc_recent_news_style_news-magazine .post_accented_border{border-color:#f1f1f1}.scheme_default .sc_recent_news_style_news-excerpt .post_item{border-color:#f1f1f1}.scheme_default .widget_twitter .widget_content .sc_twitter_item,.scheme_default .widget_twitter .widget_content li{color:#8c8686}.scheme_default .widget_twitter .widget_content .sc_twitter_item .sc_twitter_item_icon{color:#319966 !important}.scheme_default .widget_twitter .swiper-pagination-bullet{background-color:#b7b7b7}.scheme_default .widget_twitter .swiper-pagination-bullet-active{background-color:#319966}.scheme_default .widget_twitter .widget_content .sc_twitter_list li{color:#333333}.scheme_default .widget_twitter .widget_content .sc_twitter_list li:before{color:#319966 !important}.scheme_default .trx_addons_video_player.with_cover .video_hover{color:#319966}.scheme_default .trx_addons_video_player.with_cover .video_hover:hover{color:#ffffff;\tbackground-color:#319966}.scheme_default .sidebar_inner .trx_addons_video_player.with_cover .video_hover{color:#319966}.scheme_default .sidebar_inner .trx_addons_video_player.with_cover .video_hover:hover{color:#1d1d1d;\tbackground-color:#319966}.scheme_default .sc_item_title:before{color:#319966}.scheme_default .sc_item_subtitle{color:#319966}.scheme_default .sc_item_subtitle.sc_item_title_style_shadow{color:#b7b7b7}.scheme_default .sc_item_button a:not(.sc_button_bg_image){color:#ffffff;\tbackground-color:#319966;\tborder-color:#319966}.scheme_default .sc_item_button a:not(.sc_button_bg_image):hover{color:#319966;\tbackground-color:#e9f6f7;\tborder-color:#e9f6f7}.scheme_default .scheme_dark .sc_item_title:before{color:#ffffff}.scheme_default .sc_promo .sc_promo_button .sc_button,.scheme_default .sc_item_button a.sc_button_bordered:not(.sc_button_bg_image){color:#319966;\tbackground-color:#ffffff;\tborder-color:#319966}.scheme_default .scheme_dark .sc_promo .sc_promo_button .sc_button{color:#ffffff !important;\tbackground:rgba(255,255,255,0) !important;\tborder-color:#ffffff !important}.scheme_default .scheme_dark .sc_promo .sc_promo_button .sc_button:hover{color:#319966 !important;\tbackground:#ffffff !important;\tborder-color:#ffffff !important}.scheme_default .sc_promo .sc_promo_button .sc_button:hover,.scheme_default .sc_item_button a.sc_button_bordered:not(.sc_button_bg_image):hover{color:#ffffff !important;\tbackground-color:#319966;\tborder-color:#319966}.scheme_default .sc_item_button a.sc_button_inversed:not(.sc_button_bg_image){color:#ffffff;\tbackground-color:#319966;\tborder-color:#319966}.scheme_default .sc_item_button a.sc_button_inversed:not(.sc_button_bg_image):hover{color:#ffffff !important;\tbackground-color:rgba(255,255,255,0);\tborder-color:#ffffff}.scheme_default a.sc_button_simple:not(.sc_button_bg_image),.scheme_default .sc_item_button a.sc_button_simple:not(.sc_button_bg_image),.scheme_default a.sc_button_simple:not(.sc_button_bg_image):before,.scheme_default .sc_item_button a.sc_button_simple:not(.sc_button_bg_image):before,.scheme_default a.sc_button_simple:not(.sc_button_bg_image):after,.scheme_default .sc_item_button a.sc_button_simple:not(.sc_button_bg_image):after{color:#319966}.scheme_default a.sc_button_simple:not(.sc_button_bg_image):hover,.scheme_default .sc_item_button a.sc_button_simple:not(.sc_button_bg_image):hover,.scheme_default a.sc_button_simple:not(.sc_button_bg_image):hover:before,.scheme_default .sc_item_button a.sc_button_simple:not(.sc_button_bg_image):hover:before,.scheme_default a.sc_button_simple:not(.sc_button_bg_image):hover:after,.scheme_default .sc_item_button a.sc_button_simple:not(.sc_button_bg_image):hover:after{color:#e9f6f7 !important}.scheme_default .trx_addons_hover_content .trx_addons_hover_links a{color:#4b5664;\tbackground-color:#319966}.scheme_default .trx_addons_hover_content .trx_addons_hover_links a:hover{color:#1d1d1d;\tbackground-color:#e9f6f7}.scheme_default .sc_action_item .sc_action_item_subtitle{color:#319966}.scheme_default .sc_action_item_date,.scheme_default .sc_action_item_info{color:#403535;\tborder-color:#8c8686}.scheme_default .sc_action_item_description{color:#8c8686}.scheme_default .sc_action_item .sc_action_item_link{color:#4b5664;\tbackground-color:#319966}.scheme_default .sc_action_item .sc_action_item_link:hover{color:#1d1d1d;\tbackground-color:#3da677}.scheme_default .sc_action_item_event.with_image .sc_action_item_inner{background-color:#ffffff}.scheme_default.menu_side_icons .toc_menu_item .toc_menu_icon,.scheme_default .menu_side_inner>.toc_menu_item .toc_menu_icon{background-color:#ffffff;\tborder-color:#f1f1f1;\tcolor:#319966}.scheme_default.menu_side_icons .toc_menu_item:hover .toc_menu_icon,.scheme_default.menu_side_icons .toc_menu_item_active .toc_menu_icon,.scheme_default .menu_side_inner>.toc_menu_item:hover .toc_menu_icon,.scheme_default .menu_side_inner>.toc_menu_item_active .toc_menu_icon{background-color:#319966;\tcolor:#4b5664}.scheme_default.menu_side_icons .toc_menu_icon_default:before,.scheme_default .menu_side_inner>.toc_menu_icon_default:before{background-color:#319966}.scheme_default.menu_side_icons .toc_menu_item:hover .toc_menu_icon_default:before,.scheme_default.menu_side_icons .toc_menu_item_active .toc_menu_icon_default:before,.scheme_default .menu_side_inner>.toc_menu_item:hover .toc_menu_icon_default:before,.scheme_default .menu_side_inner>.toc_menu_item_active .toc_menu_icon_default:before{background-color:#403535}.scheme_default.menu_side_icons .toc_menu_item .toc_menu_description,.scheme_default .menu_side_inner>.toc_menu_item .toc_menu_description{color:#4b5664;\tbackground-color:#319966}.scheme_default.menu_side_dots #toc_menu .toc_menu_item .toc_menu_icon{background-color:#e8e8e8;\tcolor:#333333}.scheme_default.menu_side_dots #toc_menu .toc_menu_item:hover .toc_menu_icon,.scheme_default.menu_side_dots #toc_menu .toc_menu_item_active .toc_menu_icon{color:#319966}.scheme_default.menu_side_dots #toc_menu .toc_menu_item .toc_menu_icon:before{background-color:#319966}.scheme_default.menu_side_dots #toc_menu .toc_menu_item:hover .toc_menu_icon:before{background-color:#72cfd5}.scheme_default .sc_blogger.slider_swiper .swiper-pagination-bullet{border-color:#b7b7b7}.scheme_default .sc_blogger_item{background-color:rgba(255,255,255,0)}.scheme_default .sc_blogger_post_meta{color:#b7b7b7}.scheme_default .sc_blogger_item_title a{color:#403535}.scheme_default .sc_blogger_item_title a:hover{color:#319966}.scheme_default .sc_blogger_post_meta{color:#b7b7b7}.scheme_default .sc_blogger_item_content{color:#8c8686}.scheme_default .sc_blogger_item .more-link{color:#319966}.scheme_default .sc_blogger_item .more-link:hover{color:#4d4a51}.scheme_default .sc_content_number{color:#e6e8eb}.scheme_default .sc_countdown_default .sc_countdown_digits span{color:#403535;\tborder-color:#e9f6f7;\tbackground-color:rgba(255,255,255,0)}.scheme_default .sc_countdown_circle .sc_countdown_digits{color:#403535;\tborder-color:rgba(255,255,255,0);\tbackground-color:rgba(64,53,53,0.2)}.scheme_default .sc_countdown_default .sc_countdown_digits{background-color:#e9f6f7}.scheme_default .sc_countdown_digits,.scheme_default .sc_countdown_default .sc_countdown_separator{color:#403535}.scheme_default .sc_courses.slider_swiper .swiper-pagination-bullet{border-color:#b7b7b7}.scheme_default .sc_courses_default .sc_courses_item{background-color:#e8e8e8}.scheme_default .sc_courses_default .sc_courses_item_categories{background-color:#4d4a51}.scheme_default .sc_courses_default .sc_courses_item_categories a{color:#ffffff}.scheme_default .sc_courses_default .sc_courses_item_categories a:hover{color:#319966}.scheme_default .sc_courses_default .sc_courses_item_meta{color:#b7b7b7}.scheme_default .sc_courses_default .sc_courses_item_date{color:#4d4a51}.scheme_default .sc_courses_default .sc_courses_item_price{color:#319966}.scheme_default .sc_courses_default .sc_courses_item_period{color:#b7b7b7}.scheme_default .courses_single .courses_page_meta{color:#b7b7b7}.scheme_default .courses_single .courses_page_meta_item_date{color:#403535}.scheme_default .courses_single .courses_page_period{color:#b7b7b7}.scheme_default .sc_dishes_default .sc_dishes_item{color:#333333;\tbackground-color:#e8e8e8}.scheme_default .sc_dishes_default .sc_dishes_item_subtitle,.scheme_default .sc_dishes_default .sc_dishes_item_subtitle a{color:#319966}.scheme_default .sc_dishes_default .sc_dishes_item_subtitle a:hover{color:#72cfd5}.scheme_default .sc_dishes_default .sc_dishes_item_featured_left,.scheme_default .sc_dishes_default .sc_dishes_item_featured_right{color:#8c8686;\tbackground-color:transparent}.scheme_default .sc_dishes_default .sc_dishes_item_featured_left .sc_dishes_item_subtitle,.scheme_default .sc_dishes_default .sc_dishes_item_featured_right .sc_dishes_item_subtitle{color:#319966}.scheme_default .sc_dishes_compact .sc_dishes_item{color:#333333;\tbackground-color:#e8e8e8}.scheme_default .sc_dishes_compact .sc_dishes_item_header{color:#ffffff;\tbackground-color:#403535}.scheme_default .sc_dishes_compact .sc_dishes_item_price,.scheme_default .sc_dishes_compact .sc_dishes_item_subtitle a{color:#ffffff}.scheme_default .sc_dishes_compact .sc_dishes_item_price:hover,.scheme_default .sc_dishes_compact .sc_dishes_item:hover .sc_dishes_item_price,.scheme_default .sc_dishes_compact .sc_dishes_item_subtitle a:hover,.scheme_default .sc_dishes_compact .sc_dishes_item:hover .sc_dishes_item_subtitle a{color:#319966}.scheme_default .sc_dishes_compact .sc_dishes_item_title a{color:#319966}.scheme_default .sc_dishes_compact .sc_dishes_item_title a:hover,.scheme_default .sc_dishes_compact .sc_dishes_item:hover .sc_dishes_item_title a{color:#ffffff}.scheme_default .sc_dishes.slider_swiper .swiper-pagination-bullet{border-color:#b7b7b7}.scheme_default .sc_events.slider_swiper .swiper-pagination-bullet{border-color:#b7b7b7}.scheme_default .sc_events_default .sc_events_item{background-color:#e8e8e8}.scheme_default .sc_events_default .sc_events_item_date{background-color:#319966;\tcolor:#4b5664}.scheme_default .sc_events_default .sc_events_item:hover .sc_events_item_date{background-color:#4d4a51}.scheme_default .sc_events_default .sc_events_item_title{color:#4d4a51}.scheme_default .sc_events_default .sc_events_item:hover .sc_events_item_title{color:#319966}.scheme_default .sc_events_default .sc_events_item_button{color:#319966}.scheme_default .sc_events_default .sc_events_item:hover .sc_events_item_button{color:#4d4a51}.scheme_default .sc_events_detailed .sc_events_item,.scheme_default .sc_events_detailed .sc_events_item_date_wrap,.scheme_default .sc_events_detailed .sc_events_item_time_wrap:before,.scheme_default .sc_events_detailed .sc_events_item_button_wrap:before{border-color:#319966}.scheme_default .sc_events_detailed .sc_events_item_date,.scheme_default .sc_events_detailed .sc_events_item_button{color:#319966}.scheme_default .sc_events_detailed .sc_events_item_title{color:#403535}.scheme_default .sc_events_detailed .sc_events_item_time{color:#8c8686}.scheme_default .sc_events_detailed .sc_events_item:hover{background-color:#319966;\tcolor:#4b5664}.scheme_default .sc_events_detailed .sc_events_item:hover,.scheme_default .sc_events_detailed .sc_events_item:hover .sc_events_item_date,.scheme_default .sc_events_detailed .sc_events_item:hover .sc_events_item_button,.scheme_default .sc_events_detailed .sc_events_item:hover .sc_events_item_title,.scheme_default .sc_events_detailed .sc_events_item:hover .sc_events_item_time{color:#1d1d1d}.scheme_default .sc_events_detailed .sc_events_item:hover,.scheme_default .sc_events_detailed .sc_events_item:hover .sc_events_item_date_wrap,.scheme_default .sc_events_detailed .sc_events_item:hover .sc_events_item_time_wrap:before,.scheme_default .sc_events_detailed .sc_events_item:hover .sc_events_item_button_wrap:before{border-color:#1d1d1d}.scheme_default.sc_form{background-color:#ffffff}.scheme_default .sc_form_field_title{color:#403535}.scheme_default .sc_form .sc_form_field input[type=\"text\"],.scheme_default .sc_form .sc_form_field input[type=\"password\"],.scheme_default .sc_form .sc_form_field input[type=\"email\"],.scheme_default .sc_form .sc_form_field input[type=\"number\"],.scheme_default .sc_form .sc_form_field input[type=\"tel\"],.scheme_default .sc_form .sc_form_field input[type=\"search\"],.scheme_default .sc_form .sc_form_field textarea{color:#8c8686;\tborder-color:#e8e8e8;\tbackground-color:transparent}.scheme_default .sc_form .sc_form_field input[type=\"text\"]:hover,.scheme_default .sc_form .sc_form_field input[type=\"password\"]:hover,.scheme_default .sc_form .sc_form_field input[type=\"email\"]:hover,.scheme_default .sc_form .sc_form_field input[type=\"number\"]:hover,.scheme_default .sc_form .sc_form_field input[type=\"tel\"]:hover,.scheme_default .sc_form .sc_form_field input[type=\"search\"]:hover,.scheme_default .sc_form .sc_form_field textarea:hover{color:#8c8686;\tborder-color:#319966;\tbackground-color:transparent}.scheme_default .sc_form .sc_form_field input[type=\"text\"]:focus,.scheme_default .sc_form .sc_form_field input[type=\"password\"]:focus,.scheme_default .sc_form .sc_form_field input[type=\"email\"]:focus,.scheme_default .sc_form .sc_form_field input[type=\"number\"]:focus,.scheme_default .sc_form .sc_form_field input[type=\"tel\"]:focus,.scheme_default .sc_form .sc_form_field input[type=\"search\"]:focus,.scheme_default .sc_form .sc_form_field textarea:focus{color:#8c8686;\tborder-color:#319966;\tbackground-color:transparent}.scheme_default .sc_form .sc_form_info_icon{color:#319966}.scheme_default .sc_form .sc_form_info_data>a,.scheme_default .sc_form .sc_form_info_data>span{color:#403535}.scheme_default .sc_form .sc_form_info_data>a:hover{color:#319966}.scheme_default [class*=\"sc_input_hover_\"] .sc_form_field_content{color:#403535}.scheme_default .sc_input_hover_accent input[type=\"text\"]:focus,.scheme_default .sc_input_hover_accent input[type=\"number\"]:focus,.scheme_default .sc_input_hover_accent input[type=\"email\"]:focus,.scheme_default .sc_input_hover_accent input[type=\"password\"]:focus,.scheme_default .sc_input_hover_accent input[type=\"search\"]:focus,.scheme_default .sc_input_hover_accent select:focus,.scheme_default .sc_input_hover_accent textarea:focus{/*box-shadow:0px 0px 0px 2px #319966;*/\tborder-color:#319966 !important}.scheme_default .sc_input_hover_accent .sc_form_field_hover:before{color:rgba(49,153,102,0.2)}.scheme_default .sc_input_hover_path .sc_form_field_graphic{stroke:#e7eaed}.scheme_default .sc_input_hover_jump .sc_form_field_content{color:#1a1c1d}.scheme_default .sc_input_hover_jump .sc_form_field_content:before{color:#319966}.scheme_default .sc_input_hover_jump input[type=\"text\"],.scheme_default .sc_input_hover_jump input[type=\"number\"],.scheme_default .sc_input_hover_jump input[type=\"email\"],.scheme_default .sc_input_hover_jump input[type=\"password\"],.scheme_default .sc_input_hover_jump input[type=\"search\"],.scheme_default .sc_input_hover_jump textarea{border-color:#e7eaed}.scheme_default .sc_input_hover_jump input[type=\"text\"]:focus,.scheme_default .sc_input_hover_jump input[type=\"number\"]:focus,.scheme_default .sc_input_hover_jump input[type=\"email\"]:focus,.scheme_default .sc_input_hover_jump input[type=\"password\"]:focus,.scheme_default .sc_input_hover_jump input[type=\"search\"]:focus,.scheme_default .sc_input_hover_jump textarea:focus{border-color:#319966 !important}.scheme_default .sc_input_hover_underline .sc_form_field_hover:before{background-color:#e7eaed}.scheme_default .sc_input_hover_underline input:focus + .sc_form_field_hover:before,.scheme_default .sc_input_hover_underline textarea:focus + .sc_form_field_hover:before,.scheme_default .sc_input_hover_underline input.filled + .sc_form_field_hover:before,.scheme_default .sc_input_hover_underline textarea.filled + .sc_form_field_hover:before{background-color:#319966}.scheme_default .sc_input_hover_underline .sc_form_field_content{color:#1a1c1d}.scheme_default .sc_input_hover_underline input:focus,.scheme_default .sc_input_hover_underline textarea:focus,.scheme_default .sc_input_hover_underline input.filled,.scheme_default .sc_input_hover_underline textarea.filled,.scheme_default .sc_input_hover_underline input:focus + .sc_form_field_hover>.sc_form_field_content,.scheme_default .sc_input_hover_underline textarea:focus + .sc_form_field_hover>.sc_form_field_content,.scheme_default .sc_input_hover_underline input.filled + .sc_form_field_hover>.sc_form_field_content,.scheme_default .sc_input_hover_underline textarea.filled + .sc_form_field_hover>.sc_form_field_content{color:#319966 !important}.scheme_default .sc_input_hover_iconed .sc_form_field_hover{color:#191b1c}.scheme_default .sc_input_hover_iconed input:focus + .sc_form_field_hover,.scheme_default .sc_input_hover_iconed textarea:focus + .sc_form_field_hover,.scheme_default .sc_input_hover_iconed input.filled + .sc_form_field_hover,.scheme_default .sc_input_hover_iconed textarea.filled + .sc_form_field_hover{color:#1a1c1d}.scheme_default .sc_googlemap_content,.scheme_default.sc_googlemap_content{color:rgba(255,255,255,0.6);\tbackground-color:#319966}.scheme_default .sc_googlemap_content .sc_item_title,.scheme_default.sc_googlemap_content .sc_item_title,.scheme_default .sc_googlemap_content .sc_item_subtitle,.scheme_default.sc_googlemap_content .sc_item_subtitle{color:#ffffff}.scheme_default .sc_googlemap_content b,.scheme_default .sc_googlemap_content strong,.scheme_default.sc_googlemap_content b,.scheme_default.sc_googlemap_content strong{color:#403535}.scheme_default .sc_googlemap_content_detailed:before{color:#319966}.scheme_default .sc_icons .sc_icons_icon{color:#319966}.scheme_default .sc_icons .sc_icons_item_linked:hover .sc_icons_icon{color:#403535}.scheme_default .sc_icons .sc_icons_item_title{color:#319966}.scheme_default.footer_wrap .sc_icons .sc_icons_item_title{color:#403535}.scheme_default.footer_wrap .sc_icons .sc_icons_item_description{color:#8c8686}.scheme_default .sc_icons_item_description,.scheme_default .sc_icons_modern .sc_icons_item_description{color:#403535}/* Sports:Matches and Players */.scheme_default .sc_sport_default .sc_sport_item_subtitle .sc_sport_item_date{color:#b7b7b7}.scheme_default .sc_matches_main .swiper-pagination .swiper-pagination-bullet{border-color:#f1f1f1}.scheme_default .sc_matches_main .sc_matches_item_score a{color:#403535}.scheme_default .sc_matches_main .sc_matches_item_score a:hover{color:#319966}.scheme_default .sc_matches_other .sc_matches_item_link{color:#4d4a51;\tbackground-color:#e8e8e8}.scheme_default .sc_matches_other .sc_matches_item_club{color:#b7b7b7}.scheme_default .sc_matches_other .sc_matches_item_date{color:#4d4a51;\tbackground-color:#e3e3e3}.scheme_default .sc_matches_other .sc_matches_item_link:hover{background-color:#e6e8eb}.scheme_default .sc_matches_other .sc_matches_item_link:hover .sc_matches_item_date{background-color:#dadada}.scheme_default .sc_points_table td a{color:#4d4a51}.scheme_default .sc_points_table tr:hover a,.scheme_default .sc_points_table td a:hover{background-color:#72cfd5 !important;\tcolor:#1d1d1d !important}.scheme_default .sc_points_table tr.sc_points_table_accented_top a{background-color:rgba(49,153,102,0.7)}.scheme_default .sc_points_table tr.sc_points_table_accented_bottom a{background-color:rgba(232,232,232,0.2)}.scheme_default .sc_price{color:#8c8686;\tbackground-color:#e9f6f7;\tborder-color:#e9f6f7}.scheme_default.sc_price .sc_price_icon{color:#319966}.scheme_default.sc_price .sc_price_icon:hover{color:#e9f6f7}.scheme_default .sc_price_info .sc_price_subtitle{color:#319966}.scheme_default .sc_price_info .sc_price_title a{color:#403535}.scheme_default .sc_price_info .sc_price_title a:hover{color:#319966}.scheme_default .sc_price_info .sc_price_price{color:#319966}.scheme_default .sc_price_info .sc_price_description,.scheme_default .sc_price_info .sc_price_details{color:#8c8686}.scheme_default .sc_price_info .sc_price_link{color:#ffffff;\tbackground-color:#319966}.scheme_default .sc_price_info .sc_price_link:hover{color:#319966;\tbackground-color:#e9f6f7}.scheme_default .sc_promo_icon{color:#319966}.scheme_default .sc_promo .sc_promo_title{color:#403535}.scheme_default .sc_promo .sc_promo_descr{color:#8c8686}.scheme_default .sc_promo .sc_promo_content{color:#8c8686}.scheme_default .sc_promo_modern .sc_promo_link2{color:#4b5664;\tbackground-color:#319966 !important}.scheme_default .sc_promo_modern .sc_promo_link2:hover{color:#ffffff;\tbackground-color:#403535}.scheme_default.sc_promo .sc_promo_text.trx_addons_stretch_height,.scheme_default.sc_promo .sc_promo_text_inner{background-color:#e8e8e8}.scheme_default.sc_promo .sc_promo_title{color:#319966}.scheme_default.sc_promo .sc_promo_subtitle{color:#72cfd5}.scheme_default.sc_promo .sc_promo_descr{color:#4d4a51}.scheme_default.sc_promo .sc_promo_content{color:#333333}.scheme_default .sc_services .sc_services_item_number{color:#e6e8eb}.scheme_default .sc_services_default .sc_services_item{color:#8c8686;\tbackground-color:rgba(255,255,255,0)}.scheme_default .sc_services_default .sc_services_item_icon{color:#ffffff;\tborder-color:rgba(255,255,255,0);\tbackground-color:rgba(255,255,255,0)}.scheme_default.sc_services_default .sc_services_item_icon{color:#319966;\tborder-color:rgba(255,255,255,0);\tbackground-color:rgba(255,255,255,0)}.scheme_default .sc_services_default .sc_services_item_icon:after{background-color:#319966}.scheme_default.sc_services_default .sc_services_item_icon:after{background-color:#403535}.scheme_default .sc_services_default .sc_services_item:hover .sc_services_item_icon:after{background-color:#ffffff}.scheme_default .sc_services_default .sc_services_item:hover .sc_services_item_icon{color:#319966;\tborder-color:rgba(255,255,255,0);\tbackground-color:rgba(255,255,255,0)}.scheme_default.sc_services_default .sc_services_item_content{color:rgba(64,53,53,0.8)}.scheme_default.sc_services_default .sc_services_item_title a:hover{color:#e9f6f7}.scheme_default .sc_services_default .sc_services_item_subtitle{color:#319966}.scheme_default .menu_mobile .search_mobile .search_field{border-color:#319966}.scheme_default .sc_services_default .sc_services_item_featured_left,.scheme_default .sc_services_default .sc_services_item_featured_right,.scheme_default .sc_services_list .sc_services_item{color:#8c8686;\tbackground-color:transparent}.scheme_default .sc_services_default .sc_services_item_featured_left .sc_services_item_icon,.scheme_default .sc_services_default .sc_services_item_featured_right .sc_services_item_icon,.scheme_default .sc_services_list .sc_services_item_icon{color:#319966;\tborder-color:#319966}.scheme_default .sc_services_list .sc_services_item:hover .sc_services_item_icon{color:#e9f6f7}.scheme_default .sc_services_default .sc_services_item_featured_left:hover .sc_services_item_icon,.scheme_default .sc_services_default .sc_services_item_featured_right:hover .sc_services_item_icon,.scheme_default .sc_services_list .sc_services_item_featured_left:hover .sc_services_item_icon,.scheme_default .sc_services_list .sc_services_item_featured_right:hover .sc_services_item_icon{color:#2ab079;\tbackground-color:#319966;\tborder-color:#319966}.scheme_default .sc_services_default .sc_services_item_featured_left .sc_services_item_subtitle,.scheme_default .sc_services_default .sc_services_item_featured_right .sc_services_item_subtitle{color:#319966}.scheme_default .sc_services_light .sc_services_item_icon{color:#319966}.scheme_default .sc_services_light .sc_services_item:hover .sc_services_item_icon{color:#e9f6f7}.scheme_default .sc_services_iconed .sc_services_item{color:#333333;\tbackground-color:#e8e8e8}.scheme_default .sc_services_iconed .sc_services_item_icon:hover,.scheme_default .sc_services_iconed .sc_services_item:hover .sc_services_item_icon,.scheme_default .sc_services_iconed .sc_services_item_header .sc_services_item_subtitle a:hover,.scheme_default .sc_services_iconed .sc_services_item:hover .sc_services_item_header .sc_services_item_subtitle a{color:#319966}.scheme_default .sc_services_iconed .sc_services_item_header .sc_services_item_title a{color:#319966}.scheme_default .sc_services_iconed .sc_services_item_header .sc_services_item_title a:hover,.scheme_default .sc_services_iconed .sc_services_item:hover .sc_services_item_header .sc_services_item_title a{color:#fff}.scheme_default .sc_services_iconed .sc_services_item .sc_services_item_header .sc_services_item_subtitle a{color:#fff}.scheme_default .sc_services_iconed .sc_services_item:hover .sc_services_item_header .sc_services_item_subtitle a,.scheme_default .sc_services_iconed .sc_services_item .sc_services_item_header .sc_services_item_subtitle a:hover{color:#319966}.scheme_default .sc_services_iconed .sc_services_item_content .sc_services_item_title a{color:#4d4a51}.scheme_default .sc_services_iconed .sc_services_item_content .sc_services_item_title a:hover,.scheme_default .sc_services_iconed .sc_services_item:hover .sc_services_item_content .sc_services_item_title a{color:#319966}.scheme_default .sc_services.slider_swiper .swiper-pagination-bullet{border-color:#b7b7b7}.scheme_default .sc_services_list .sc_services_item_featured_left .sc_services_item_number,.scheme_default .sc_services_list .sc_services_item_featured_right .sc_services_item_number{color:#b7b7b7}.scheme_default .sc_services_hover .sc_services_item_icon,.scheme_default .sc_services_hover .sc_services_item_title a:hover,.scheme_default .sc_services_hover .sc_services_item_subtitle a:hover{color:#319966}.scheme_default .sc_services_hover [class*=\"column-\"]:nth-child(2n) .sc_services_item.with_image .sc_services_item_header.without_image,.scheme_default .sc_services_hover .swiper-slide:nth-child(2n) .sc_services_item.with_image .sc_services_item_header.without_image{background-color:#e6e8eb}.scheme_default .sc_services_hover [class*=\"column-\"]:nth-child(2n+1) .sc_services_item.with_image .sc_services_item_header.without_image,.scheme_default .sc_services_hover .swiper-slide:nth-child(2n+1) .sc_services_item.with_image .sc_services_item_header.without_image{background-color:#e8e8e8}.scheme_default .sc_services_hover .sc_services_item.with_image .sc_services_item_header.without_image .sc_services_item_icon,.scheme_default .sc_services_hover .sc_services_item.with_image .sc_services_item_header.without_image .sc_services_item_number{color:#b7b7b7}.scheme_default .sc_services_hover .sc_services_item.with_image .sc_services_item_header.without_image .sc_services_item_title a{color:#4d4a51}.scheme_default .sc_services_hover .sc_services_item.with_image:hover .sc_services_item_header.without_image .sc_services_item_title a,.scheme_default .sc_services_hover .sc_services_item.with_image .sc_services_item_header.without_image .sc_services_item_title a:hover{color:#319966}.scheme_default .sc_services_hover .sc_services_item.with_image .sc_services_item_header.without_image .sc_services_item_subtitle a{color:#319966}.scheme_default .sc_services_hover .sc_services_item.with_image:hover .sc_services_item_header.without_image .sc_services_item_subtitle a,.scheme_default .sc_services_hover .sc_services_item.with_image .sc_services_item_header.without_image .sc_services_item_subtitle a:hover{color:#4d4a51}.scheme_default .sc_services_hover .sc_services_item.with_image .sc_services_item_header.without_image .sc_services_item_text{color:#333333}.scheme_default .sc_services_chess .sc_services_item{color:#333333;\tbackground-color:#e8e8e8}.scheme_default .sc_services_chess .sc_services_item_title a{color:#4d4a51}.scheme_default .sc_services_chess .sc_services_item_title a:hover{color:#319966}.scheme_default .sc_services_chess .sc_services_item:hover{color:#b7b7b7;\tbackground-color:#403535}.scheme_default .sc_services_chess .sc_services_item:hover .sc_services_item_title a{color:#ffffff}.scheme_default .sc_services_chess .sc_services_item:hover .sc_services_item_title a:hover{color:#319966}.scheme_default .sc_services_tabs_simple .sc_services_item_icon{color:#319966}.scheme_default .sc_services_tabs_simple .sc_services_item:hover .sc_services_item_icon,.scheme_default .sc_services_tabs_simple .sc_services_item:hover .sc_services_item_title,.scheme_default .sc_services_tabs_simple .sc_services_item:hover .sc_services_item_subtitle,.scheme_default .sc_services_tabs_simple .sc_services_tabs_list_item_active .sc_services_item_icon,.scheme_default .sc_services_tabs_simple .sc_services_tabs_list_item_active .sc_services_item_title,.scheme_default .sc_services_tabs_simple .sc_services_tabs_list_item_active .sc_services_item_subtitle{color:#e9f6f7}.scheme_default .sc_services_tabs .sc_services_item_content{color:#333333;\tbackground-color:#e8e8e8}.scheme_default .sc_services_tabs .sc_services_item_title a{color:#4d4a51}.scheme_default .sc_services_tabs .sc_services_item_title a:hover{color:#319966}.scheme_default .sc_services_tabs .sc_services_tabs_list_item .sc_services_item_icon{color:#319966}.scheme_default .sc_services_tabs .sc_services_tabs_list_item .sc_services_item_number{color:#b7b7b7}.scheme_default .sc_services_tabs .sc_services_tabs_list_item{background-color:#e8e8e8}.scheme_default .sc_services_tabs .sc_services_tabs_list_item:nth-child(2n+2){background-color:#e6e8eb}.scheme_default .sc_services_tabs .sc_services_tabs_list_item:hover,.scheme_default .sc_services_tabs .sc_services_tabs_list_item:nth-child(2n+2):hover{background-color:#dadada}.scheme_default .sc_services_tabs .sc_services_tabs_list_item .sc_services_item_title{color:#4d4a51}.scheme_default .sc_services_tabs .sc_services_tabs_list_item:hover .sc_services_item_title{color:#319966}.scheme_default .sc_services_tabs .sc_services_tabs_list_item:hover .sc_services_item_icon{color:#72cfd5}.scheme_default .sc_services_tabs .sc_services_tabs_list_item:hover .sc_services_item_number{color:#333333}.scheme_default .sc_services_tabs .sc_services_tabs_list_item.sc_services_tabs_list_item_active{background-color:#4d4a51 !important}.scheme_default .sc_services_tabs .sc_services_tabs_list_item.sc_services_tabs_list_item_active .sc_services_item_title{color:#ffffff}.scheme_default .sc_services_tabs .sc_services_tabs_list_item.sc_services_tabs_list_item_active .sc_services_item_icon{color:#319966}.scheme_default .sc_services_tabs .sc_services_tabs_list_item.sc_services_tabs_list_item_active .sc_services_item_number{color:#319966}/* Skills (Counters) */.scheme_default .sc_skills_counter .sc_skills_icon{color:#403535}.scheme_default .sc_skills .sc_skills_total{color:#319966}.scheme_default .sc_skills .sc_skills_item_title,.scheme_default .sc_skills .sc_skills_legend_title,.scheme_default .sc_skills .sc_skills_legend_value{color:#403535}.scheme_default .sc_skills_counter .sc_skills_column + .sc_skills_column:before{background-color:#f1f1f1}.scheme_default .socials_wrap .social_item a{color:#8c8686;\tbackground-color:rgba(255,255,255,0)}.scheme_default .socials_wrap .social_item a:hover{color:#ffffff;\tbackground-color:#319966;\tborder-color:#319966}.scheme_default .sidebar_inner .socials_wrap .social_item a{color:#4d4a51;\tbackground-color:#e6e8eb}.scheme_default .sidebar_inner .socials_wrap .social_item a:hover{color:#2ab079;\tbackground-color:#72cfd5}.scheme_default .footer_wrap .socials_wrap .social_item a,.scheme_default.footer_wrap .socials_wrap .social_item a{color:#333333;\tbackground-color:rgba(255,255,255,0);\tborder-color:#333333}.scheme_default .footer_wrap .socials_wrap .social_item a:hover,.scheme_default.footer_wrap .socials_wrap .social_item a:hover{color:#ffffff;\tbackground-color:#319966;\tborder-color:#319966}.scheme_default .sc_testimonials_item_content{color:#403535}.scheme_default .sc_testimonials_item_content:before{color:#319966}.scheme_default .sc_testimonials_item_author_title{color:#403535}.scheme_default .sc_testimonials_item_author_subtitle{color:#b7b7b7}.scheme_default .sc_testimonials_simple .sc_testimonials_item_author_data:before{background-color:#b7b7b7}.scheme_default .sc_testimonials_simple [class*=\"column\"] .sc_testimonials_item_author_data{border-color:#b7b7b7}.scheme_default .sc_testimonials .swiper-pagination-bullet{background-color:#b7b7b7}.scheme_default .sc_testimonials .swiper-pagination-bullet-active{background-color:#319966}.scheme_default .sc_team_default .sc_team_item{color:#8c8686;\tbackground-color:rgba(255,255,255,0)}.scheme_default .sc_team_default .sc_team_item_subtitle{color:#8c8686}.scheme_default .sc_team_full .sc_team_item_socials .social_item a,.scheme_default .sc_team_default .sc_team_item_socials .social_item a,.scheme_default .team_member_page .team_member_socials .social_item a{color:#319966;\tbackground-color:rgba(255,255,255,0);\tborder-color:#319966}.scheme_default .scheme_dark .sc_team_default .sc_team_item_subtitle{color:rgba(255,255,255,0.6)}.scheme_default .sc_team_full .sc_team_item_socials .social_item a:hover,.scheme_default .sc_team_default .sc_team_item_socials .social_item a:hover,.scheme_default .team_member_page .team_member_socials .social_item a:hover{color:#ffffff;\tbackground-color:#319966}.scheme_default .scheme_dark .sc_team_full .sc_team_item_socials .social_item a,.scheme_default .scheme_dark .sc_team_default .sc_team_item_socials .social_item a,.scheme_default .scheme_dark .team_member_page .team_member_socials .social_item a{color:rgba(255,255,255,0.6);\tbackground-color:rgba(255,255,255,0);\tborder-color:rgba(255,255,255,0.6)}.scheme_default .scheme_dark .sc_team_full .sc_team_item_socials .social_item a:hover,.scheme_default .scheme_dark .sc_team_default .sc_team_item_socials .social_item a:hover,.scheme_default .scheme_dark .team_member_page .team_member_socials .social_item a:hover{color:#ffffff;\tbackground-color:#319966;\tborder-color:#319966}.scheme_default .scheme_dark .sc_team_item_title a:hover{color:#e9f6f7}.scheme_default .sc_team .sc_team_item_thumb .sc_team_item_title a,.scheme_default .sc_team .sc_team_item_thumb .sc_team_item_subtitle a,.scheme_default .sc_team .sc_team_item_thumb .sc_team_item_content a{color:#4b5664}.scheme_default .sc_team .sc_team_item_thumb .sc_team_item_title a:hover,.scheme_default .sc_team .sc_team_item_thumb .sc_team_item_subtitle a:hover,.scheme_default .sc_team .sc_team_item_thumb .sc_team_item_content a:hover{color:#1d1d1d}.scheme_default .sc_team .sc_team_item_thumb .sc_team_item_socials .social_item a{color:#4b5664;\tborder-color:#4b5664}.scheme_default .sc_team .sc_team_item_thumb .sc_team_item_socials .social_item a:hover{color:#319966;\tbackground-color:#4b5664}.scheme_default .team_member_page .team_member_featured .team_member_avatar{border-color:#f1f1f1}.scheme_default .sc_team_short .sc_team_item_thumb{border-color:#319966}.scheme_default .sc_team.slider_swiper .swiper-pagination-bullet{border-color:#403535;\tbackground-color:rgba(64,53,53,0.5)}.scheme_default .sport_page_list{border-color:#f1f1f1}.scheme_default .sport_page_list li+li{border-color:#f1f1f1}.scheme_default .sport_page_list li:nth-child(2n+1){background-color:#e8e8e8;\tcolor:#333333}.scheme_default .trx_addons_scroll_to_top,.scheme_default .trx_addons_cv .trx_addons_scroll_to_top{color:#ffffff;\tborder-color:#319966;\tbackground-color:#319966}.scheme_default .trx_addons_scroll_to_top:hover,.scheme_default .trx_addons_cv .trx_addons_scroll_to_top:hover{color:#319966;\tborder-color:#3da677;\tbackground-color:#3da677}.scheme_default .trx_addons_popup{background-color:#e8e8e8;\tborder-color:#e3e3e3;\tcolor:#333333}.scheme_default .trx_addons_popup .mfp-close{background-color:#e6e8eb;\tborder-color:#dadada;\tcolor:#333333}.scheme_default .trx_addons_popup .mfp-close:hover{background-color:#4d4a51;\tcolor:#e8e8e8}.scheme_default .trx_addons_popup .trx_addons_tabs_title{background-color:#e6e8eb;\tborder-color:#dadada}.scheme_default .trx_addons_popup .trx_addons_tabs_title.ui-tabs-active{background-color:#e8e8e8;\tborder-bottom-color:transparent}.scheme_default .trx_addons_popup .trx_addons_tabs_title a,.scheme_default .trx_addons_popup .trx_addons_tabs_title a>i{color:#333333}.scheme_default .trx_addons_popup .trx_addons_tabs_title a:hover,.scheme_default .trx_addons_popup .trx_addons_tabs_title a:hover>i{color:#319966}.scheme_default .trx_addons_popup .trx_addons_tabs_title[data-disabled=\"true\"] a,.scheme_default .trx_addons_popup .trx_addons_tabs_title[data-disabled=\"true\"] a>i,.scheme_default .trx_addons_popup .trx_addons_tabs_title[data-disabled=\"true\"] a:hover,.scheme_default .trx_addons_popup .trx_addons_tabs_title[data-disabled=\"true\"] a:hover>i{color:#b7b7b7}.scheme_default .trx_addons_popup .trx_addons_tabs_title.ui-tabs-active a,.scheme_default .trx_addons_popup .trx_addons_tabs_title.ui-tabs-active a>i,.scheme_default .trx_addons_popup .trx_addons_tabs_title.ui-tabs-active a:hover,.scheme_default .trx_addons_popup .trx_addons_tabs_title.ui-tabs-active a:hover>i{color:#4d4a51}.scheme_default .trx_addons_profiler{background-color:#e8e8e8;\tborder-color:#dadada}.scheme_default .trx_addons_profiler_title{color:#4d4a51}.scheme_default .trx_addons_profiler table td,.scheme_default .trx_addons_profiler table th{border-color:#e3e3e3}.scheme_default .trx_addons_profiler table td{color:#333333}.scheme_default .trx_addons_profiler table th{background-color:#e6e8eb;\tcolor:#4d4a51}.scheme_default .trx_addons_cv,.scheme_default .trx_addons_cv_body_wrap{color:#333333;\tbackground-color:#e8e8e8}.scheme_default .trx_addons_cv a{color:#319966}.scheme_default .trx_addons_cv a:hover{color:#72cfd5}.scheme_default .trx_addons_cv_header{background-color:#ffffff}.scheme_default .trx_addons_cv_header_image img{border-color:#403535}.scheme_default .trx_addons_cv_header .trx_addons_cv_header_letter,.scheme_default .trx_addons_cv_header .trx_addons_cv_header_text{color:#403535}.scheme_default .trx_addons_cv_header .trx_addons_cv_header_socials .social_item>a{color:rgba(64,53,53,0.7)}.scheme_default .trx_addons_cv_header .trx_addons_cv_header_socials .social_item>a:hover{color:#403535}.scheme_default .trx_addons_cv_header_letter,.scheme_default .trx_addons_cv_header_text,.scheme_default .trx_addons_cv_header_socials .social_item>a{text-shadow:1px 1px 6px #ffffff}.scheme_default .trx_addons_cv_tint_dark .trx_addons_cv_header_letter,.scheme_default .trx_addons_cv_tint_dark .trx_addons_cv_header_text,.scheme_default .trx_addons_cv_tint_dark .trx_addons_cv_header_socials .social_item>a{color:#ffffff; text-shadow:1px 1px 3px #403535}.scheme_default .trx_addons_cv_tint_dark .trx_addons_cv_header_socials .social_item>a:hover{color:#e9f6f7}.scheme_default .trx_addons_cv_navi_buttons .trx_addons_cv_navi_buttons_area .trx_addons_cv_navi_buttons_item{color:#b7b7b7;\tbackground-color:#e8e8e8;\tborder-color:#ffffff}.scheme_default .trx_addons_cv_navi_buttons .trx_addons_cv_navi_buttons_area .trx_addons_cv_navi_buttons_item_active,.scheme_default .trx_addons_cv_navi_buttons .trx_addons_cv_navi_buttons_area .trx_addons_cv_navi_buttons_item:hover{color:#4d4a51;\tborder-color:#e8e8e8}.scheme_default .trx_addons_cv .trx_addons_cv_section_title,.scheme_default .trx_addons_cv .trx_addons_cv_section_title a{color:#4d4a51}.scheme_default .trx_addons_cv_section_title.ui-state-active{border-color:#4d4a51}.scheme_default .trx_addons_cv_section_content .trx_addons_tabs .trx_addons_tabs_titles li>a{color:#b7b7b7}.scheme_default .trx_addons_cv_section_content .trx_addons_tabs .trx_addons_tabs_titles li.ui-state-active>a,.scheme_default .trx_addons_cv_section_content .trx_addons_tabs .trx_addons_tabs_titles li>a:hover{color:#4d4a51}.scheme_default .trx_addons_cv_section .trx_addons_pagination>*{color:#333333}.scheme_default .trx_addons_cv_section .trx_addons_pagination>a:hover{color:#4d4a51}.scheme_default .trx_addons_pagination>span.active{color:#4d4a51;\tborder-color:#4d4a51}.scheme_default .trx_addons_cv_breadcrumbs .trx_addons_cv_breadcrumbs_item{color:#b7b7b7}.scheme_default .trx_addons_cv_breadcrumbs a.trx_addons_cv_breadcrumbs_item:hover{color:#4d4a51}.scheme_default .trx_addons_cv_single .trx_addons_cv_single_title{color:#4d4a51}.scheme_default .trx_addons_cv_single .trx_addons_cv_single_subtitle{color:#b7b7b7}.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_2 .trx_addons_cv_resume_column:nth-child(2n+2) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_3 .trx_addons_cv_resume_column:nth-child(3n+2) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_3 .trx_addons_cv_resume_column:nth-child(3n+3) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_4 .trx_addons_cv_resume_column:nth-child(4n+2) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_4 .trx_addons_cv_resume_column:nth-child(4n+3) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_4 .trx_addons_cv_resume_column:nth-child(4n+4) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_2 .trx_addons_cv_resume_column:nth-child(2n+3) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_2 .trx_addons_cv_resume_column:nth-child(2n+4) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_3 .trx_addons_cv_resume_column:nth-child(3n+4) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_3 .trx_addons_cv_resume_column:nth-child(3n+5) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_3 .trx_addons_cv_resume_column:nth-child(3n+6) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_4 .trx_addons_cv_resume_column:nth-child(4n+5) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_4 .trx_addons_cv_resume_column:nth-child(4n+6) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_4 .trx_addons_cv_resume_column:nth-child(4n+7) .trx_addons_cv_resume_item,.scheme_default .trx_addons_tabs_content_delimiter .trx_addons_cv_resume_columns_4 .trx_addons_cv_resume_column:nth-child(4n+8) .trx_addons_cv_resume_item{border-color:#e3e3e3}.scheme_default .trx_addons_cv_resume_item_meta{color:#4d4a51}.scheme_default .trx_addons_cv_resume_item .trx_addons_cv_resume_item_title,.scheme_default .trx_addons_cv_resume_item .trx_addons_cv_resume_item_title a{color:#4d4a51}.scheme_default .trx_addons_cv_resume_item_subtitle{color:#b7b7b7}.scheme_default .trx_addons_cv_resume_style_skills .trx_addons_cv_resume_item_skills{color:#4d4a51}.scheme_default .trx_addons_cv_resume_style_skills .trx_addons_cv_resume_item_skill:after{border-color:#4d4a51}.scheme_default .trx_addons_cv_resume_style_education .trx_addons_cv_resume_item_number{color:#b7b7b7}.scheme_default .trx_addons_cv_resume_style_services .trx_addons_cv_resume_item_icon{color:#4d4a51}.scheme_default .trx_addons_cv_resume_style_services .trx_addons_cv_resume_item_icon:hover,.scheme_default .trx_addons_cv_resume_style_services .trx_addons_cv_resume_item_text a:hover{color:#e9f6f7}.scheme_default .trx_addons_cv_resume_style_services .trx_addons_cv_resume_item_title>a:hover:after{border-color:#e9f6f7}.scheme_default .trx_addons_cv_resume_style_services .trx_addons_cv_resume_item_title>a:after{border-top-color:#4d4a51}.scheme_default .trx_addons_cv_resume_style_services .trx_addons_cv_resume_item_text a{color:#4d4a51}.scheme_default .trx_addons_cv_portfolio_item .trx_addons_cv_portfolio_item_title,.scheme_default .trx_addons_cv_portfolio_item .trx_addons_cv_portfolio_item_title a{color:#4d4a51}.scheme_default .trx_addons_cv_testimonials_item .trx_addons_cv_testimonials_item_title,.scheme_default .trx_addons_cv_testimonials_item .trx_addons_cv_testimonials_item_title a{color:#4d4a51}.scheme_default .trx_addons_cv_certificates_item .trx_addons_cv_certificates_item_title,.scheme_default .trx_addons_cv_certificates_item .trx_addons_cv_certificates_item_title a{color:#4d4a51}.scheme_default .trx_addons_cv .trx_addons_contact_form .trx_addons_contact_form_title{color:#4d4a51}.scheme_default .trx_addons_cv .trx_addons_contact_form_field_title{color:#4d4a51}.scheme_default .trx_addons_contact_form .trx_addons_contact_form_field input[type=\"text\"],.scheme_default .trx_addons_contact_form .trx_addons_contact_form_field textarea{border-color:#e3e3e3;\tcolor:#333333}.scheme_default .trx_addons_contact_form .trx_addons_contact_form_field input[type=\"text\"]:focus,.scheme_default .trx_addons_contact_form .trx_addons_contact_form_field textarea:focus{background-color:#e6e8eb;\tcolor:#4d4a51}.scheme_default .trx_addons_contact_form_field button{background-color:#4d4a51;\tborder-color:#4d4a51;\tcolor:#ffffff}.scheme_default .trx_addons_contact_form_field button:hover{color:#4d4a51}.scheme_default .trx_addons_contact_form_info_icon{color:#b7b7b7}.scheme_default .trx_addons_contact_form_info_area{color:#4d4a51}.scheme_default .trx_addons_contact_form_info_item_phone .trx_addons_contact_form_info_data{color:#4d4a51 !important}.scheme_default .trx_addons_cv_about_page .trx_addons_cv_single_title{color:#4d4a51}.scheme_default .trx_addons_attrib_item.trx_addons_attrib_button,.scheme_default .trx_addons_attrib_item.trx_addons_attrib_image,.scheme_default .trx_addons_attrib_item.trx_addons_attrib_color{border-color:#e3e3e3;\tbackground-color:#e8e8e8}.scheme_default .trx_addons_attrib_item.trx_addons_attrib_button:hover,.scheme_default .trx_addons_attrib_item.trx_addons_attrib_image:hover,.scheme_default .trx_addons_attrib_item.trx_addons_attrib_color:hover{border-color:#dadada;\tbackground-color:#e6e8eb}.scheme_default .trx_addons_attrib_item.trx_addons_attrib_selected{border-color:#319966 !important;\tbackground-color:#e6e8eb}.scheme_default .trx_addons_attrib_item.trx_addons_attrib_disabled span:before,.scheme_default .trx_addons_attrib_item.trx_addons_attrib_disabled span:after{background-color:#72cfd5}.scheme_default.wpb_row,.scheme_default.wpb_column>.vc_column-inner>.wpb_wrapper,.scheme_default.wpb_text_column{color:#8c8686}.scheme_default.vc_row.vc_parallax[class*=\"scheme_\"] .vc_parallax-inner:before{background-color:rgba(255,255,255,0.8)}.scheme_default .wpb-js-composer .vc_tta.vc_tta-accordion .vc_tta-panel-heading .vc_tta-controls-icon{color:#ffffff;\tbackground-color:#319966}.scheme_default .wpb-js-composer .vc_tta.vc_tta-accordion .vc_tta-panel-heading .vc_tta-controls-icon:before,.scheme_default .wpb-js-composer .vc_tta.vc_tta-accordion .vc_tta-panel-heading .vc_tta-controls-icon:after{border-color:#ffffff}.scheme_default .wpb-js-composer .vc_tta-color-grey.vc_tta-style-classic .vc_tta-panel .vc_tta-panel-title>a{color:#403535}.scheme_default .wpb-js-composer .vc_tta-color-grey.vc_tta-style-classic .vc_tta-panel.vc_active .vc_tta-panel-title>a,.scheme_default .wpb-js-composer .vc_tta-color-grey.vc_tta-style-classic .vc_tta-panel .vc_tta-panel-title>a:hover{color:#403535;\tbackground-color:#e9f6f7}.scheme_default .wpb-js-composer .vc_tta.vc_tta-accordion .vc_tta-panel:hover,.scheme_default .wpb-js-composer .vc_tta.vc_tta-accordion .vc_tta-panel.vc_active,.scheme_default .wpb-js-composer .vc_tta.vc_tta-accordion .vc_tta-panel.vc_active .vc_tta-panel-body{background-color:#e9f6f7}.scheme_default .wpb-js-composer .vc_tta-color-grey.vc_tta-style-classic .vc_tta-panel.vc_active .vc_tta-panel-title>a .vc_tta-controls-icon,.scheme_default .wpb-js-composer .vc_tta-color-grey.vc_tta-style-classic .vc_tta-panel .vc_tta-panel-title>a:hover .vc_tta-controls-icon{color:#ffffff;\tbackground-color:#319966}.scheme_default .wpb-js-composer .vc_tta-color-grey.vc_tta-style-classic .vc_tta-panel.vc_active .vc_tta-panel-title>a .vc_tta-controls-icon:before,.scheme_default .wpb-js-composer .vc_tta-color-grey.vc_tta-style-classic .vc_tta-panel.vc_active .vc_tta-panel-title>a .vc_tta-controls-icon:after{border-color:#4b5664}.scheme_default .wpb-js-composer .vc_tta-color-grey.vc_tta-style-classic .vc_tta-tabs-list .vc_tta-tab>a{color:#319966;\tbackground-color:#e9f6f7}.scheme_default .wpb-js-composer .vc_tta-color-grey.vc_tta-style-classic .vc_tta-tabs-list .vc_tta-tab>a:hover,.scheme_default .wpb-js-composer .vc_tta-color-grey.vc_tta-style-classic .vc_tta-tabs-list .vc_tta-tab.vc_active>a{color:#ffffff;\tbackground-color:#319966}.scheme_default .wpb-js-composer .vc_tta-container .vc_tta-color-grey.vc_tta-style-classic.vc_tta-tabs .vc_tta-panels{background-color:#ffffff; border-color:#ffffff}.scheme_default .vc_color-sky.vc_message_box{background-color:#e9f6f7; border-color:#e9f6f7; color:#4b5664}.scheme_default .vc_color-sky.vc_message_box .vc_message_box-icon{color:#319966}.scheme_default .vc_message_box_closeable:after{color:#e9f6f7; background-color:#ffffff}.scheme_default .vc_color-orange.vc_message_box{background-color:#fcb040; border-color:#fcb040; color:#ffffff}.scheme_default .vc_color-orange.vc_message_box .vc_message_box-icon{color:#ffffff}.scheme_default .vc_color-orange.vc_message_box.vc_message_box_closeable:after{color:#ffffff; background-color:rgba(255,255,255,0.2)}.scheme_default .vc_color-green.vc_message_box.vc_message_box{background-color:#2ab079; border-color:#2ab079; color:#ffffff}.scheme_default .vc_color-green.vc_message_box.vc_message_box .vc_message_box-icon{color:#ffffff}.scheme_default .vc_color-green.vc_message_box.vc_message_box.vc_message_box_closeable:after{color:#ffffff; background-color:rgba(255,255,255,0.2)}.scheme_default .vc_color-blue.vc_message_box.vc_message_box.vc_message_box{background-color:#319966; border-color:#319966; color:#ffffff}.scheme_default .vc_color-blue.vc_message_box.vc_message_box.vc_message_box .vc_message_box-icon{color:#ffffff}.scheme_default .vc_color-blue.vc_message_box.vc_message_box.vc_message_box.vc_message_box_closeable:after{color:#ffffff; background-color:rgba(255,255,255,0.2)}.scheme_default .vc_separator.vc_sep_color_grey .vc_sep_line{border-color:#f1f1f1}.scheme_default .vc_progress_bar.vc_progress_bar_narrow .vc_single_bar{background-color:#e9f6f7}.scheme_default .vc_progress_bar.vc_progress_bar_narrow.vc_progress-bar-color-bar_red .vc_single_bar .vc_bar{background-color:#319966}.scheme_default .vc_progress_bar.vc_progress_bar_narrow .vc_single_bar .vc_label{color:#403535}.scheme_default .vc_progress_bar.vc_progress_bar_narrow .vc_single_bar .vc_label .vc_label_units{}.scheme_default .vc_progress_bar.vc_progress-bar-color-white .vc_single_bar .vc_label{color:#ffffff}.scheme_default .vc_progress_bar.vc_progress-bar-color-white .vc_single_bar{background-color:rgba(255,255,255,0.3)}.scheme_default .vc_progress_bar.vc_progress-bar-color-peacoc .vc_single_bar .vc_label{color:#ffffff}.scheme_default .vc_progress_bar.vc_progress-bar-color-peacoc .vc_single_bar{background-color:rgba(255,255,255,0.3)}.scheme_default .vc_progress_bar .vc_general.vc_single_bar.vc_progress-bar-color-peacoc .vc_bar,.scheme_default .vc_progress_bar.vc_progress-bar-color-peacoc .vc_single_bar .vc_bar{background-color:#319966}.scheme_dark h1,.scheme_dark h2,.scheme_dark h3,.scheme_dark h4,.scheme_dark h5,.scheme_dark h6,.scheme_dark h1 a,.scheme_dark h2 a,.scheme_dark h3 a,.scheme_dark h4 a,.scheme_dark h5 a,.scheme_dark h6 a,.scheme_dark li a{color:#ffffff}.scheme_dark h1 a:hover,.scheme_dark h2 a:hover,.scheme_dark h3 a:hover,.scheme_dark h4 a:hover,.scheme_dark h5 a:hover,.scheme_dark h6 a:hover,.scheme_dark li a:hover{color:#319966}.scheme_dark dt,.scheme_dark b,.scheme_dark strong,.scheme_dark mark,.scheme_dark ins{color:#ffffff}.scheme_dark s,.scheme_dark strike,.scheme_dark del{color:#5f5f5f}.scheme_dark code{color:#5d5d5d;\tbackground-color:#1a1c1d;\tborder-color:#313131}.scheme_dark code a{color:#319966}.scheme_dark code a:hover{color:#fe7259}.scheme_dark a{color:#319966}.scheme_dark a:hover{color:#8c8686}.scheme_dark blockquote{color:#8c8686}.scheme_dark blockquote:before{color:#319966}.scheme_dark blockquote a{color:#ffffff}.scheme_dark blockquote a:hover{color:#319966}.scheme_dark table th,.scheme_dark table th + th,.scheme_dark table td + th{border-color:rgba(0,0,0,0.2)}.scheme_dark table td,.scheme_dark table th + td,.scheme_dark table td + td{border-color:rgba(49,49,49,0.3)}.scheme_dark table th{color:#000000;\tbackground-color:#ffffff}.scheme_dark table>tbody>tr:nth-child(2n+1)>td{background-color:#e9f6f7}.scheme_dark table>tbody>tr:nth-child(2n)>td{background-color:#e9f6f7}.scheme_dark table th a:hover{color:#000000}.scheme_dark .sc_table table tr:first-child th,.scheme_dark .sc_table table tr:first-child td{background-color:#319966; color:#ffffff; border-color:rgba(49,49,49,0.2)}.scheme_dark hr{border-color:#1c1b1f}.scheme_dark figure figcaption,.scheme_dark .wp-caption .wp-caption-text,.scheme_dark .wp-caption .wp-caption-dd,.scheme_dark .wp-caption-overlay .wp-caption .wp-caption-text,.scheme_dark .wp-caption-overlay .wp-caption .wp-caption-dd{color:#ffffff;\tbackground-color:rgba(255,255,255,0.5)}.scheme_dark ul>li:before{color:#319966}.scheme_dark fieldset{border-color:#1c1b1f}.scheme_dark fieldset legend{color:#ffffff;\tbackground-color:#000000}.scheme_dark::-webkit-input-placeholder{color:#5f5f5f}.scheme_dark::-moz-placeholder{color:#5f5f5f}.scheme_dark:-ms-input-placeholder{color:#5f5f5f}.scheme_dark input[type=\"text\"],.scheme_dark input[type=\"number\"],.scheme_dark input[type=\"email\"],.scheme_dark input[type=\"tel\"],.scheme_dark input[type=\"search\"],.scheme_dark input[type=\"password\"],.scheme_dark textarea,.scheme_dark textarea.wp-editor-area{color:#8c8686;\tborder-color:#1a1c1d;\tbackground-color:transparent}.scheme_dark .select_container,.scheme_dark .select2-container .select2-selection,.scheme_dark .select2-container .select2-choice{background-color:rgba(0,0,0,0)}.scheme_dark .select2-container .select2-selection:hover,.scheme_dark .select2-container .select2-choice:hover{background-color:rgba(0,0,0,0)}.scheme_dark input[type=\"text\"]:focus,.scheme_dark input[type=\"number\"]:focus,.scheme_dark input[type=\"email\"]:focus,.scheme_dark input[type=\"tel\"]:focus,.scheme_dark input[type=\"search\"]:focus,.scheme_dark input[type=\"password\"]:focus,.scheme_dark select option:hover,.scheme_dark select option:focus,.scheme_dark textarea:focus,.scheme_dark textarea.wp-editor-area:focus{color:#8c8686;\tborder-color:#319966;\tbackground-color:transparent}.scheme_dark .select_container:before{color:#8c8686}.scheme_dark .select_container:focus:before,.scheme_dark .select_container:hover:before{color:#8c8686}.scheme_dark .select_container:after{color:#191b1c}.scheme_dark .select_container:focus:after,.scheme_dark .select_container:hover:after{color:#319966}.scheme_dark .select_container select{color:#8c8686}.scheme_dark .select_container select:focus{color:#ffffff;\tborder-color:#353535}.scheme_dark .widget .post_item .post_info a{color:#ffffff}.scheme_dark .widget .post_item .post_info a:hover{color:#319966}.scheme_dark .widget_area .post_item .post_title a,.scheme_dark .widget .post_item .post_title a{color:#8c8686}.scheme_dark .widget_search form:after,.scheme_dark .woocommerce.widget_product_search form:after,.scheme_dark .widget_display_search form:after,.scheme_dark #bbpress-forums #bbp-search-form:after{color:#319966}.scheme_dark .widget_search form:hover:after,.scheme_dark .woocommerce.widget_product_search form:hover:after,.scheme_dark .widget_display_search form:hover:after,.scheme_dark #bbpress-forums #bbp-search-form:hover:after{color:#8c8686}.scheme_dark input[type=\"radio\"] + label:before,.scheme_dark input[type=\"checkbox\"] + label:before{border-color:#2e2d32;\tbackground-color:#2e2d32}.scheme_dark button,.scheme_dark input[type=\"reset\"],.scheme_dark input[type=\"submit\"],.scheme_dark input[type=\"button\"]{color:#ffffff;\tbackground-color:#319966;\tborder--color:#319966}.scheme_dark input[type=\"submit\"]:hover,.scheme_dark input[type=\"reset\"]:hover,.scheme_dark input[type=\"button\"]:hover,.scheme_dark button:hover,.scheme_dark input[type=\"submit\"]:focus,.scheme_dark input[type=\"reset\"]:focus,.scheme_dark input[type=\"button\"]:focus,.scheme_dark button:focus{color:#ffffff;\tbackground-color:#e9f6f7;\tborder-color:#e9f6f7}.scheme_dark .wp-editor-container input[type=\"button\"]{background-color:#1a1c1d;\tborder-color:#313131;\tcolor:#ffffff;\t-webkit-box-shadow:0 1px 0 0 #3d3d3d; -ms-box-shadow:0 1px 0 0 #3d3d3d; box-shadow:0 1px 0 0 #3d3d3d}.scheme_dark .wp-editor-container input[type=\"button\"]:hover,.scheme_dark .wp-editor-container input[type=\"button\"]:focus{background-color:#28272e;\tborder-color:#3d3d3d;\tcolor:#319966}.scheme_dark .select2-results{color:#191b1c;\tborder-color:#353535;\tbackground:#2e2d32}.scheme_dark .select2-results .select2-highlighted{color:#ffffff;\tbackground:#2e2d32}.scheme_dark .sticky{border-color:#1c1b1f}.scheme_dark .sticky .label_sticky{border-top-color:#319966}.scheme_dark body{color:#8c8686;\tbackground-color:#000000}.scheme_dark #page_preloader,.scheme_dark.header_position_under .page_content_wrap,.scheme_dark .page_wrap{background-color:#000000}.scheme_dark .preloader_wrap>div{background-color:#319966}.scheme_dark .sc_services_default .sc_services_item_button a{background:rgba(0,0,0,0) !important; border-color:rgba(0,0,0,0) !important; color:#319966 !important}.scheme_dark .sc_services_default .sc_services_item_button a:hover{background:rgba(0,0,0,0) !important; border-color:#319966 !important; color:#319966 !important}.scheme_dark.sc_services_default .sc_services_item_button a{background:rgba(0,0,0,0) !important; border-color:rgba(0,0,0,0) !important; color:#ffffff !important}.scheme_dark.sc_services_default .sc_services_item_button a:hover{background:rgba(0,0,0,0) !important; border-color:#ffffff !important; color:#ffffff !important}.scheme_dark .sc_item_descr{color:#8c8686}.scheme_dark .scheme_dark .sc_team_full .sc_team_item_content,.scheme_dark .scheme_dark .sc_promo .sc_promo_descr,.scheme_dark .scheme_dark .sc_item_descr{color:rgba(0,0,0,0.8)}.scheme_dark .scheme_dark .sc_promo .sc_item_subtitle{color:#000000}.scheme_dark .scheme_dark .sc_promo.sc_promo_default.sc_promo_size_normal .sc_item_subtitle.sc_promo_subtitle.sc_align_left:after{background-color:rgba(0,0,0,0.6)}.scheme_dark .sc_team_full .sc_team_item_subtitle{color:#319966}.scheme_dark.top_panel.with_bg_image:before{background-color:rgba(0,0,0,0.7)}.scheme_dark.top_panel .slider_engine_revo .slide_subtitle,.scheme_dark .top_panel .slider_engine_revo .slide_subtitle{color:#319966}.scheme_dark .top_panel_default .top_panel_title,.scheme_dark.top_panel_default .top_panel_title{background-color:#1a1c1d}.scheme_dark .aquapro_tabs .aquapro_tabs_titles li a{color:#ffffff;\tbackground-color:#1a1c1d}.scheme_dark .aquapro_tabs .aquapro_tabs_titles li a:hover{color:#ffffff;\tbackground-color:#319966}.scheme_dark .aquapro_tabs .aquapro_tabs_titles li.ui-state-active a{color:#000000;\tbackground-color:#ffffff}.scheme_dark .top_panel.with_bg_image .sc_layouts_row.sc_layouts_row_fixed_on{background-color:#ffffff}.scheme_dark .post_item{color:#8c8686}.scheme_dark .post_meta,.scheme_dark .post_meta_item,.scheme_dark .post_meta_item a,.scheme_dark .post_meta_item:before,.scheme_dark .post_meta_item:hover:before,.scheme_dark .post_date:before,.scheme_dark .post_info .post_info_item,.scheme_dark .post_info .post_info_item a,.scheme_dark .post_info_counters .post_counters_item,.scheme_dark .post_counters .socials_share .socials_caption:before,.scheme_dark .post_counters .socials_share .socials_caption:hover:before{color:#8c8686}.scheme_dark .post_date a{color:#319966}.scheme_dark a.post_meta_item:hover,.scheme_dark .post_meta_item a:hover,.scheme_dark .post_info .post_info_item a:hover,.scheme_dark .post_info_counters .post_counters_item:hover{color:#319966}.scheme_dark .post_date a:hover{color:#8c8686}.scheme_dark .post_item .post_title a:hover{color:#319966}.scheme_dark .post_meta_item.post_categories,.scheme_dark .post_meta_item.post_categories a{color:#8c8686}.scheme_dark .post_meta_item.post_categories a:hover{color:#319966}.scheme_dark .post_meta_item .socials_share .social_items{background-color:#000000}.scheme_dark .post_meta_item .social_items,.scheme_dark .post_meta_item .social_items:before{background-color:#000000;\tborder-color:#1c1b1f;\tcolor:#5f5f5f}.scheme_dark .post_layout_excerpt + .post_layout_excerpt{border-color:#1c1b1f}.scheme_dark .post_layout_classic{border-color:#1c1b1f}.scheme_dark.gallery_preview:before{background-color:#000000}.scheme_dark.gallery_preview{color:#8c8686}.scheme_dark .format-audio .post_featured .post_audio_author{color:#8c8686}.scheme_dark .format-audio .post_featured.without_thumb .post_audio{border-color:#e9f6f7;\tbackground:#e9f6f7}.scheme_dark .format-audio .post_featured.without_thumb,.scheme_dark .without_thumb .mejs-controls .mejs-currenttime,.scheme_dark .without_thumb .mejs-controls .mejs-duration{color:#8c8686}.scheme_dark .post_audio_title{color:#ffffff}.scheme_dark .mejs-container,.scheme_dark .mejs-container .mejs-controls,.scheme_dark .mejs-embed,.scheme_dark .mejs-embed body{background:rgba(255,255,255,0.7)}.scheme_dark .mejs-controls .mejs-button,.scheme_dark .mejs-controls .mejs-time-rail .mejs-time-current,.scheme_dark .mejs-controls .mejs-horizontal-volume-slider .mejs-horizontal-volume-current{color:#ffffff;\tbackground:#319966}.scheme_dark .mejs-controls .mejs-button:hover{color:#ffffff;\tbackground:#319966}.scheme_dark .mejs-controls .mejs-time-rail .mejs-time-total,.scheme_dark .mejs-controls .mejs-time-rail .mejs-time-loaded,.scheme_dark .mejs-container .mejs-controls .mejs-horizontal-volume-slider .mejs-horizontal-volume-total{background:#ffffff}.scheme_dark .format-aside .post_content_inner{color:#ffffff;\tbackground-color:#1a1c1d}.scheme_dark .format-link .post_content_inner,.scheme_dark .format-status .post_content_inner{color:#ffffff}.scheme_dark .format-chat p>b,.scheme_dark .format-chat p>strong{color:#ffffff}.scheme_dark .post_layout_chess .post_content_inner:after{background:linear-gradient(to top,#000000 0%,rgba(0,0,0,0) 100%) no-repeat scroll right top / 100% 100% rgba(0,0,0,0)}.scheme_dark .post_layout_chess_1 .post_meta:before{background-color:#1c1b1f}.scheme_dark .nav-links-old{color:#ffffff}.scheme_dark .nav-links-old a:hover{color:#ffffff;\tborder-color:#ffffff}.scheme_dark .page_links>a,.scheme_dark .comments_pagination .page-numbers,.scheme_dark .nav-links .page-numbers{color:#319966;\tbackground-color:#e9f6f7}.scheme_dark .page_links>a:hover,.scheme_dark .page_links>span:not(.page_links_title),.scheme_dark .comments_pagination a.page-numbers:hover,.scheme_dark .comments_pagination .page-numbers.current,.scheme_dark .nav-links a.page-numbers:hover,.scheme_dark .nav-links .page-numbers.current{color:#ffffff;\tbackground-color:#319966}.scheme_dark .post_item_single .post_header .post_date{color:#5f5f5f}.scheme_dark .post_item_single .post_header .post_categories,.scheme_dark .post_item_single .post_header .post_categories a{color:#319966}.scheme_dark .post_item_single .post_content .post_meta_label,.scheme_dark .post_item_single .post_content .post_meta_item:hover .post_meta_label{color:#319966}.scheme_dark .post_item_single .post_content .post_tags,.scheme_dark .post_item_single .post_content .post_tags a{color:#8c8686}.scheme_dark .post_item_single .post_content .post_tags a:hover{color:#319966}.scheme_dark .post_item_single .post_content .post_meta .post_share .social_item a{color:#319966 !important;\tbackground-color:rgba(0,0,0,0)!important;\tborder-color:#319966}.scheme_dark .post_item_single .post_content .post_meta .post_share .social_item a:hover{color:#ffffff !important;\tbackground-color:#319966!important;\tborder-color:#319966}.scheme_dark .post-password-form input[type=\"submit\"]{border-color:#ffffff}.scheme_dark .post-password-form input[type=\"submit\"]:hover,.scheme_dark .post-password-form input[type=\"submit\"]:focus{color:#000000}.scheme_dark .nav-links-single .nav-links{border-color:#1c1b1f}.scheme_dark .nav-links-single .nav-links a .meta-nav{color:#5f5f5f}.scheme_dark .nav-links-single .nav-links a .post_date{color:#5f5f5f}.scheme_dark .nav-links-single .nav-links a:hover .meta-nav,.scheme_dark .nav-links-single .nav-links a:hover .post_date{color:#ffffff}.scheme_dark .nav-links-single .nav-links a:hover .post-title{color:#319966}.scheme_dark .author_info{color:#8c8686;\tbackground-color:#e9f6f7}.scheme_dark .author_info .author_title{color:#ffffff}.scheme_dark .author_info a{color:#ffffff}.scheme_dark .author_info a:hover{color:#319966}.scheme_dark .related_wrap{border-color:#1c1b1f}.scheme_dark .related_wrap .related_item_style_1 .post_header{background-color:rgba(0,0,0,0.7)}.scheme_dark .related_wrap .related_item_style_1:hover .post_header{background-color:#000000}.scheme_dark .related_wrap .related_item_style_1 .post_date a{color:#8c8686}.scheme_dark .related_wrap .related_item_style_1:hover .post_date a{color:#5f5f5f}.scheme_dark .related_wrap .related_item_style_1:hover .post_date a:hover{color:#ffffff}.scheme_dark .comments_list_wrap,.scheme_dark .comments_list_wrap>ul{border-color:#1c1b1f}.scheme_dark .comments_list_wrap li + li,.scheme_dark .comments_list_wrap li ul{border-color:#1c1b1f}.scheme_dark .comments_list_wrap .comment_info{color:#8c8686}.scheme_dark .comments_list_wrap .comment_info .comment_author,.scheme_dark .comments_list_wrap .comment_info .comment_date{color:#ffffff}.scheme_dark .comments_list_wrap .comment_counters a{color:#319966}.scheme_dark .comments_list_wrap .comment_counters a:before{color:#319966}.scheme_dark .comments_list_wrap .comment_counters a:hover:before,.scheme_dark .comments_list_wrap .comment_counters a:hover{color:#e9f6f7}.scheme_dark .comments_list_wrap .comment_text{color:#8c8686}.scheme_dark .comments_list_wrap .comment_reply a{color:#319966}.scheme_dark .comments_list_wrap .comment_reply a:hover{color:#ffffff}.scheme_dark .comments_form_wrap{border-color:#1c1b1f}.scheme_dark .comments_wrap .comments_notes{color:#5f5f5f}.scheme_dark .post_item_404 .page_title{color:#5f5f5f}.scheme_dark .post_item_404 .page_description{color:#319966}.scheme_dark .post_item_404 .go_home{border-color:#ffffff}.scheme_dark.sidebar .sidebar_inner{background-color:#1a1c1d;\tcolor:#5d5d5d}.scheme_dark .sidebar_inner .widget + .widget{border-color:#1c1b1f}.scheme_dark.sidebar .widget + .widget{border-color:#313131}.scheme_dark.sidebar h1,.scheme_dark.sidebar h2,.scheme_dark.sidebar h3,.scheme_dark.sidebar h4,.scheme_dark.sidebar h5,.scheme_dark.sidebar h6,.scheme_dark.sidebar h1 a,.scheme_dark.sidebar h2 a,.scheme_dark.sidebar h3 a,.scheme_dark.sidebar h4 a,.scheme_dark.sidebar h5 a,.scheme_dark.sidebar h6 a{color:#ffffff}.scheme_dark.sidebar h1 a:hover,.scheme_dark.sidebar h2 a:hover,.scheme_dark.sidebar h3 a:hover,.scheme_dark.sidebar h4 a:hover,.scheme_dark.sidebar h5 a:hover,.scheme_dark.sidebar h6 a:hover{color:#319966}.scheme_dark .widget_search .search-field{background-color:rgba(0,0,0,0); border-color:#1a1c1d}.scheme_dark .widget_search .search-field:focus{background-color:rgba(0,0,0,0); border-color:#1a1c1d}.scheme_dark .widget_search .search-field:after{color:#319966}.scheme_dark .widget li a:hover{color:#319966}.scheme_dark .widget li a{color:#8c8686}.scheme_dark .widget.widget_recent_comments span{color:#ffffff}.scheme_dark .widget li:before{background-color:#319966}.scheme_dark.sidebar li:before{background-color:#319966}.scheme_dark.sidebar a{color:#319966}.scheme_dark.sidebar a:hover{color:#fe7259}.scheme_dark.sidebar li>a,.scheme_dark.sidebar .post_title>a{color:#ffffff}.scheme_dark.sidebar li>a:hover,.scheme_dark.sidebar .post_title>a:hover{color:#319966}.scheme_dark.sidebar .widget_archive li{color:#ffffff}.scheme_dark .widget_calendar caption,.scheme_dark .widget_calendar tbody td a,.scheme_dark .widget_calendar th{color:#8c8686}.scheme_dark .widget_calendar table{background-color:#000000}.scheme_dark.sidebar .widget_calendar tbody td a,.scheme_dark.sidebar .widget_calendar th{color:#ffffff}.scheme_dark .widget_calendar caption{color:#319966}.scheme_dark .widget_calendar tbody td{color:#8c8686 !important}.scheme_dark.sidebar .widget_calendar tbody td{color:#5d5d5d !important}.scheme_dark .widget_calendar tbody td a:hover{color:#319966}.scheme_dark.sidebar .widget_calendar tbody td a:hover{color:#319966}.scheme_dark .widget_calendar tbody td a:after{background-color:#319966}.scheme_dark.sidebar .widget_calendar tbody td a:after{background-color:#319966}.scheme_dark .widget_calendar td#today{color:#8c8686}.scheme_dark .widget_calendar td#today a{color:#ffffff}.scheme_dark .widget_calendar td#today a:hover{color:#1d1d1d}.scheme_dark .widget_calendar td#today:before{background-color:rgba(0,0,0,0);\tborder-color:#319966}.scheme_dark.sidebar .widget_calendar td#today:before{background-color:#319966}.scheme_dark .widget_calendar td#today a:after{background-color:#ffffff}.scheme_dark .widget_calendar td#today a:hover:after{background-color:#1d1d1d}.scheme_dark .widget_calendar #prev a,.scheme_dark .widget_calendar #next a{color:#319966}.scheme_dark.sidebar .widget_calendar #prev a,.scheme_dark.sidebar .widget_calendar #next a{color:#319966}.scheme_dark .widget_calendar #prev a:hover,.scheme_dark .widget_calendar #next a:hover{color:#8c8686}.scheme_dark.sidebar .widget_calendar #prev a:hover,.scheme_dark.sidebar .widget_calendar #next a:hover{color:#8c8686}.scheme_dark .widget_calendar td#prev a:before,.scheme_dark .widget_calendar td#next a:before{background-color:#000000}.scheme_dark.sidebar .widget_calendar td#prev a:before,.scheme_dark.sidebar .widget_calendar td#next a:before{background-color:#1a1c1d}.scheme_dark .widget_categories li{color:#ffffff}.scheme_dark.sidebar .widget_categories li{color:#ffffff}.scheme_dark .sc_countdown .sc_countdown_label{color:#319966}.scheme_dark .widget_product_tag_cloud a,.scheme_dark .widget_tag_cloud a{color:#8c8686;\tbackground-color:#1c1b1f}.scheme_dark .widget .widget_title:before,.scheme_dark .widget .widgettitle:before{color:#319966}.scheme_dark.sidebar .widget_product_tag_cloud a,.scheme_dark.sidebar .widget_tag_cloud a{color:#ffffff;\tbackground-color:#313131}.scheme_dark .widget_product_tag_cloud a:hover,.scheme_dark .widget_tag_cloud a:hover{color:#ffffff !important;\tbackground-color:#319966}.scheme_dark.sidebar .widget_product_tag_cloud a:hover,.scheme_dark.sidebar .widget_tag_cloud a:hover{background-color:#319966}.scheme_dark .widget_rss .widget_title a:first-child{color:#319966}.scheme_dark.sidebar .widget_rss .widget_title a:first-child{color:#319966}.scheme_dark .widget_rss .widget_title a:first-child:hover{color:#e9f6f7}.scheme_dark.sidebar .widget_rss .widget_title a:first-child:hover{color:#fe7259}.scheme_dark .widget_rss .rss-date{color:#5f5f5f}.scheme_dark.sidebar .widget_rss .rss-date{color:#5f5f5f}.scheme_dark.footer_wrap,.footer_wrap .scheme_dark.vc_row{background-color:#1a1c1d;\tcolor:#5d5d5d}.scheme_dark.footer_wrap .widget .post_item .post_info a{color:#5d5d5d}.scheme_dark.footer_wrap .widget .post_item .post_info a:hover{color:#ffffff}.scheme_dark.footer_wrap .widget .post_item .post_info a.post_counters_item{color:#ffffff}.scheme_dark.footer_wrap .widget .post_item .post_info a.post_counters_item:hover{color:#5d5d5d}.scheme_dark.footer_wrap .sc_layouts_row_type_normal .sc_layouts_item,.footer_wrap .scheme_dark.vc_row .sc_layouts_row_type_normal .sc_layouts_item{color:#5d5d5d}.scheme_dark.footer_wrap .sc_layouts_row_type_normal .sc_layouts_item a,.scheme_dark.footer_wrap .widget li a{color:#319966}.scheme_dark.footer_wrap .sc_layouts_row_type_normal .sc_layouts_item a:hover,.scheme_dark.footer_wrap .widget li a:hover{color:#ffffff}.scheme_dark.footer_wrap .widget,.scheme_dark.footer_wrap .sc_content .wpb_column,.footer_wrap .scheme_dark.vc_row .widget,.footer_wrap .scheme_dark.vc_row .sc_content .wpb_column{border-color:#313131}.scheme_dark.footer_wrap h1,.scheme_dark.footer_wrap h2,.scheme_dark.footer_wrap h3,.scheme_dark.footer_wrap h4,.scheme_dark.footer_wrap h5,.scheme_dark.footer_wrap h6,.scheme_dark.footer_wrap h1 a,.scheme_dark.footer_wrap h2 a,.scheme_dark.footer_wrap h3 a,.scheme_dark.footer_wrap h4 a,.scheme_dark.footer_wrap h5 a,.scheme_dark.footer_wrap h6 a,.footer_wrap .scheme_dark.vc_row h1,.footer_wrap .scheme_dark.vc_row h2,.footer_wrap .scheme_dark.vc_row h3,.footer_wrap .scheme_dark.vc_row h4,.footer_wrap .scheme_dark.vc_row h5,.footer_wrap .scheme_dark.vc_row h6,.footer_wrap .scheme_dark.vc_row h1 a,.footer_wrap .scheme_dark.vc_row h2 a,.footer_wrap .scheme_dark.vc_row h3 a,.footer_wrap .scheme_dark.vc_row h4 a,.footer_wrap .scheme_dark.vc_row h5 a,.footer_wrap .scheme_dark.vc_row h6 a{color:#ffffff}.scheme_dark.footer_wrap h1 a:hover,.scheme_dark.footer_wrap h2 a:hover,.scheme_dark.footer_wrap h3 a:hover,.scheme_dark.footer_wrap h4 a:hover,.scheme_dark.footer_wrap h5 a:hover,.scheme_dark.footer_wrap h6 a:hover,.footer_wrap .scheme_dark.vc_row h1 a:hover,.footer_wrap .scheme_dark.vc_row h2 a:hover,.footer_wrap .scheme_dark.vc_row h3 a:hover,.footer_wrap .scheme_dark.vc_row h4 a:hover,.footer_wrap .scheme_dark.vc_row h5 a:hover,.footer_wrap .scheme_dark.vc_row h6 a:hover{color:#319966}.scheme_dark.footer_wrap .widget li:before,.footer_wrap .scheme_dark.vc_row .widget li:before{background-color:#319966}.scheme_dark.footer_wrap a,.footer_wrap .scheme_dark.vc_row a{color:#5d5d5d}.scheme_dark.footer_wrap a:hover,.footer_wrap .scheme_dark.vc_row a:hover{color:#ffffff}.scheme_dark .footer_logo_inner{border-color:#313131}.scheme_dark .footer_logo_inner:after{background-color:#5d5d5d}.scheme_dark .footer_socials_inner .social_item .social_icons{border-color:#5d5d5d;\tcolor:#5d5d5d}.scheme_dark .footer_socials_inner .social_item .social_icons:hover{border-color:#ffffff;\tcolor:#ffffff}.scheme_dark .menu_footer_nav_area ul li a{color:#ffffff}.scheme_dark .menu_footer_nav_area ul li a:hover{color:#319966}.scheme_dark .menu_footer_nav_area ul li+li:before{border-color:#5f5f5f}.scheme_dark .footer_copyright_inner{background-color:#000000;\tborder-color:#1c1b1f;\tcolor:#ffffff}.scheme_dark .footer_copyright_inner a{color:#ffffff}.scheme_dark .footer_copyright_inner a:hover{color:#319966}.scheme_dark .footer_copyright_inner .copyright_text{color:#8c8686}.scheme_dark .theme_button{color:#ffffff !important;\tbackground-color:#319966 !important}.scheme_dark .theme_button:hover,.scheme_dark .theme_button:focus{color:#1d1d1d !important;\tbackground-color:#3da677 !important}.scheme_dark .more-link,.scheme_dark .socials_share:not(.socials_type_drop) .social_icons,.scheme_dark .comments_wrap .form-submit input[type=\"submit\"]{color:#ffffff;\tbackground-color:#319966}.scheme_dark .post_item_none_search .search_wrap .search_submit,.scheme_dark .post_item_none_archive .search_wrap .search_submit{color:#ffffff}.scheme_dark .post_item_none_search .search_wrap .search_submit:hover,.scheme_dark .post_item_none_archive .search_wrap .search_submit:hover{color:#319966}.scheme_dark .more-link:hover,.scheme_dark .socials_share:not(.socials_type_drop) .social_icons:hover,.scheme_dark .comments_wrap .form-submit input[type=\"submit\"]:hover,.scheme_dark .comments_wrap .form-submit input[type=\"submit\"]:focus{color:#319966;\tbackground-color:#e9f6f7}.scheme_dark .sc_promo.sc_promo_default.sc_promo_size_normal .sc_item_subtitle.sc_promo_subtitle.sc_align_left:after,.scheme_dark .sc_content.sc_align_left .sc_item_subtitle:after,.scheme_dark .sc_content.sc_align_right .sc_item_subtitle:after{background-color:#319966}.scheme_dark .sc_googlemap_content .sc_content.sc_align_left .sc_item_subtitle:after,.scheme_dark .sc_googlemap_content .sc_content.sc_align_right .sc_item_subtitle:after{background-color:rgba(0,0,0,0.6)}.scheme_dark .format-video .post_featured.with_thumb .post_video_hover{color:#ffffff}.scheme_dark .format-video .post_featured.with_thumb .post_video_hover:hover{color:#ffffff;\tbackground-color:#319966}.scheme_dark .theme_scroll_down:hover{color:#319966}.scheme_dark .trx_addons_video_player.with_cover .video_hover{background-color:#ffffff}.scheme_dark .mfp-bg{background-color:rgba(0,0,0,0.7)}.scheme_dark .mfp-image-holder .mfp-close,.scheme_dark .mfp-iframe-holder .mfp-close,.scheme_dark .mfp-close-btn-in .mfp-close{color:#ffffff;\tbackground-color:transparent}.scheme_dark .mfp-image-holder .mfp-close:hover,.scheme_dark .mfp-iframe-holder .mfp-close:hover,.scheme_dark .mfp-close-btn-in .mfp-close:hover{color:#319966}/* ================= BUTTON'S HOVERS ==================== */.scheme_dark .sc_button_hover_slide_left{background:linear-gradient(to right,\t#e9f6f7 50%,#319966 50%) no-repeat scroll right bottom / 210% 100% #319966 !important}.scheme_dark .sc_button_hover_slide_right{background:linear-gradient(to left,\t#e9f6f7 50%,#319966 50%) no-repeat scroll left bottom / 210% 100% #319966 !important}.scheme_dark .sc_button_hover_slide_top{background:linear-gradient(to bottom,\t#e9f6f7 50%,#319966 50%) no-repeat scroll right bottom / 100% 210% #319966 !important}.scheme_dark .sc_button_hover_slide_bottom{background:linear-gradient(to top,#e9f6f7 50%,#319966 50%) no-repeat scroll right top / 100% 210% #319966 !important}.scheme_dark .sc_button_hover_style_dark.sc_button_hover_slide_left{background:linear-gradient(to right,\trgba(0,0,0,0) 50%,#319966 50%) no-repeat scroll right bottom / 210% 100% rgba(0,0,0,0) !important}.scheme_dark .sc_button_hover_style_dark.sc_button_hover_slide_right{background:linear-gradient(to left,\trgba(0,0,0,0) 50%,#319966 50%) no-repeat scroll left bottom / 210% 100% rgba(0,0,0,0) !important}.scheme_dark .sc_button_hover_style_dark.sc_button_hover_slide_top{background:linear-gradient(to bottom,\trgba(0,0,0,0) 50%,#319966 50%) no-repeat scroll right bottom / 100% 210% rgba(0,0,0,0) !important}.scheme_dark .sc_button_hover_style_dark.sc_button_hover_slide_bottom{background:linear-gradient(to top,rgba(0,0,0,0) 50%,#319966 50%) no-repeat scroll right top / 100% 210% rgba(0,0,0,0) !important}.scheme_dark .sc_button_hover_style_inverse.sc_button_hover_slide_left{background:linear-gradient(to right,\t#319966 50%,rgba(0,0,0,0) 50%) no-repeat scroll right bottom / 210% 100% rgba(0,0,0,0) !important}.scheme_dark .sc_button_hover_style_inverse.sc_button_hover_slide_right{background:linear-gradient(to left,\t#319966 50%,rgba(0,0,0,0) 50%) no-repeat scroll left bottom / 210% 100% rgba(0,0,0,0) !important}.scheme_dark .sc_button_hover_style_inverse.sc_button_hover_slide_top{background:linear-gradient(to bottom,\t#319966 50%,rgba(0,0,0,0) 50%) no-repeat scroll right bottom / 100% 210% rgba(0,0,0,0) !important}.scheme_dark .sc_button_hover_style_inverse.sc_button_hover_slide_bottom{background:linear-gradient(to top,#319966 50%,rgba(0,0,0,0) 50%) no-repeat scroll right top / 100% 210% rgba(0,0,0,0) !important}.scheme_dark .sc_button_hover_style_hover.sc_button_hover_slide_left{background:linear-gradient(to right,\t#e9f6f7 50%,#319966 50%) no-repeat scroll right bottom / 210% 100% #319966 !important}.scheme_dark .sc_button_hover_style_hover.sc_button_hover_slide_right{background:linear-gradient(to left,\t#e9f6f7 50%,#319966 50%) no-repeat scroll left bottom / 210% 100% #319966 !important}.scheme_dark .sc_button_hover_style_hover.sc_button_hover_slide_top{background:linear-gradient(to bottom,\t#e9f6f7 50%,#319966 50%) no-repeat scroll right bottom / 100% 210% #319966 !important}.scheme_dark .sc_button_hover_style_hover.sc_button_hover_slide_bottom{background:linear-gradient(to top,#e9f6f7 50%,#319966 50%) no-repeat scroll right top / 100% 210% #319966 !important}.scheme_dark .sc_button_hover_style_alter.sc_button_hover_slide_left{background:linear-gradient(to right,\t#ffffff 50%,#319966 50%) no-repeat scroll right bottom / 210% 100% #319966 !important}.scheme_dark .sc_button_hover_style_alter.sc_button_hover_slide_right{background:linear-gradient(to left,\t#ffffff 50%,#319966 50%) no-repeat scroll left bottom / 210% 100% #319966 !important}.scheme_dark .sc_button_hover_style_alter.sc_button_hover_slide_top{background:linear-gradient(to bottom,\t#ffffff 50%,#319966 50%) no-repeat scroll right bottom / 100% 210% #319966 !important}.scheme_dark .sc_button_hover_style_alter.sc_button_hover_slide_bottom{background:linear-gradient(to top,#ffffff 50%,#319966 50%) no-repeat scroll right top / 100% 210% #319966 !important}.scheme_dark .sc_button_hover_style_alterbd.sc_button_hover_slide_left{background:linear-gradient(to right,\t#319966 50%,#e9f6f7 50%) no-repeat scroll right bottom / 210% 100% #313131 !important}.scheme_dark .sc_button_hover_style_alterbd.sc_button_hover_slide_right{background:linear-gradient(to left,\t#319966 50%,#e9f6f7 50%) no-repeat scroll left bottom / 210% 100% #313131 !important}.scheme_dark .sc_button_hover_style_alterbd.sc_button_hover_slide_top{background:linear-gradient(to bottom,\t#319966 50%,#e9f6f7 50%) no-repeat scroll right bottom / 100% 210% #313131 !important}.scheme_dark .sc_button_hover_style_alterbd.sc_button_hover_slide_bottom{background:linear-gradient(to top,#319966 50%,#e9f6f7 50%) no-repeat scroll right top / 100% 210% #313131 !important}.scheme_dark .sc_button_hover_style_alter.sc_button_hover_slide_left:hover,.scheme_dark .sc_button_hover_style_alter.sc_button_hover_slide_right:hover,.scheme_dark .sc_button_hover_style_alter.sc_button_hover_slide_top,.scheme_dark .sc_button_hover_style_alter.sc_button_hover_slide_bottom{color:#000000 !important}.scheme_dark .sc_button_hover_slide_left:hover,.scheme_dark .sc_button_hover_slide_left.active,.scheme_dark .ui-state-active .sc_button_hover_slide_left,.scheme_dark .vc_active .sc_button_hover_slide_left,.scheme_dark .vc_tta-accordion .vc_tta-panel-title:hover .sc_button_hover_slide_left,.scheme_dark li.active .sc_button_hover_slide_left{background-position:left bottom !important; color:#319966 !important}.scheme_dark .sc_button_hover_slide_right:hover,.scheme_dark .sc_button_hover_slide_right.active,.scheme_dark .ui-state-active .sc_button_hover_slide_right,.scheme_dark .vc_active .sc_button_hover_slide_right,.scheme_dark .vc_tta-accordion .vc_tta-panel-title:hover .sc_button_hover_slide_right,.scheme_dark li.active .sc_button_hover_slide_right{background-position:right bottom !important; color:#319966 !important}.scheme_dark .sc_button_hover_slide_top:hover,.scheme_dark .sc_button_hover_slide_top.active,.scheme_dark .ui-state-active .sc_button_hover_slide_top,.scheme_dark .vc_active .sc_button_hover_slide_top,.scheme_dark .vc_tta-accordion .vc_tta-panel-title:hover .sc_button_hover_slide_top,.scheme_dark li.active .sc_button_hover_slide_top{background-position:right top !important; color:#319966 !important}.scheme_dark .sc_button_hover_slide_bottom:hover,.scheme_dark .sc_button_hover_slide_bottom.active,.scheme_dark .ui-state-active .sc_button_hover_slide_bottom,.scheme_dark .vc_active .sc_button_hover_slide_bottom,.scheme_dark .vc_tta-accordion .vc_tta-panel-title:hover .sc_button_hover_slide_bottom,.scheme_dark li.active .sc_button_hover_slide_bottom{background-position:right bottom !important; color:#319966 !important}/* ================= IMAGE'S HOVERS ==================== */.scheme_dark .post_featured .mask{background-color:rgba(255,255,255,0.7)}.scheme_dark .post_featured.hover_dots:hover .mask{background-color:rgba(255,255,255,0.7)}.scheme_dark .post_featured.hover_dots .icons span{background-color:#319966}.scheme_dark .post_featured.hover_dots .post_info{color:#000000}.scheme_dark .post_featured.hover_icon .icons a{color:#000000}.scheme_dark .post_featured.hover_icon a:hover{color:#319966}.scheme_dark .post_featured.hover_icons .icons a{color:#ffffff;\tbackground-color:rgba(0,0,0,0.7)}.scheme_dark .post_featured.hover_icons a:hover{color:#ffffff;\tbackground-color:#000000}.scheme_dark .post_featured.hover_fade .post_info,.scheme_dark .post_featured.hover_fade .post_info a,.scheme_dark .post_featured.hover_fade .post_info .post_meta_item,.scheme_dark .post_featured.hover_fade .post_info .post_meta .post_meta_item:before,.scheme_dark .post_featured.hover_fade .post_info .post_meta .post_meta_item:hover:before{color:#ffffff}.scheme_dark .post_featured.hover_fade .post_info a:hover{color:#319966}.scheme_dark .post_featured.hover_slide .post_info,.scheme_dark .post_featured.hover_slide .post_info a,.scheme_dark .post_featured.hover_slide .post_info .post_meta_item,.scheme_dark .post_featured.hover_slide .post_info .post_meta .post_meta_item:before,.scheme_dark .post_featured.hover_slide .post_info .post_meta .post_meta_item:hover:before{color:#ffffff}.scheme_dark .post_featured.hover_slide .post_info a:hover{color:#319966}.scheme_dark .post_featured.hover_slide .post_info .post_title:after{background-color:#ffffff}.scheme_dark .post_featured.hover_pull .post_info,.scheme_dark .post_featured.hover_pull .post_info a{color:#ffffff}.scheme_dark .post_featured.hover_pull .post_info a:hover{color:#319966}.scheme_dark .post_featured.hover_pull .post_info .post_descr{background-color:#ffffff}.scheme_dark .post_featured.hover_border .post_info,.scheme_dark .post_featured.hover_border .post_info a,.scheme_dark .post_featured.hover_border .post_info .post_meta_item,.scheme_dark .post_featured.hover_border .post_info .post_meta .post_meta_item:before,.scheme_dark .post_featured.hover_border .post_info .post_meta .post_meta_item:hover:before{color:#ffffff}.scheme_dark .post_featured.hover_border .post_info a:hover{color:#319966}.scheme_dark .post_featured.hover_border .post_info:before,.scheme_dark .post_featured.hover_border .post_info:after{border-color:#ffffff}.scheme_dark .post_featured.hover_shop .icons a{color:#ffffff !important;\tborder-color:#ffffff !important;\tbackground-color:transparent}.scheme_dark .post_featured.hover_shop .icons a:hover{color:#ffffff !important;\tborder-color:#ffffff !important;\tbackground-color:#ffffff}.scheme_dark .post_featured.hover_shop_buttons .icons .shop_link{color:#000000;\tbackground-color:#ffffff}.scheme_dark .post_featured.hover_shop_buttons .icons a:hover{color:#1d1d1d;\tbackground-color:#e9f6f7}.scheme_dark .sc_layouts_row_delimiter,.scheme_dark.sc_layouts_row_delimiter{border-color:#1c1b1f}.scheme_dark .footer_wrap .sc_layouts_row_delimiter,.footer_wrap .scheme_dark.vc_row .sc_layouts_row_delimiter,.footer_wrap .scheme_dark.sc_layouts_row_delimiter,.scheme_dark.footer_wrap .sc_layouts_row_delimiter{border-color:#313131}.scheme_dark .sc_layouts_item_icon{color:#319966}.scheme_dark .sc_layouts_item_icon:hover{color:#ffffff}.scheme_dark .sc_layouts_item_details_line1{color:#319966}.scheme_dark .sc_layouts_item_details_line2{color:#ffffff}.scheme_dark .sc_layouts_row_fixed_on{background-color:rgba(0,0,0,0.9)}.scheme_dark .scheme_dark.sc_layouts_row_fixed_on{background-color:#191b1c}/* Row type:Narrow */.scheme_dark .sc_layouts_row.sc_layouts_row_type_narrow,.scheme_dark.sc_layouts_row.sc_layouts_row_type_narrow{color:#5d5d5d;\tbackground-color:#1a1c1d}.scheme_dark .sc_layouts_row_type_narrow .sc_layouts_item,.scheme_dark.sc_layouts_row_type_narrow .sc_layouts_item{color:#5d5d5d}.scheme_dark .sc_layouts_row_type_narrow .sc_layouts_item a,.scheme_dark.sc_layouts_row_type_narrow .sc_layouts_item a{color:#5d5d5d}.scheme_dark .sc_layouts_row_type_narrow .sc_layouts_item a:hover,.scheme_dark .sc_layouts_row_type_narrow .sc_layouts_item a:hover .sc_layouts_item_icon,.scheme_dark.sc_layouts_row_type_narrow .sc_layouts_item a:hover,.scheme_dark.sc_layouts_row_type_narrow .sc_layouts_item a:hover .sc_layouts_item_icon{color:#ffffff}.scheme_dark .sc_layouts_row_type_narrow .sc_layouts_item_icon,.scheme_dark.sc_layouts_row_type_narrow .sc_layouts_item_icon{color:#319966}.scheme_dark .sc_layouts_row_type_narrow .sc_layouts_item_details_line1,.scheme_dark .sc_layouts_row_type_narrow .sc_layouts_item_details_line2,.scheme_dark.sc_layouts_row_type_narrow .sc_layouts_item_details_line1,.scheme_dark.sc_layouts_row_type_narrow .sc_layouts_item_details_line2{color:#5d5d5d}.scheme_dark .sc_layouts_row_type_narrow .socials_wrap .social_item a,.scheme_dark.sc_layouts_row_type_narrow .socials_wrap .social_item a{background-color:transparent;\tcolor:#319966}.scheme_dark .sc_layouts_row_type_narrow .socials_wrap .social_item a:hover,.scheme_dark.sc_layouts_row_type_narrow .socials_wrap .social_item a:hover{background-color:transparent;\tcolor:#fe7259}.scheme_dark .sc_layouts_row_type_narrow .sc_button_wrap .sc_button,.scheme_dark.sc_layouts_row_type_narrow .sc_button_wrap .sc_button{background-color:transparent;\tborder-color:#319966;\tcolor:#319966}.scheme_dark .sc_layouts_row_type_narrow .sc_button_wrap .sc_button:hover,.scheme_dark.sc_layouts_row_type_narrow .sc_button_wrap .sc_button:hover{background-color:transparent;\tborder-color:#fe7259;\tcolor:#fe7259 !important}.scheme_dark .sc_layouts_row_type_narrow .search_wrap .search_submit,.scheme_dark.sc_layouts_row_type_narrow .search_wrap .search_submit{background-color:transparent;\tcolor:#319966}.scheme_dark .sc_layouts_row_type_narrow .search_wrap .search_field,.scheme_dark.sc_layouts_row_type_narrow .search_wrap .search_field{color:#5d5d5d}.scheme_dark .sc_layouts_row_type_narrow .search_wrap .search_field::-webkit-input-placeholder,.scheme_dark.sc_layouts_row_type_narrow .search_wrap .search_field::-webkit-input-placeholder{color:#5d5d5d}.scheme_dark .sc_layouts_row_type_narrow .search_wrap .search_field::-moz-placeholder,.scheme_dark.sc_layouts_row_type_narrow .search_wrap .search_field::-moz-placeholder{color:#5d5d5d}.scheme_dark .sc_layouts_row_type_narrow .search_wrap .search_field:-ms-input-placeholder,.scheme_dark.sc_layouts_row_type_narrow .search_wrap .search_field:-ms-input-placeholder{color:#5d5d5d}.scheme_dark .sc_layouts_row_type_narrow .search_wrap .search_field:focus,.scheme_dark.sc_layouts_row_type_narrow .search_wrap .search_field:focus{color:#ffffff}/* Row type:Compact */.scheme_dark .sc_layouts_row_type_compact .sc_layouts_item,.scheme_dark.sc_layouts_row_type_compact .sc_layouts_item{color:#ffffff}.scheme_dark .sc_layouts_row_type_compact .sc_layouts_item a,.scheme_dark.sc_layouts_row_type_compact .sc_layouts_item a{color:#ffffff}.scheme_dark .sc_layouts_row_type_compact .sc_layouts_item a:hover,.scheme_dark.sc_layouts_row_type_compact .sc_layouts_item a:hover,.scheme_dark .sc_layouts_row_type_compact .sc_layouts_item a:hover .sc_layouts_item_icon,.scheme_dark.sc_layouts_row_type_compact .sc_layouts_item a:hover .sc_layouts_item_icon{color:#ffffff}.scheme_dark .sc_layouts_row_type_compact .sc_layouts_item_icon,.scheme_dark.sc_layouts_row_type_compact .sc_layouts_item_icon{color:#319966}.scheme_dark .sc_layouts_row_type_compact .sc_layouts_item_details_line1,.scheme_dark .sc_layouts_row_type_compact .sc_layouts_item_details_line2,.scheme_dark.sc_layouts_row_type_compact .sc_layouts_item_details_line1,.scheme_dark.sc_layouts_row_type_compact .sc_layouts_item_details_line2{color:#ffffff}.scheme_dark .sc_layouts_row_type_compact a:hover .sc_layouts_item_details_line1,.scheme_dark .sc_layouts_row_type_compact a:hover .sc_layouts_item_details_line2,.scheme_dark.sc_layouts_row_type_compact a:hover .sc_layouts_item_details_line1,.scheme_dark.sc_layouts_row_type_compact a:hover .sc_layouts_item_details_line2{color:#319966}.scheme_dark .sc_layouts_row_type_compact .socials_wrap .social_item a,.scheme_dark.sc_layouts_row_type_compact .socials_wrap .social_item a{background-color:transparent;\tcolor:#ffffff}.scheme_dark .sc_layouts_row_type_compact .socials_wrap .social_item a:hover,.scheme_dark.sc_layouts_row_type_compact .socials_wrap .social_item a:hover{background-color:transparent;\tcolor:#e9f6f7}.scheme_dark .sc_layouts_row_type_compact .search_wrap .search_submit,.scheme_dark.sc_layouts_row_type_compact .search_wrap .search_submit{background-color:transparent;\tcolor:#319966}.scheme_dark .sc_layouts_row_type_compact .search_wrap .search_submit:hover,.scheme_dark.sc_layouts_row_type_compact .search_wrap .search_submit:hover{background-color:transparent;\tcolor:#ffffff}.scheme_dark .sc_layouts_row_type_compact .search_wrap.search_style_normal .search_submit,.scheme_dark.sc_layouts_row_type_compact .search_wrap.search_style_normal .search_submit{color:#319966}.scheme_dark .sc_layouts_row_type_compact .search_wrap.search_style_normal .search_submit:hover,.scheme_dark.sc_layouts_row_type_compact .search_wrap.search_style_normal .search_submit:hover{color:#e9f6f7}.scheme_dark .sc_layouts_row_type_compact .search_wrap .search_field::-webkit-input-placeholder,.scheme_dark.sc_layouts_row_type_compact .search_wrap .search_field::-webkit-input-placeholder{color:#8c8686}.scheme_dark .sc_layouts_row_type_compact .search_wrap .search_field::-moz-placeholder,.scheme_dark.sc_layouts_row_type_compact .search_wrap .search_field::-moz-placeholder{color:#8c8686}.scheme_dark .sc_layouts_row_type_compact .search_wrap .search_field:-ms-input-placeholder,.scheme_dark.sc_layouts_row_type_compact .search_wrap .search_field:-ms-input-placeholder{color:#8c8686}/* Row type:Normal */.scheme_dark .sc_layouts_row_type_normal .sc_layouts_item,.scheme_dark.sc_layouts_row_type_normal .sc_layouts_item{color:#8c8686}.scheme_dark .sc_layouts_row_type_normal .sc_layouts_item a,.scheme_dark.sc_layouts_row_type_normal .sc_layouts_item a{color:#8c8686}.scheme_dark .sc_layouts_row_type_normal .sc_layouts_item a:hover,.scheme_dark.sc_layouts_row_type_normal .sc_layouts_item a:hover,.scheme_dark .sc_layouts_row_type_normal .sc_layouts_item a:hover .sc_layouts_item_icon,.scheme_dark.sc_layouts_row_type_normal .sc_layouts_item a:hover .sc_layouts_item_icon{color:#ffffff}.scheme_dark .sc_layouts_row_type_normal .search_wrap .search_submit,.scheme_dark.sc_layouts_row_type_normal .search_wrap .search_submit{background-color:transparent;\tcolor:#5f5f5f}.scheme_dark .sc_layouts_row_type_normal .search_wrap .search_submit:hover,.scheme_dark.sc_layouts_row_type_normal .search_wrap .search_submit:hover{background-color:transparent;\tcolor:#191b1c}.scheme_dark .sc_layouts_logo b{color:#ffffff}.scheme_dark .sc_layouts_logo i{color:#319966}.scheme_dark .sc_layouts_logo_text{color:#319966}.scheme_dark .sc_layouts_logo:hover .logo_text{color:#ffffff}.scheme_dark .logo_slogan{color:#8c8686}.scheme_dark .search_style_expand.search_opened{background-color:#000000;\tborder-color:#1c1b1f}.scheme_dark .search_style_expand.search_opened .search_submit{color:#8c8686}.scheme_dark .search_style_expand .search_submit:hover,.scheme_dark .search_style_expand .search_submit:focus{color:#ffffff}.scheme_dark .search_style_fullscreen.search_opened .search_form_wrap{background-color:rgba(0,0,0,0.9)}.scheme_dark .search_style_fullscreen.search_opened .search_form{border-color:#ffffff}.scheme_dark .search_style_fullscreen.search_opened .search_close,.scheme_dark .search_style_fullscreen.search_opened .search_field,.scheme_dark .search_style_fullscreen.search_opened .search_submit{color:#ffffff}.scheme_dark .search_style_fullscreen.search_opened .search_close:hover,.scheme_dark .search_style_fullscreen.search_opened .search_field:hover,.scheme_dark .search_style_fullscreen.search_opened .search_field:focus{color:#ffffff}.scheme_dark .search_style_fullscreen.search_opened .search_submit:hover,.scheme_dark .search_style_fullscreen.search_opened .search_submit:focus{color:#319966}.scheme_dark .search_style_fullscreen.search_opened .search_field::-webkit-input-placeholder{color:#ffffff; opacity:1}.scheme_dark .search_style_fullscreen.search_opened .search_field::-moz-placeholder{color:#ffffff; opacity:1}.scheme_dark .search_style_fullscreen.search_opened .search_field:-moz-placeholder{color:#ffffff; opacity:1}.scheme_dark .search_style_fullscreen.search_opened .search_field:-ms-input-placeholder{color:#ffffff; opacity:1}.scheme_dark .search_wrap .search_results{background-color:#000000;\tborder-color:#1c1b1f}.scheme_dark .search_wrap .search_results:after{background-color:#000000;\tborder-left-color:#1c1b1f;\tborder-top-color:#1c1b1f}.scheme_dark .search_wrap .search_results .search_results_close{color:#5f5f5f}.scheme_dark .search_wrap .search_results .search_results_close:hover{color:#ffffff}.scheme_dark .search_results.widget_area .post_item + .post_item{border-top-color:#1c1b1f}.scheme_dark .sc_layouts_title .sc_layouts_title_meta,.scheme_dark .sc_layouts_title .post_meta,.scheme_dark .sc_layouts_title .post_meta_item,.scheme_dark .sc_layouts_title .post_meta_item a,.scheme_dark .sc_layouts_title .post_meta_item:before,.scheme_dark .sc_layouts_title .post_meta_item:hover:before,.scheme_dark .sc_layouts_title .post_meta_item.post_categories,.scheme_dark .sc_layouts_title .post_meta_item.post_categories a,.scheme_dark .sc_layouts_title .post_date a,.scheme_dark .sc_layouts_title .post_date:before,.scheme_dark .sc_layouts_title .post_info .post_info_item,.scheme_dark .sc_layouts_title .post_info .post_info_item a,.scheme_dark .sc_layouts_title .post_info_counters .post_counters_item,.scheme_dark .sc_layouts_title .post_counters .socials_share .socials_caption:before,.scheme_dark .sc_layouts_title .post_counters .socials_share .socials_caption:hover:before{color:#ffffff}.scheme_dark .sc_layouts_title .post_date a:hover,.scheme_dark .sc_layouts_title a.post_meta_item:hover,.scheme_dark .sc_layouts_title .post_meta_item a:hover,.scheme_dark .sc_layouts_title .post_meta_item.post_categories a:hover,.scheme_dark .sc_layouts_title .post_info .post_info_item a:hover,.scheme_dark .sc_layouts_title .post_info_counters .post_counters_item:hover{color:#5f5f5f}.scheme_dark .sc_layouts_title .sc_layouts_title_description{color:#ffffff}.scheme_dark .sc_layouts_title_breadcrumbs{color:#ffffff}.scheme_dark .sc_layouts_title_breadcrumbs a{color:#ffffff !important}.scheme_dark .sc_layouts_title_breadcrumbs a:hover{color:#319966 !important}.scheme_dark .sc_layouts_menu_nav>li>a{color:#ffffff}.scheme_dark .sc_layouts_menu_nav>li>a:hover,.scheme_dark .sc_layouts_menu_nav>li.sfHover>a{color:#319966 !important}.scheme_dark .sc_layouts_menu_nav>li.current-menu-item>a,.scheme_dark .sc_layouts_menu_nav>li.current-menu-parent>a,.scheme_dark .sc_layouts_menu_nav>li.current-menu-ancestor>a{color:#319966 !important}.scheme_dark .sc_layouts_menu_popup .sc_layouts_menu_nav,.scheme_dark .sc_layouts_menu_nav>li ul{background-color:#319966}.scheme_dark .sc_layouts_menu_popup .sc_layouts_menu_nav>li>a,.scheme_dark .sc_layouts_menu_nav>li li>a{color:#ffffff !important}.scheme_dark .sc_layouts_menu_popup .sc_layouts_menu_nav>li>a:hover,.scheme_dark .sc_layouts_menu_popup .sc_layouts_menu_nav>li.sfHover>a,.scheme_dark .sc_layouts_menu_nav>li li>a:hover,.scheme_dark .sc_layouts_menu_nav>li li.sfHover>a{color:#ffffff !important;\tborder-color:#ffffff}.scheme_dark .sc_layouts_menu_nav li[class*=\"columns-\"] li.menu-item-has-children>a:hover,.scheme_dark .sc_layouts_menu_nav li[class*=\"columns-\"] li.menu-item-has-children.sfHover>a{color:#5d5d5d !important;\tbackground-color:transparent}.scheme_dark .sc_layouts_menu_nav>li li[class*=\"icon-\"]:before{color:#fe7259}.scheme_dark .sc_layouts_menu_nav>li li[class*=\"icon-\"]:hover:before,.scheme_dark .sc_layouts_menu_nav>li li[class*=\"icon-\"].shHover:before{color:#fe7259}.scheme_dark .sc_layouts_menu_nav>li li.current-menu-item>a,.scheme_dark .sc_layouts_menu_nav>li li.current-menu-parent>a,.scheme_dark .sc_layouts_menu_nav>li li.current-menu-ancestor>a{color:#ffffff}.scheme_dark .sc_layouts_menu_nav>li li.current-menu-item:before,.scheme_dark .sc_layouts_menu_nav>li li.current-menu-parent:before,.scheme_dark .sc_layouts_menu_nav>li li.current-menu-ancestor:before{color:#ffffff}.scheme_dark.menu_side_wrap .menu_side_button{color:#ffffff;\tborder-color:#313131;\tbackground-color:rgba(26,28,29,0.7)}.scheme_dark.menu_side_wrap .menu_side_button:hover{color:#1d1d1d;\tborder-color:#fe7259;\tbackground-color:#319966}.scheme_dark .menu_side_inner,.scheme_dark .menu_mobile_inner{color:#5d5d5d;\tbackground-color:#1a1c1d}.scheme_dark .menu_mobile_button{color:#ffffff}.scheme_dark .menu_mobile_button:hover{color:#319966}.scheme_dark .menu_mobile_close:before,.scheme_dark .menu_mobile_close:after{border-color:#ffffff}.scheme_dark .menu_mobile_close:hover:before,.scheme_dark .menu_mobile_close:hover:after{border-color:#319966}.scheme_dark .menu_mobile_inner a{color:#ffffff}.scheme_dark .menu_mobile_inner a:hover,.scheme_dark .menu_mobile_inner .current-menu-ancestor>a,.scheme_dark .menu_mobile_inner .current-menu-item>a{color:#319966}.scheme_dark .menu_mobile_inner .search_mobile .search_submit{color:#319966}.scheme_dark .menu_mobile_inner .search_mobile .search_submit:focus,.scheme_dark .menu_mobile_inner .search_mobile .search_submit:hover{color:#ffffff}.scheme_dark .menu_mobile_inner .social_item a{color:#319966}.scheme_dark .menu_mobile_inner .social_item a:hover{color:#ffffff}.scheme_dark .menu_hover_fade_box .sc_layouts_menu_nav>a:hover,.scheme_dark .menu_hover_fade_box .sc_layouts_menu_nav>li>a:hover,.scheme_dark .menu_hover_fade_box .sc_layouts_menu_nav>li.sfHover>a{color:#319966;\tbackground-color:#1a1c1d}.scheme_dark .menu_hover_slide_line .sc_layouts_menu_nav>li#blob{background-color:#319966}.scheme_dark .menu_hover_slide_box .sc_layouts_menu_nav>li#blob{background-color:#1a1c1d}.scheme_dark .menu_hover_zoom_line .sc_layouts_menu_nav>li>a:before{background-color:#319966}.scheme_dark .menu_hover_path_line .sc_layouts_menu_nav>li:before,.scheme_dark .menu_hover_path_line .sc_layouts_menu_nav>li:after,.scheme_dark .menu_hover_path_line .sc_layouts_menu_nav>li>a:before,.scheme_dark .menu_hover_path_line .sc_layouts_menu_nav>li>a:after{background-color:#319966}.scheme_dark .menu_hover_roll_down .sc_layouts_menu_nav>li>a:before{background-color:#319966}.scheme_dark .menu_hover_color_line .sc_layouts_menu_nav>li>a:before{background-color:#ffffff}.scheme_dark .menu_hover_color_line .sc_layouts_menu_nav>li>a:after,.scheme_dark .menu_hover_color_line .sc_layouts_menu_nav>li.menu-item-has-children>a:after{background-color:#319966}.scheme_dark .menu_hover_color_line .sc_layouts_menu_nav>li.sfHover>a,.scheme_dark .menu_hover_color_line .sc_layouts_menu_nav>li>a:hover,.scheme_dark .menu_hover_color_line .sc_layouts_menu_nav>li>a:focus{color:#319966}.scheme_dark.sc_layouts_row .vc_separator.vc_sep_color_grey .vc_sep_line,.scheme_dark .sc_layouts_row .vc_separator.vc_sep_color_grey .vc_sep_line{border-color:#313131}.scheme_dark .sc_layouts_cart_items_short{background-color:#ffffff;\tcolor:#000000}.scheme_dark .sc_layouts_cart_widget{border-color:#1c1b1f;\tbackground-color:#000000;\tcolor:#8c8686}.scheme_dark .sc_layouts_cart_widget:after{border-color:#1c1b1f;\tbackground-color:#000000}.scheme_dark .sc_layouts_cart_widget .sc_layouts_cart_widget_close{color:#5f5f5f}.scheme_dark .sc_layouts_cart_widget .sc_layouts_cart_widget_close:hover{color:#ffffff}.scheme_dark .sc_layouts_currency .woocommerce-currency-switcher-form .wSelect-selected{color:#5d5d5d}.scheme_dark .sc_layouts_currency .woocommerce-currency-switcher-form .wSelect-selected:hover{color:#ffffff}.scheme_dark .sc_layouts_currency .chosen-container .chosen-results,.scheme_dark .sc_layouts_currency .woocommerce-currency-switcher-form .wSelect-options-holder,.scheme_dark .sc_layouts_currency .woocommerce-currency-switcher-form .dd-options,.scheme_dark .sc_layouts_currency .woocommerce-currency-switcher-form .dd-option{background:#1a1c1d;\tcolor:#ffffff}.scheme_dark .sc_layouts_currency .chosen-container .chosen-results li,.scheme_dark .sc_layouts_currency .woocommerce-currency-switcher-form .wSelect-option{color:#ffffff}.scheme_dark .sc_layouts_currency .chosen-container .active-result.highlighted,.scheme_dark .sc_layouts_currency .chosen-container .active-result.result-selected,.scheme_dark .sc_layouts_currency .woocommerce-currency-switcher-form .wSelect-option:hover,.scheme_dark .sc_layouts_currency .woocommerce-currency-switcher-form .wSelect-options-holder .wSelect-option-selected,.scheme_dark .sc_layouts_currency .woocommerce-currency-switcher-form .dd-option:hover,.scheme_dark .sc_layouts_currency .woocommerce-currency-switcher-form .dd-option-selected{color:#319966 !important}.scheme_dark .sc_layouts_currency .woocommerce-currency-switcher-form .dd-option-description{color:#5d5d5d}.scheme_dark .socials_wrap .social_item a,.scheme_dark .socials_wrap .social_item a i{color:#5f5f5f}.scheme_dark .socials_wrap .social_item a:hover,.scheme_dark .socials_wrap .social_item a:hover i{color:#ffffff}.scheme_dark .footer_wrap .sc_layouts_row_type_compact .socials_wrap .social_item a,.scheme_dark.footer_wrap .sc_layouts_row_type_compact .socials_wrap .social_item a{color:#ffffff;\tbackground-color:transparent}.scheme_dark .footer_wrap .sc_layouts_row_type_compact .socials_wrap .social_item a:hover,.scheme_dark.footer_wrap .sc_layouts_row_type_compact .socials_wrap .social_item a:hover{color:#319966;\tbackground-color:transparent}.scheme_dark .trx_addons_accent,.scheme_dark .trx_addons_accent>a,.scheme_dark .trx_addons_accent>*{color:#319966}.scheme_dark .trx_addons_accent>a:hover{color:#ffffff}.scheme_dark .sidebar .trx_addons_accent,.scheme_dark.sidebar .trx_addons_accent,.scheme_dark .sidebar .trx_addons_accent>a,.scheme_dark.sidebar .trx_addons_accent>a,.scheme_dark .sidebar .trx_addons_accent>*,.scheme_dark.sidebar .trx_addons_accent>*,.scheme_dark .footer_wrap .trx_addons_accent,.scheme_dark.footer_wrap .trx_addons_accent,.scheme_dark .footer_wrap .trx_addons_accent>a,.scheme_dark.footer_wrap .trx_addons_accent>a,.scheme_dark .footer_wrap .trx_addons_accent>*,.scheme_dark.footer_wrap .trx_addons_accent>*{color:#319966}.scheme_dark .sidebar .trx_addons_accent>a:hover,.scheme_dark.sidebar .trx_addons_accent>a:hover,.scheme_dark .footer_wrap .trx_addons_accent>a:hover,.scheme_dark.footer_wrap .trx_addons_accent>a:hover{color:#ffffff}.scheme_dark .trx_addons_hover,.scheme_dark .trx_addons_hover>*{color:#e9f6f7}.scheme_dark .trx_addons_accent_bg{background-color:#319966;\tcolor:#ffffff!important}.scheme_dark .trx_addons_inverse{color:#000000;\tbackground-color:#ffffff}.scheme_dark .trx_addons_dark,.scheme_dark .trx_addons_dark>a{color:#ffffff}.scheme_dark .trx_addons_dark>a:hover{color:#319966}.scheme_dark .trx_addons_inverse,.scheme_dark .trx_addons_inverse>a{color:#000000;\tbackground-color:#ffffff}.scheme_dark .trx_addons_inverse>a:hover{color:#1d1d1d}.scheme_dark .trx_addons_dropcap_style_1{color:#ffffff;\tbackground-color:#319966}.scheme_dark .trx_addons_dropcap_style_2{color:#1d1d1d;\tbackground-color:rgba(0,0,0,0)}.scheme_dark ul[class*=\"trx_addons_list\"]>li:before{color:#319966}.scheme_dark ul[class*=\"trx_addons_list\"][class*=\"_circled\"]>li:before{color:#ffffff;\tbackground-color:#319966}.scheme_dark .trx_addons_list_parameters>li + li{border-color:#1c1b1f}.scheme_dark .trx_addons_tooltip{color:#8c8686;\tborder-color:#8c8686}.scheme_dark .trx_addons_tooltip:before{color:#000000;\tbackground-color:#ffffff}.scheme_dark .trx_addons_tooltip:after{border-top-color:#ffffff}.scheme_dark blockquote.trx_addons_blockquote_style_1:before,.scheme_dark blockquote.trx_addons_blockquote_style_1{blockquote}.scheme_dark blockquote.trx_addons_blockquote_style_1 b{color:#000000}.scheme_dark blockquote.trx_addons_blockquote_style_1 a{}.scheme_dark blockquote.trx_addons_blockquote_style_1 cite{color:#319966}.scheme_dark blockquote.trx_addons_blockquote_style_1 a:hover{color:#319966}.scheme_dark blockquote.trx_addons_blockquote_style_2{color:#ffffff}.scheme_dark blockquote.trx_addons_blockquote_style_2:before,.scheme_dark blockquote.trx_addons_blockquote_style_2 a,.scheme_dark blockquote.trx_addons_blockquote_style_2 cite{color:#ffffff}.scheme_dark blockquote.trx_addons_blockquote_style_2 a:hover{color:#1d1d1d}.scheme_dark ol>li::before{color:#319966}.scheme_dark .trx_addons_hover_mask{background-color:rgba(255,255,255,0.7)}.scheme_dark .trx_addons_hover_title{color:#ffffff}.scheme_dark .trx_addons_hover_text{color:#5f5f5f}.scheme_dark .trx_addons_hover_icon,.scheme_dark .trx_addons_hover_links a{color:#ffffff;\tbackground-color:#319966}.scheme_dark .trx_addons_hover_icon:hover,.scheme_dark .trx_addons_hover_links a:hover{colO=function(e){N?e.webkitRequestFullScreen():A?e.mozRequestFullScreen():L&&e.msRequestFullscreen()},n.cancelFullScreen=D=function(){N?r.default.webkitCancelFullScreen():A?r.default.mozCancelFullScreen():L&&r.default.msExitFullscreen()});var R=n.HAS_NATIVE_FULLSCREEN=_,V=n.HAS_WEBKIT_NATIVE_FULLSCREEN=N,H=n.HAS_MOZ_NATIVE_FULLSCREEN=A,U=n.HAS_MS_NATIVE_FULLSCREEN=L,q=n.HAS_IOS_FULLSCREEN=k,B=n.HAS_TRUE_NATIVE_FULLSCREEN=F,z=n.HAS_NATIVE_FULLSCREEN_ENABLED=j,W=n.FULLSCREEN_EVENT_NAME=I;n.isFullScreen=M,n.requestFullScreen=O,n.cancelFullScreen=D,a.default.Features=a.default.Features||{},a.default.Features.isiPad=d,a.default.Features.isiPod=c,a.default.Features.isiPhone=u,a.default.Features.isiOS=a.default.Features.isiPhone||a.default.Features.isiPad,a.default.Features.isAndroid=f,a.default.Features.isIE=p,a.default.Features.isEdge=m,a.default.Features.isChrome=h,a.default.Features.isFirefox=v,a.default.Features.isSafari=g,a.default.Features.isStockAndroid=y,a.default.Features.hasMSE=E,a.default.Features.supportsNativeHLS=C,a.default.Features.supportsPointerEvents=b,a.default.Features.supportsPassiveEvent=S,a.default.Features.hasiOSFullScreen=q,a.default.Features.hasNativeFullscreen=R,a.default.Features.hasWebkitNativeFullScreen=V,a.default.Features.hasMozNativeFullScreen=H,a.default.Features.hasMsNativeFullScreen=U,a.default.Features.hasTrueNativeFullScreen=B,a.default.Features.nativeFullScreenEnabled=z,a.default.Features.fullScreenEventName=W,a.default.Features.isFullScreen=M,a.default.Features.requestFullScreen=O,a.default.Features.cancelFullScreen=D},{2:2,3:3,7:7}],26:[function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}function i(e){return new Promise(function(t,n){var o=p.default.createElement(\"script\");o.src=e,o.async=!0,o.onload=function(){o.remove(),t()},o.onerror=function(){o.remove(),n()},p.default.head.appendChild(o)})}function r(e){var t=e.getBoundingClientRect(),n=f.default.pageXOffset||p.default.documentElement.scrollLeft,o=f.default.pageYOffset||p.default.documentElement.scrollTop;return{top:t.top+o,left:t.left+n}}function a(e,t){y(e,t)?b(e,t):E(e,t)}function s(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:400,n=arguments[2];e.style.opacity||(e.style.opacity=1);var o=null;f.default.requestAnimationFrame(function i(r){var a=r-(o=o||r),s=parseFloat(1-a/t,2);e.style.opacity=s<0?0:s,a>t?n&&\"function\"==typeof n&&n():f.default.requestAnimationFrame(i)})}function l(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:400,n=arguments[2];e.style.opacity||(e.style.opacity=0);var o=null;f.default.requestAnimationFrame(function i(r){var a=r-(o=o||r),s=parseFloat(a/t,2);e.style.opacity=s>1?1:s,a>t?n&&\"function\"==typeof n&&n():f.default.requestAnimationFrame(i)})}function d(e,t){var n=[];e=e.parentNode.firstChild;do{t&&!t(e)||n.push(e)}while(e=e.nextSibling);return n}function u(e){return void 0!==e.getClientRects&&\"function\"===e.getClientRects?!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length):!(!e.offsetWidth&&!e.offsetHeight)}function c(e,t,n,o){var i=f.default.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject(\"Microsoft.XMLHTTP\"),r=\"application/x-www-form-urlencoded; charset=UTF-8\",a=!1,s=\"*/\".concat(\"*\");switch(t){case\"text\":r=\"text/plain\";break;case\"json\":r=\"application/json, text/javascript\";break;case\"html\":r=\"text/html\";break;case\"xml\":r=\"application/xml, text/xml\"}\"application/x-www-form-urlencoded\"!==r&&(s=r+\", */*; q=0.01\"),i&&(i.open(\"GET\",e,!0),i.setRequestHeader(\"Accept\",s),i.onreadystatechange=function(){if(!a&&4===i.readyState)if(200===i.status){a=!0;var e=void 0;switch(t){case\"json\":e=JSON.parse(i.responseText);break;case\"xml\":e=i.responseXML;break;default:e=i.responseText}n(e)}else\"function\"==typeof o&&o(i.status)},i.send())}Object.defineProperty(n,\"__esModule\",{value:!0}),n.removeClass=n.addClass=n.hasClass=void 0,n.loadScript=i,n.offset=r,n.toggleClass=a,n.fadeOut=s,n.fadeIn=l,n.siblings=d,n.visible=u,n.ajax=c;var f=o(e(3)),p=o(e(2)),m=o(e(7)),h=void 0,v=void 0,g=void 0;\"classList\"in p.default.documentElement?(h=function(e,t){return void 0!==e.classList&&e.classList.contains(t)},v=function(e,t){return e.classList.add(t)},g=function(e,t){return e.classList.remove(t)}):(h=function(e,t){return new RegExp(\"\\\\b\"+t+\"\\\\b\").test(e.className)},v=function(e,t){y(e,t)||(e.className+=\" \"+t)},g=function(e,t){e.className=e.className.replace(new RegExp(\"\\\\b\"+t+\"\\\\b\",\"g\"),\"\")});var y=n.hasClass=h,E=n.addClass=v,b=n.removeClass=g;m.default.Utils=m.default.Utils||{},m.default.Utils.offset=r,m.default.Utils.hasClass=y,m.default.Utils.addClass=E,m.default.Utils.removeClass=b,m.default.Utils.toggleClass=a,m.default.Utils.fadeIn=l,m.default.Utils.fadeOut=s,m.default.Utils.siblings=d,m.default.Utils.visible=u,m.default.Utils.ajax=c,m.default.Utils.loadScript=i},{2:2,3:3,7:7}],27:[function(e,t,n){\"use strict\";function o(e){if(\"string\"!=typeof e)throw new Error(\"Argument passed must be a string\");var t={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\"};return e.replace(/[&<>\"]/g,function(e){return t[e]})}function i(e,t){var n=this,o=arguments,i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(\"function\"!=typeof e)throw new Error(\"First argument must be a function\");if(\"number\"!=typeof t)throw new Error(\"Second argument must be a numeric value\");var r=void 0;return function(){var a=n,s=o,l=i&&!r;clearTimeout(r),r=setTimeout(function(){r=null,i||e.apply(a,s)},t),l&&e.apply(a,s)}}function r(e){return Object.getOwnPropertyNames(e).length<=0}function a(e,t){var n=/^((after|before)print|(before)?unload|hashchange|message|o(ff|n)line|page(hide|show)|popstate|resize|storage)\\b/,o={d:[],w:[]};return(e||\"\").split(\" \").forEach(function(e){var i=e+(t?\".\"+t:\"\");i.startsWith(\".\")?(o.d.push(i),o.w.push(i)):o[n.test(e)?\"w\":\"d\"].push(i)}),o.d=o.d.join(\" \"),o.w=o.w.join(\" \"),o}function s(e,t){if(\"string\"!=typeof e)throw new Error(\"Event name must be a string\");var n=e.match(/([a-z]+\\.([a-z]+))/i),o={target:t};return null!==n&&(e=n[1],o.namespace=n[2]),new window.CustomEvent(e,{detail:o})}function l(e,t){return!!(e&&t&&2&e.compareDocumentPosition(t))}function d(e){return\"string\"==typeof e}Object.defineProperty(n,\"__esModule\",{value:!0}),n.escapeHTML=o,n.debounce=i,n.isObjectEmpty=r,n.splitEvents=a,n.createEvent=s,n.isNodeAfter=l,n.isString=d;var u=function(e){return e&&e.__esModule?e:{default:e}}(e(7));u.default.Utils=u.default.Utils||{},u.default.Utils.escapeHTML=o,u.default.Utils.debounce=i,u.default.Utils.isObjectEmpty=r,u.default.Utils.splitEvents=a,u.default.Utils.createEvent=s,u.default.Utils.isNodeAfter=l,u.default.Utils.isString=d},{7:7}],28:[function(e,t,n){\"use strict\";function o(e){if(\"string\"!=typeof e)throw new Error(\"`url` argument must be a string\");var t=document.createElement(\"div\");return t.innerHTML='<a href=\"'+(0,u.escapeHTML)(e)+'\">x</a>',t.firstChild.href}function i(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\";return e&&!t?a(e):t}function r(e){if(\"string\"!=typeof e)throw new Error(\"`type` argument must be a string\");return e&&e.indexOf(\";\")>-1?e.substr(0,e.indexOf(\";\")):e}function a(e){if(\"string\"!=typeof e)throw new Error(\"`url` argument must be a string\");for(var t=0,n=c.length;t<n;t++){var o=c[t](e);if(o)return o}var i=l(s(e)),r=\"video/mp4\";return i&&(~[\"mp4\",\"m4v\",\"ogg\",\"ogv\",\"webm\",\"flv\",\"mpeg\",\"mov\"].indexOf(i)?r=\"video/\"+i:~[\"mp3\",\"oga\",\"wav\",\"mid\",\"midi\"].indexOf(i)&&(r=\"audio/\"+i)),r}function s(e){if(\"string\"!=typeof e)throw new Error(\"`url` argument must be a string\");var t=e.split(\"?\")[0].split(\"\\\\\").pop().split(\"/\").pop();return~t.indexOf(\".\")?t.substring(t.lastIndexOf(\".\")+1):\"\"}function l(e){if(\"string\"!=typeof e)throw new Error(\"`extension` argument must be a string\");switch(e){case\"mp4\":case\"m4v\":return\"mp4\";case\"webm\":case\"webma\":case\"webmv\":return\"webm\";case\"ogg\":case\"oga\":case\"ogv\":return\"ogg\";default:return e}}Object.defineProperty(n,\"__esModule\",{value:!0}),n.typeChecks=void 0,n.absolutizeUrl=o,n.formatType=i,n.getMimeFromType=r,n.getTypeFromFile=a,n.getExtension=s,n.normalizeExtension=l;var d=function(e){return e&&e.__esModule?e:{default:e}}(e(7)),u=e(27),c=n.typeChecks=[];d.default.Utils=d.default.Utils||{},d.default.Utils.typeChecks=c,d.default.Utils.absolutizeUrl=o,d.default.Utils.formatType=i,d.default.Utils.getMimeFromType=r,d.default.Utils.getTypeFromFile=a,d.default.Utils.getExtension=s,d.default.Utils.normalizeExtension=l},{27:27,7:7}],29:[function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}var i=o(e(2)),r=o(e(4));if([Element.prototype,CharacterData.prototype,DocumentType.prototype].forEach(function(e){e.hasOwnProperty(\"remove\")||Object.defineProperty(e,\"remove\",{configurable:!0,enumerable:!0,writable:!0,value:function(){this.parentNode.removeChild(this)}})}),function(){function e(e,t){t=t||{bubbles:!1,cancelable:!1,detail:void 0};var n=i.default.createEvent(\"CustomEvent\");return n.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),n}if(\"function\"==typeof window.CustomEvent)return!1;e.prototype=window.Event.prototype,window.CustomEvent=e}(),\"function\"!=typeof Object.assign&&(Object.assign=function(e){if(null===e||void 0===e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var t=Object(e),n=1,o=arguments.length;n<o;n++){var i=arguments[n];if(null!==i)for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(t[r]=i[r])}return t}),String.prototype.startsWith||(String.prototype.startsWith=function(e,t){return t=t||0,this.substr(t,e.length)===e}),Element.prototype.matches||(Element.prototype.matches=Element.prototype.matchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector||Element.prototype.oMatchesSelector||Element.prototype.webkitMatchesSelector||function(e){for(var t=(this.document||this.ownerDocument).querySelectorAll(e),n=t.length-1;--n>=0&&t.item(n)!==this;);return n>-1}),window.Element&&!Element.prototype.closest&&(Element.prototype.closest=function(e){var t=(this.document||this.ownerDocument).querySelectorAll(e),n=void 0,o=this;do{for(n=t.length;--n>=0&&t.item(n)!==o;);}while(n<0&&(o=o.parentElement));return o}),function(){for(var e=0,t=[\"ms\",\"moz\",\"webkit\",\"o\"],n=0;n<t.length&&!window.requestAnimationFrame;++n)window.requestAnimationFrame=window[t[n]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[t[n]+\"CancelAnimationFrame\"]||window[t[n]+\"CancelRequestAnimationFrame\"];window.requestAnimationFrame||(window.requestAnimationFrame=function(t){var n=(new Date).getTime(),o=Math.max(0,16-(n-e)),i=window.setTimeout(function(){t(n+o)},o);return e=n+o,i}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(e){clearTimeout(e)})}(),/firefox/i.test(navigator.userAgent)){var a=window.getComputedStyle;window.getComputedStyle=function(e,t){var n=a(e,t);return null===n?{getPropertyValue:function(){}}:n}}window.Promise||(window.Promise=r.default),function(e){e&&e.prototype&&null===e.prototype.children&&Object.defineProperty(e.prototype,\"children\",{get:function(){for(var e=0,t=void 0,n=this.childNodes,o=[];t=n[e++];)1===t.nodeType&&o.push(t);return o}})}(window.Node||window.Element)},{2:2,4:4}],30:[function(e,t,n){\"use strict\";function o(){return!((arguments.length>0&&void 0!==arguments[0]?arguments[0]:25)%1==0)}function i(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:25,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:\"mm:ss\";e=!e||\"number\"!=typeof e||e<0?0:e;var s=Math.round(.066666*i),l=Math.round(i),d=24*Math.round(3600*i),u=Math.round(600*i),c=o(i)?\";\":\":\",f=void 0,p=void 0,m=void 0,h=void 0,v=Math.round(e*i);if(o(i)){v<0&&(v=d+v);var g=(v%=d)%u;v+=9*s*Math.floor(v/u),g>s&&(v+=s*Math.floor((g-s)/Math.round(60*l-s)));var y=Math.floor(v/l);f=Math.floor(Math.floor(y/60)/60),p=Math.floor(y/60)%60,m=n?y%60:(v/l%60).toFixed(r)}else f=Math.floor(e/3600)%24,p=Math.floor(e/60)%60,m=n?Math.floor(e%60):(e%60).toFixed(r);f=f<=0?0:f,p=p<=0?0:p,m=m<=0?0:m;for(var E=a.split(\":\"),b={},S=0,x=E.length;S<x;++S){for(var w=\"\",P=0,T=E[S].length;P<T;P++)w.indexOf(E[S][P])<0&&(w+=E[S][P]);~[\"f\",\"s\",\"m\",\"h\"].indexOf(w)&&(b[w]=E[S].length)}var C=t||f>0?(f<10&&b.h>1?\"0\"+f:f)+\":\":\"\";return C+=(p<10&&b.m>1?\"0\"+p:p)+\":\",C+=\"\"+(m<10&&b.s>1?\"0\"+m:m),n&&(C+=(h=(h=(v%l).toFixed(0))<=0?0:h)<10&&b.f?c+\"0\"+h:\"\"+c+h),C}function r(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:25;if(\"string\"!=typeof e)throw new TypeError(\"Time must be a string\");if(e.indexOf(\";\")>0&&(e=e.replace(\";\",\":\")),!/\\d{2}(\\:\\d{2}){0,3}/i.test(e))throw new TypeError(\"Time code must have the format `00:00:00`\");var n=e.split(\":\"),i=void 0,r=0,a=0,s=0,l=0,d=0,u=Math.round(.066666*t),c=Math.round(t),f=3600*c,p=60*c;switch(n.length){default:case 1:s=parseInt(n[0],10);break;case 2:a=parseInt(n[0],10),s=parseInt(n[1],10);break;case 3:r=parseInt(n[0],10),a=parseInt(n[1],10),s=parseInt(n[2],10);break;case 4:r=parseInt(n[0],10),a=parseInt(n[1],10),s=parseInt(n[2],10),l=parseInt(n[3],10)}return i=o(t)?f*r+p*a+c*s+l-u*((d=60*r+a)-Math.floor(d/10)):(f*r+p*a+t*s+l)/t,parseFloat(i.toFixed(3))}function a(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:25;e=!e||\"number\"!=typeof e||e<0?0:e;for(var o=Math.floor(e/3600)%24,i=Math.floor(e/60)%60,r=Math.floor(e%60),a=[[Math.floor((e%1*n).toFixed(3)),\"f\"],[r,\"s\"],[i,\"m\"],[o,\"h\"]],s=t.timeFormat,l=s[1]===s[0],d=l?2:1,u=s.length<d?s[d]:\":\",c=s[0],f=!1,p=0,m=a.length;p<m;p++)if(~s.indexOf(a[p][1]))f=!0;else if(f){for(var h=!1,v=p;v<m;v++)if(a[v][0]>0){h=!0;break}if(!h)break;l||(s=c+s),s=a[p][1]+u+s,l&&(s=a[p][1]+s),c=a[p][1]}t.timeFormat=s}function s(e){if(\"string\"!=typeof e)throw new TypeError(\"Argument must be a string value\");for(var t=~(e=e.replace(\",\",\".\")).indexOf(\".\")?e.split(\".\")[1].length:0,n=0,o=1,i=0,r=(e=e.split(\":\").reverse()).length;i<r;i++)o=1,i>0&&(o=Math.pow(60,i)),n+=Number(e[i])*o;return Number(n.toFixed(t))}Object.defineProperty(n,\"__esModule\",{value:!0}),n.isDropFrame=o,n.secondsToTimeCode=i,n.timeCodeToSeconds=r,n.calculateTimeFormat=a,n.convertSMPTEtoSeconds=s;var l=function(e){return e&&e.__esModule?e:{default:e}}(e(7));l.default.Utils=l.default.Utils||{},l.default.Utils.secondsToTimeCode=i,l.default.Utils.timeCodeToSeconds=r,l.default.Utils.calculateTimeFormat=a,l.default.Utils.convertSMPTEtoSeconds=s},{7:7}]},{},[29,6,5,15,23,20,19,21,22,24,16,18,17,9,10,11,12,13,14]);"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.315Z",
        "time": 0.22699999681208283,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.1829999964684248,
          "receive": 0.04400000034365803,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 106
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-includes/js/mediaelement/mediaelement-migrate.min.js?ver=4.9.22",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [
            {
              "name": "ver",
              "value": "4.9.22"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:53 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 15 Apr 2021 04:52:56 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"4a9-5bffba301670b-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "544"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1193,
            "mimeType": "application/javascript",
            "text": "!function(a){void 0===mejs.plugins&&(mejs.plugins={},mejs.plugins.silverlight=[],mejs.plugins.silverlight.push({types:[]})),mejs.HtmlMediaElementShim=mejs.HtmlMediaElementShim||{getTypeFromFile:mejs.Utils.getTypeFromFile},void 0===mejs.MediaFeatures&&(mejs.MediaFeatures=mejs.Features),void 0===mejs.Utility&&(mejs.Utility=mejs.Utils);var e=MediaElementPlayer.prototype.init;MediaElementPlayer.prototype.init=function(){this.options.classPrefix=\"mejs-\",this.$media=this.$node=a(this.node),e.call(this)};var t=MediaElementPlayer.prototype._meReady;MediaElementPlayer.prototype._meReady=function(){this.container=a(this.container),this.controls=a(this.controls),this.layers=a(this.layers),t.apply(this,arguments)},MediaElementPlayer.prototype.getElement=function(e){return void 0!==a&&e instanceof a?e[0]:e},MediaElementPlayer.prototype.buildfeatures=function(e,t,i,s){for(var r=[\"playpause\",\"current\",\"progress\",\"duration\",\"tracks\",\"volume\",\"fullscreen\"],l=0,n=this.options.features.length;l<n;l++){var o=this.options.features[l];if(this[\"build\"+o])try{-1===r.indexOf(o)?this[\"build\"+o](e,a(t),a(i),s):this[\"build\"+o](e,t,i,s)}catch(e){console.error(\"error building \"+o,e)}}}}((window,jQuery));"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.315Z",
        "time": 0.3599999981815927,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.3280000019003637,
          "receive": 0.03199999628122896,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 315
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2020/04/exactspace-white.png",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:53 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 16 Apr 2020 09:17:34 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"14a9-5a364e733bbcc\""
            },
            {
              "name": "Content-Length",
              "value": "5289"
            },
            {
              "name": "Content-Type",
              "value": "image/png"
            }
          ],
          "cookies": [],
          "content": {
            "size": 5289,
            "mimeType": "image/png",
            "text": "iVBORw0KGgoAAAANSUhEUgAAAQ4AAACSCAYAAAC0YiQpAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAFEtJREFUeNrsnc9vI0kVx8tOZnf5uV4tP4QA4eXGaR2thDgA0wFxQYh4DvwQIK39DzDJH4CSnDhwcPIX2HsACTjYAxLigGSPEBJCQvFw4Ab2SqxWsGLjXWl3mCTjpsr9Onld6equ6i47ycz3M8pMpru66/er9179aCEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAronLjUhzKn7++IsTZJyrinTeia5//tBDv/CcUr/z1JuYIAAiOpTIMKmLyoYp4obouziq3xK21tcX1+dlc5uREHM/PxEvvhWJzFKJqAYDgEOJX3xFi7WxdVMUHRDX8qJiL52XynyM15ERePxbzyrvy+kPxeP1MfPfXqF0AlsT6jUnpM4+q4rT6nKjMPyYFxKek0HhRCoxn6e6pmIdviXD+pphX3xIfP3lf6SGoXgCedsFxNl8Tz1Q+LMLqJ0UopOAIP/LqZ79Wf+N/bz/8w1vj/0hBIrWRylyshQ/F22cn8okTVG8BBs2G/LtG/xuL5mCGQgG5giMMw0D+E3h6/6hSqYxKv0V5LPrr61Kr+Ij8/QV54cN//OpPf/TlF7/w9YUV88affvW9v/zsdyKsvCCNr//KbL0rw508LY5SqrMhK/NNR2FRl3/vyp8mExrxvan8+zX5cwAhArI0joAakS9GHt5REY8eV8Sz62uiKtM8F9VYaCi2PvXFb8kgv5cah7xXWRPh44qI/DdwkuYLjW35dycjRCxUXpVh21J4jFBooHpjUrpWDUUlDOXwqnwX4cn87P341qP52cOFkFD3VBjMydoKjb0coaELkKF8poWCA3k+jtnCzi3O1Jc2Lp5dm4v54xNpjjySwuHs4B+/7X7/M1/5hrr5k7///JfqGt07EWviMbSNXKGha5aqrncWGmJzMKUwynS5q5muXXl9JsMMUIhPL5UUe3mPNSh3e3lZDL+5Jo7XnxeV6qdlKj8T2eKVW5RqJSjelv//lwjnb4gXK++K2/fOnpZKLOTjGDT75NOIhcbGucDIN2dU+E0ZfowuBFPlevO3+VxUb70n5vN/i0rldald/EtefXPxo35X19Q9Feafs8eo2lya7Pcdo9BYhBwcyL/b7MrYozYJnkBT5frw49+H4t63T8Xp2kxUzx7JK8cy+c9EetPZqTRM3hOn6w/F2umZaN0PE80cpJkpXDD08sWMDDNovix/e0f+vodChOC4QUbVb+Yi/NKp+MWLZ+KDz74vKu9Hptat50IxO30sfvBmKCp/hm9jaTrKYAeFAG6W4DgXIAvBEMo/80uC5YeZfgC1PkEtbgo0W33sZa1Jvh+iLqKZiUC7peKeyjSsUvWfaRpIY+X+imjtSIN+YqYiWnQ2XmK8cZx1zfQaZ5prfuOva/mesTTMPMeX1u7jdlc4vpU5R+V7+5pdvWnbYTXn36I45LN3LJ9tiWhmoJHTkdQswT7vwFpZqHt7BYSFiv9VraGmMaU0HOYJES1dNlyux0FTmnrni716sgG1PTbWkGkpFe2ebX0o8+nQS2fOWuCWZExx9qzzYy8s7lrEH6fhNaqTWYk8x+0uyGsbi/hszFXGKp2jbZF0qPVJC8jrfCpMX+tgbYvnGvLnSKjpw+xGKqgyVUFP5DOdshlVaab3TKjB1i0eU2G2KQ1dm7IpySH7vUVTr8sdaQdNl/pYlAWtNSkT7x7VQ8ui0zZENN08oc5eXmANmmrAO7KMP05Dp3Dek+UcWDwRUJ6PXPK8MlNFjngz2RnaTHOoUebyNIeuVuBt9S4LLaOjPReP6PeZqq4668s0EsSde5s0nM2CQqNBgk4XFiruByK5kjZWI7e0zqTS35TvUlrZ2KCdpL2Hq736KKZzQKNg7bycB02xlPUZ0ein10daeag83NY00135/O1FO3EZgSMVvZ/SeeI2MNY6z8ss3vqis0crZXse8zxj+R5rg4beDmuU9y0RTX3PLOIMKM9p7f4BG7jT2l1DRAv8dmzyvPJ1HClq9o6M48AQVl8/cCDD7lgIja6uoeSZRSnCZkQNzNpUIaExZO+Y0ch+YCHsYnW6pTU0k/AwmXL2dRY1tKF2db/0rAlX7SMBPNQ6bvb0b9Tpd0nr4MLPtgPVKM6GJij3M5+PTJqOblIn0m9jqkRCQ2+D+1ZC6GJhXuCU90hb4G3PLs70+HIF5pUsACMTgo+QG7pdTx3piBWEcmJuWHTcI3apR4JpZpkuvcHNWPyZgoOenfD0qlHS1elJQqCvNYCNrDyU2uSWPjKOnEd4s+DgZbhDa0KEg2DjZTGQz9+xeE5f3HbHaY9NsuPPEmWTJzguC+Me5XvmWIb6oGnOeyQoJ9qg56qh8fhyF/jl+TiCsBxBhr9jxtSmfkqYvjZytx19IcqB2rYVGrE5RSPMmKXNlr4mNDaLzJSQZrRJeZ6Rs3R5u1KjkWVTJGdaArKxffg9amwUO3BM20gzGZvUwPM6QFJjcN2YF5VJ27kNXJhHF0JDOZ2LCODkorup5pPKMufVTMmmc5zJ+GoiZw/TlawcJdV7n9u2pOlwrYermft56jqptXUXB2qG8HB6Vqa3yVS92LyYlSyfTdI0DpZeIdHI8lKK36QvO0PHQwyDwr6CKG07ms+jlmPiCKbhjAvG2yOzyoXdxKhfdqbqQqhvGIVfpOFwQXmnZHyj88EjY+C4siXn1CF4YezSTEhDq/yRZee5qwmamUfBZtNguM9m5qF8xitd26FGKDVSXc739mJmwNRZ83EWxIbRkDv2WoaQrYSJ56rhZGvGNtrGtvasj3oZ5WgPr2oaTtk2s2N4t5PgiEe+oj950v6OVjF9TdWb2UhQMonOG4zscD0PVWb1DvLFNDzHfXVEjtE006Wo8Bh4WtTEBdqWIcyWIXxxYWqvdTQ9d2BbWp7zPGb91qhx5G6rX+aqSjZFGwuLui7xLUfvQHPs+UjbVKZtLPLXHDQTneRJQI1yg+YG1Ys+XedqP9/zlKqRob6X2g4o/S2LcFtLyHOelhNog2xrMaVenlkijhQz6cqXnMsOOpAd9EBT8xZSW92zfM3L7Pf7HpNnIzh43A/Ek4IaMZWQiBxvzYTwUDa3Wxn6Ss/0fHDRl8knFy9NPY74tulveM+zW5y6f8dnHKNr4+PQOMxRTfPQF7z44nWLMPUlxX0dhMeMpgB7iYbksqLRr8o+NdT58tqAffrrS8qzbbtfaRzXZZNb13BtU4DrIEDabHOYENHMxirteJCPEu6vLeG902spOGh1aJrNqtaQbBeYjqxdYXbqT3DDVJoHX5CnZrFWvc2+dgPaQLQCdfVCdbbKg6SrVyw09KnXsWYfdihMHtyvcdtjEm3eNTb4O540rWOqmSyBZScKPHXGWsKm1ztJ8v+NEtPHRdM/NvgelsnoCuK8Fj4OvuItnnrVp2i7jpXmxa1MK1FtGs0D33FfY+4XaKhbvkSXob6X2g4c0j9eQp5d4gyeCsFB285541MLp+IDbbgK3LDY6j5iwqaesdS9aEPNHJO4qUKb5a43ai9GtJ/DXR1eXjnmwRcjmaY77xnCr6Id8LhbtGFu2Vpgcie0j09XqCX7g2Y3L/3VKxIaqmPz6dcBXzhFv/MOuZ0lDGitBw/fKZk+66ktipur8Ls+ztJYynkcF+dDRFOsefs+LtMoIETqBeLR093URtSeIWTSlCq71yZKd92yE6v2N/XVBjUTLQs+I7lbun1c7NCeZJlp1SsQGjXN/DAtSdaX++YdbrPPwistpVsimR3h5ujkcdc9Ca6h/HdIK1N9+ilEoqG5HVizZbCv89gtfDBO9ByvywOj4zG6fpAwc8vF69oRdxKaSlkNIErDZLFfyCRAov0lUyaky7S95K7sDGfrVWgcXa1T3klbHUrX7iRGrgx/B5k4fO1Hi2+cc+i0XWG3UlCPe0eLu9ApXiQo4q39SuJPPGsfPJ016lw1i0asz365rI6Mjitw7cQXQiN5xkS+EJ9q+SsSLz/bwlYwDzStp1tY27rYnh/vgRlmhOYD77azwFL1r8yTpEbZvjamCu0i5erjQdaSdrrHR5Bmlg+Bpm51s6FvM2rTBrshExou+xRi8+ogYedGWkPgUD6qgRzpFeh1W3202nJfMz+yO/XlT0WOHHa79lgnPrJePBY1fv1slPwzJqL73MEe569lGe+eJjR6juXbFtrM4MKfZOvziDpxR1w+EKqdEedIq9Mu+SlqDgKqlRC+OVO7eQf5lOX8QOK0g3mExfZzw+E6G1k7Rw1aQ49GyVEcJ6UpIBW8qZlPm3TN6bBiQ/nFB9AmTlRnJ6/H8euNq22zac7Dl9z0MooPr7mdkq78r7jph/tGo1lLe0cUF2+gkfBSebnrHKed1jAln8BIW64eGOqgR4vf3A4rjjpsN6V8B1S+Yy3+utYOaoXy7l7OW+LybIzVwdWrFBxDLZEbFmdsnGsDInmyV27noNF7V7gvBhpThx0XPeWcNCtXP0lqGizjKyI4TI07C7tGnNbR0k8as2EkokOApgWdfbaH9l42eeIjFIuech5pL3dF8QVpA8p70ZO8hGPd7thqkisxVagD8srbse0UZAboh7kEef4LMls2HFTNKXXWDZe0GeIeUNzc3rbuJD7SYKFSx/tQuGM3L20bJQ/GietjZlsfdJrVtGCcUzpjpO1QDyp9L3n5Wl30Dpc88zRsLuqn2EleLzmaWD2qW+tnKgbnXN1T8xzT1vkgxXdRRAAVeg+ZBLEaeltrnGoj2yCto2plUfijSaQxqbR/TlxeOHWf0jEq8f7EKefOQifSPlopquv43MxyO7Mze4SO4gvExanml+pjKR9lilT0JtVDPaUO0s8O4dOSZZZ1R+8JUuJXccYnn4+8fZQpKue0dh/nuXB8FQGA/w5a7gNG4NpTRREAACA4AAAQHAAACA4AAAQHAACCAwAAIDgAAAAAAAAAAAAAQBGWcuSffdxBkTNP1Z4cfdOgOueVzjKprSjtTTrxrO/11DNzOdWW8N56kcOjLN/dyjvbReWJyq+DnnizhIZqOJMrjH+Pji8o0pFC7dpxGNFYUdqPSVg1VyA4Qk8HWueWo8d3D/OEEh1GpThedn2to7t7RY32i1PWl/mx7hWhtoPXlr69/wKlAdx7AsrtyqAzZFS9zZYdFwSHX9ShLVP616oDsK37udv22Sg59nqcYHojnOaYY428tFB6Cx9HoI+mJFymNmkrcXRDHE9mGfMy8CXs2Dud6pfa0ELIZwl6lrdZTjhv9QbsbNBjUrVDk7odq7Nkjyr1c0L/HptOZlenmdH9Ix6W3nGudnNThcJ1DO/rsHA6Q5PZQ6ZYNw5HPyFdq2vh4vQeZ/lKWHlwAs33MdHyful99Nw2C9uwMVXifJKaz+MJ0/xFVOYdrQyO6T0JUyXLdNTvsXYTx73Hwl0qH1ZuLdaGamkmDcvbhLW5iV5GLvUG/AmOo7ij5nTauMKPeMOkSj8yOCmPdZucGtRRhuCIBVktpeEfa3Gn+Tj0hl3nAkt7X5fHRf/vs/t7FuUXpuSxpeedOQCPtHSEaZ3BUnBc6kjU2dLK/Yh+6oY0FRUcEzruMo67leXjYO1oqJWDHi7Ox7ZhMOJ5dq434MEpFjcmU6fVwu4ZtJajlLANQ7x9k+DQG6PWYCYWzlH9Xf24URnS0tQab8exDMMUAXFsmiWivO1pz3dc42IjepASrsvfyYRMzaCJTEoIjpCXYZ5zlLWNZk64YYYmq6fBut6w5NwP6nODvdgmpJPJlY2adRBwL+XaVCSPFlTvHWTYo3nfGHmN/C26H+awgO3dzIqPzlmNUSd5b5f8HGaTlWUah+LyZx7vF4xravBTvJ5SH4cZ3wE6LJFfVX7dArNYoxzfhxKID5h5c/4joqMDA6Y9WdcbnKPltQ1V6K1YY9Bu7xoEhLB0PNWzOgN50bOeVwfXqm/LNFXHpvTVhOu3Qi6cgFYzLOqgaBnX56gjqHNMi3wbpi7MH5cWdE/3IxV1GE89pqko6kBlpdEpc8f6RP2cco3LZ0uYP4Q9ojbhVG/QOMqjOqPyZieQ114Qfj6A/XyOJpDXqHpM64g1o0IdzMVRJuNQp9JvUOMdFsx7reC9ZbKUNKk6oc9aqJPn73pexKW+lriZ8TN2rTcIjvKkqv4pnbYI93LMHZtvouyTOtoitfWwQKMeWZheqRoRdYRGAQE6oOfqhvtbwuFLe54YZIzcIuXeVJi/GPB8mqZDJp/qvNtlE8vqLTD5pdL8Kjb1BsFRzkxpWdjhZVZC9iiermH037VoPFNSR7vkL5kWTIvKSyfNBo8/n2nQSGZFzAhqvCrdnbT4SNM7XHGVKyHcMkzTxmnSzYB6ysxM/DkKkxk6E/4WccX1VktJbzdDS8qsNwiOJWgbKY2/kNbBPrwd7+NokmNL2b8Tke8c5Y1HlOloZHMrQTakKeLYyaY6tpoJukff0KnxdQ3UOMcFV6DeoY6n531I9vdolZVNeWiTD6DLyqBLadpJEdoL3wVb59GisIN4wKHrxzSr1szyjRWstyn5TloU13ZKGnzWG8iy96mQ6znhAj4lmrURynSP4tpmC446bOp3j/0eGEbDDp/mtYk3411BvIBMT4sWpsvu1yzKM7UsU/LeNUyd7tlqdjZlllMGda0Mtimdpvrj5dE3vLNF94b6FDq7H1i0lZahfPj7TWXoXG/gyRZwxyWnRgEAT5sf5ip37AIAbqbgmGDpMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwNPD/wUYALrfcUASNyq6AAAAAElFTkSuQmCC",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.332Z",
        "time": 0.195999993593432,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.17300000035902485,
          "receive": 0.022999993234407157,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 363
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2019/10/home-hero-image-2-1.jpg",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 30 Oct 2019 05:02:44 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"e70b-59619a4a24500\""
            },
            {
              "name": "Content-Length",
              "value": "59147"
            },
            {
              "name": "Content-Type",
              "value": "image/jpeg"
            }
          ],
          "cookies": [],
          "content": {
            "size": 59147,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.334Z",
        "time": 0.7439999972120859,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.67299999500392,
          "receive": 0.07100000220816582,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 430
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2019/10/home-hero-image-3-1.jpg",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 30 Oct 2019 05:02:48 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"108ce-59619a4df4e00\""
            },
            {
              "name": "Content-Length",
              "value": "67790"
            },
            {
              "name": "Content-Type",
              "value": "image/jpeg"
            }
          ],
          "cookies": [],
          "content": {
            "size": 67790,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.334Z",
        "time": 0.7750000004307367,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.25099999766098335,
          "receive": 0.5240000027697533,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 478
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2019/10/home-hero-image-4-2.jpg",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 30 Oct 2019 05:02:52 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"1226c-59619a51c5700\""
            },
            {
              "name": "Content-Length",
              "value": "74348"
            },
            {
              "name": "Content-Type",
              "value": "image/jpeg"
            }
          ],
          "cookies": [],
          "content": {
            "size": 74348,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.336Z",
        "time": 0.5390000005718321,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.4380000027595088,
          "receive": 0.10099999781232327,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 671
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2019/04/zero-unplanned-asset-downtime.png",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 08:07:47 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"245c-58742326abac0\""
            },
            {
              "name": "Content-Length",
              "value": "9308"
            },
            {
              "name": "Content-Type",
              "value": "image/png"
            }
          ],
          "cookies": [],
          "content": {
            "size": 9308,
            "mimeType": "image/png",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.337Z",
        "time": 0.2480000039213337,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.22300000273389742,
          "receive": 0.025000001187436283,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 685
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2019/04/lower-emissions.png",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 08:07:53 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"315f-5874232c64840\""
            },
            {
              "name": "Content-Length",
              "value": "12639"
            },
            {
              "name": "Content-Type",
              "value": "image/png"
            }
          ],
          "cookies": [],
          "content": {
            "size": 12639,
            "mimeType": "image/png",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.337Z",
        "time": 0.46299999667098746,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.2319999985047616,
          "receive": 0.23099999816622585,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 699
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2019/04/quality.png",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 08:07:55 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"35ca-5874232e4ccc0\""
            },
            {
              "name": "Content-Length",
              "value": "13770"
            },
            {
              "name": "Content-Type",
              "value": "image/png"
            }
          ],
          "cookies": [],
          "content": {
            "size": 13770,
            "mimeType": "image/png",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.339Z",
        "time": 0.1680000059423037,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.14600000577047467,
          "receive": 0.022000000171829015,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 713
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2019/04/higher-process-efficiency.png",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 08:07:51 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"360d-5874232a7c3c0\""
            },
            {
              "name": "Content-Length",
              "value": "13837"
            },
            {
              "name": "Content-Type",
              "value": "image/png"
            }
          ],
          "cookies": [],
          "content": {
            "size": 13837,
            "mimeType": "image/png",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.340Z",
        "time": 0.9540000028209761,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.9009999994304962,
          "receive": 0.05300000339047983,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 727
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2019/04/fuel-and-water-reduction.png",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 08:07:50 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"1e46-5874232988180\""
            },
            {
              "name": "Content-Length",
              "value": "7750"
            },
            {
              "name": "Content-Type",
              "value": "image/png"
            }
          ],
          "cookies": [],
          "content": {
            "size": 7750,
            "mimeType": "image/png",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.341Z",
        "time": 0.5680000031134114,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.5190000010770746,
          "receive": 0.04900000203633681,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 758
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2020/03/ventilator-349658_1920-e1583147951414-1024x527.jpg",
          "httpVersion": "HTTP/1.1",
          "headers": [],
          "queryString": [],
          "cookies": [],
          "headersSize": 93,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "19394"
            },
            {
              "name": "Content-Type",
              "value": "image/jpeg"
            },
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 12:01:16 GMT"
            },
            {
              "name": "ETag",
              "value": "\"4bc2-59fdd5b3f09c0\""
            },
            {
              "name": "Last-Modified",
              "value": "Mon, 02 Mar 2020 11:19:11 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            }
          ],
          "cookies": [],
          "content": {
            "size": 19394,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 232,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.342Z",
        "time": 20.75400000467198,
        "timings": {
          "blocked": 1.2160000050393864,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 16.27500000093598,
          "receive": 3.262999998696614,
          "_blocked_queueing": 1.1110000050393865
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 775
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2020/03/drill-3702674_1920-1-e1583149317365-1024x527.jpg",
          "httpVersion": "HTTP/1.1",
          "headers": [],
          "queryString": [],
          "cookies": [],
          "headersSize": 91,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "34641"
            },
            {
              "name": "Content-Type",
              "value": "image/jpeg"
            },
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 12:01:16 GMT"
            },
            {
              "name": "ETag",
              "value": "\"8751-59fddacb9cd80\""
            },
            {
              "name": "Last-Modified",
              "value": "Mon, 02 Mar 2020 11:41:58 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            }
          ],
          "cookies": [],
          "content": {
            "size": 34641,
            "mimeType": "image/jpeg",
            "text": "
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 232,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.342Z",
        "time": 21.602000000711996,
        "timings": {
          "blocked": 1.0830000013052485,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 16.251000002451708,
          "receive": 4.267999996955041,
          "_blocked_queueing": 1.0140000013052486
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 792
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2019/10/Service-and-Spare-Optimization-2-e1583151351969-1024x527.jpg",
          "httpVersion": "HTTP/1.1",
          "headers": [],
          "queryString": [],
          "cookies": [],
          "headersSize": 103,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "58664"
            },
            {
              "name": "Content-Type",
              "value": "image/jpeg"
            },
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 12:01:17 GMT"
            },
            {
              "name": "ETag",
              "value": "\"e528-59fde25f62e00\""
            },
            {
              "name": "Last-Modified",
              "value": "Mon, 02 Mar 2020 12:15:52 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            }
          ],
          "cookies": [],
          "content": {
            "size": 58664,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 232,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.343Z",
        "time": 676.4779999939492,
        "timings": {
          "blocked": 672.2729999963119,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 1.606999998512212,
          "receive": 2.5979999991250224,
          "_blocked_queueing": 672.164999996312
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 818
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2019/11/pulse-1-1024x529.jpg",
          "httpVersion": "HTTP/1.1",
          "headers": [],
          "queryString": [],
          "cookies": [],
          "headersSize": 63,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "6273"
            },
            {
              "name": "Content-Type",
              "value": "image/jpeg"
            },
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 12:01:17 GMT"
            },
            {
              "name": "ETag",
              "value": "\"1881-59850c6a41140\""
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 27 Nov 2019 09:39:41 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            }
          ],
          "cookies": [],
          "content": {
            "size": 6273,
            "mimeType": "image/jpeg",
            "text": "
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 231,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.343Z",
        "time": 679.7589999987395,
        "timings": {
          "blocked": 677.5779999947441,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 1.155999998966232,
          "receive": 1.025000005029142,
          "_blocked_queueing": 677.4689999947441
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 959
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/contact-form-7/includes/js/scripts.js?ver=5.1.1",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [
            {
              "name": "ver",
              "value": "5.1.1"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:53 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Tue, 30 Apr 2019 06:26:31 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"3868-587b97b4e93c0-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "3993"
            }
          ],
          "cookies": [],
          "content": {
            "size": 14440,
            "mimeType": "application/javascript",
            "text": "( function( $ ) {\n\n\t'use strict';\n\n\tif ( typeof wpcf7 === 'undefined' || wpcf7 === null ) {\n\t\treturn;\n\t}\n\n\twpcf7 = $.extend( {\n\t\tcached: 0,\n\t\tinputs: []\n\t}, wpcf7 );\n\n\t$( function() {\n\t\twpcf7.supportHtml5 = ( function() {\n\t\t\tvar features = {};\n\t\t\tvar input = document.createElement( 'input' );\n\n\t\t\tfeatures.placeholder = 'placeholder' in input;\n\n\t\t\tvar inputTypes = [ 'email', 'url', 'tel', 'number', 'range', 'date' ];\n\n\t\t\t$.each( inputTypes, function( index, value ) {\n\t\t\t\tinput.setAttribute( 'type', value );\n\t\t\t\tfeatures[ value ] = input.type !== 'text';\n\t\t\t} );\n\n\t\t\treturn features;\n\t\t} )();\n\n\t\t$( 'div.wpcf7 > form' ).each( function() {\n\t\t\tvar $form = $( this );\n\t\t\twpcf7.initForm( $form );\n\n\t\t\tif ( wpcf7.cached ) {\n\t\t\t\twpcf7.refill( $form );\n\t\t\t}\n\t\t} );\n\t} );\n\n\twpcf7.getId = function( form ) {\n\t\treturn parseInt( $( 'input[name=\"_wpcf7\"]', form ).val(), 10 );\n\t};\n\n\twpcf7.initForm = function( form ) {\n\t\tvar $form = $( form );\n\n\t\t$form.submit( function( event ) {\n\t\t\tif ( ! wpcf7.supportHtml5.placeholder ) {\n\t\t\t\t$( '[placeholder].placeheld', $form ).each( function( i, n ) {\n\t\t\t\t\t$( n ).val( '' ).removeClass( 'placeheld' );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif ( typeof window.FormData === 'function' ) {\n\t\t\t\twpcf7.submit( $form );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t} );\n\n\t\t$( '.wpcf7-submit', $form ).after( '<span class=\"ajax-loader\"></span>' );\n\n\t\twpcf7.toggleSubmit( $form );\n\n\t\t$form.on( 'click', '.wpcf7-acceptance', function() {\n\t\t\twpcf7.toggleSubmit( $form );\n\t\t} );\n\n\t\t// Exclusive Checkbox\n\t\t$( '.wpcf7-exclusive-checkbox', $form ).on( 'click', 'input:checkbox', function() {\n\t\t\tvar name = $( this ).attr( 'name' );\n\t\t\t$form.find( 'input:checkbox[name=\"' + name + '\"]' ).not( this ).prop( 'checked', false );\n\t\t} );\n\n\t\t// Free Text Option for Checkboxes and Radio Buttons\n\t\t$( '.wpcf7-list-item.has-free-text', $form ).each( function() {\n\t\t\tvar $freetext = $( ':input.wpcf7-free-text', this );\n\t\t\tvar $wrap = $( this ).closest( '.wpcf7-form-control' );\n\n\t\t\tif ( $( ':checkbox, :radio', this ).is( ':checked' ) ) {\n\t\t\t\t$freetext.prop( 'disabled', false );\n\t\t\t} else {\n\t\t\t\t$freetext.prop( 'disabled', true );\n\t\t\t}\n\n\t\t\t$wrap.on( 'change', ':checkbox, :radio', function() {\n\t\t\t\tvar $cb = $( '.has-free-text', $wrap ).find( ':checkbox, :radio' );\n\n\t\t\t\tif ( $cb.is( ':checked' ) ) {\n\t\t\t\t\t$freetext.prop( 'disabled', false ).focus();\n\t\t\t\t} else {\n\t\t\t\t\t$freetext.prop( 'disabled', true );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Placeholder Fallback\n\t\tif ( ! wpcf7.supportHtml5.placeholder ) {\n\t\t\t$( '[placeholder]', $form ).each( function() {\n\t\t\t\t$( this ).val( $( this ).attr( 'placeholder' ) );\n\t\t\t\t$( this ).addClass( 'placeheld' );\n\n\t\t\t\t$( this ).focus( function() {\n\t\t\t\t\tif ( $( this ).hasClass( 'placeheld' ) ) {\n\t\t\t\t\t\t$( this ).val( '' ).removeClass( 'placeheld' );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\t$( this ).blur( function() {\n\t\t\t\t\tif ( '' === $( this ).val() ) {\n\t\t\t\t\t\t$( this ).val( $( this ).attr( 'placeholder' ) );\n\t\t\t\t\t\t$( this ).addClass( 'placeheld' );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\n\t\tif ( wpcf7.jqueryUi && ! wpcf7.supportHtml5.date ) {\n\t\t\t$form.find( 'input.wpcf7-date[type=\"date\"]' ).each( function() {\n\t\t\t\t$( this ).datepicker( {\n\t\t\t\t\tdateFormat: 'yy-mm-dd',\n\t\t\t\t\tminDate: new Date( $( this ).attr( 'min' ) ),\n\t\t\t\t\tmaxDate: new Date( $( this ).attr( 'max' ) )\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\n\t\tif ( wpcf7.jqueryUi && ! wpcf7.supportHtml5.number ) {\n\t\t\t$form.find( 'input.wpcf7-number[type=\"number\"]' ).each( function() {\n\t\t\t\t$( this ).spinner( {\n\t\t\t\t\tmin: $( this ).attr( 'min' ),\n\t\t\t\t\tmax: $( this ).attr( 'max' ),\n\t\t\t\t\tstep: $( this ).attr( 'step' )\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\n\t\t// Character Count\n\t\t$( '.wpcf7-character-count', $form ).each( function() {\n\t\t\tvar $count = $( this );\n\t\t\tvar name = $count.attr( 'data-target-name' );\n\t\t\tvar down = $count.hasClass( 'down' );\n\t\t\tvar starting = parseInt( $count.attr( 'data-starting-value' ), 10 );\n\t\t\tvar maximum = parseInt( $count.attr( 'data-maximum-value' ), 10 );\n\t\t\tvar minimum = parseInt( $count.attr( 'data-minimum-value' ), 10 );\n\n\t\t\tvar updateCount = function( target ) {\n\t\t\t\tvar $target = $( target );\n\t\t\t\tvar length = $target.val().length;\n\t\t\t\tvar count = down ? starting - length : length;\n\t\t\t\t$count.attr( 'data-current-value', count );\n\t\t\t\t$count.text( count );\n\n\t\t\t\tif ( maximum && maximum < length ) {\n\t\t\t\t\t$count.addClass( 'too-long' );\n\t\t\t\t} else {\n\t\t\t\t\t$count.removeClass( 'too-long' );\n\t\t\t\t}\n\n\t\t\t\tif ( minimum && length < minimum ) {\n\t\t\t\t\t$count.addClass( 'too-short' );\n\t\t\t\t} else {\n\t\t\t\t\t$count.removeClass( 'too-short' );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$( ':input[name=\"' + name + '\"]', $form ).each( function() {\n\t\t\t\tupdateCount( this );\n\n\t\t\t\t$( this ).keyup( function() {\n\t\t\t\t\tupdateCount( this );\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\n\t\t// URL Input Correction\n\t\t$form.on( 'change', '.wpcf7-validates-as-url', function() {\n\t\t\tvar val = $.trim( $( this ).val() );\n\n\t\t\tif ( val\n\t\t\t&& ! val.match( /^[a-z][a-z0-9.+-]*:/i )\n\t\t\t&& -1 !== val.indexOf( '.' ) ) {\n\t\t\t\tval = val.replace( /^\\/+/, '' );\n\t\t\t\tval = 'http://' + val;\n\t\t\t}\n\n\t\t\t$( this ).val( val );\n\t\t} );\n\t};\n\n\twpcf7.submit = function( form ) {\n\t\tif ( typeof window.FormData !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $form = $( form );\n\n\t\t$( '.ajax-loader', $form ).addClass( 'is-active' );\n\n\t\twpcf7.clearResponse( $form );\n\n\t\tvar formData = new FormData( $form.get( 0 ) );\n\n\t\tvar detail = {\n\t\t\tid: $form.closest( 'div.wpcf7' ).attr( 'id' ),\n\t\t\tstatus: 'init',\n\t\t\tinputs: [],\n\t\t\tformData: formData\n\t\t};\n\n\t\t$.each( $form.serializeArray(), function( i, field ) {\n\t\t\tif ( '_wpcf7' == field.name ) {\n\t\t\t\tdetail.contactFormId = field.value;\n\t\t\t} else if ( '_wpcf7_version' == field.name ) {\n\t\t\t\tdetail.pluginVersion = field.value;\n\t\t\t} else if ( '_wpcf7_locale' == field.name ) {\n\t\t\t\tdetail.contactFormLocale = field.value;\n\t\t\t} else if ( '_wpcf7_unit_tag' == field.name ) {\n\t\t\t\tdetail.unitTag = field.value;\n\t\t\t} else if ( '_wpcf7_container_post' == field.name ) {\n\t\t\t\tdetail.containerPostId = field.value;\n\t\t\t} else if ( field.name.match( /^_wpcf7_\\w+_free_text_/ ) ) {\n\t\t\t\tvar owner = field.name.replace( /^_wpcf7_\\w+_free_text_/, '' );\n\t\t\t\tdetail.inputs.push( {\n\t\t\t\t\tname: owner + '-free-text',\n\t\t\t\t\tvalue: field.value\n\t\t\t\t} );\n\t\t\t} else if ( field.name.match( /^_/ ) ) {\n\t\t\t\t// do nothing\n\t\t\t} else {\n\t\t\t\tdetail.inputs.push( field );\n\t\t\t}\n\t\t} );\n\n\t\twpcf7.triggerEvent( $form.closest( 'div.wpcf7' ), 'beforesubmit', detail );\n\n\t\tvar ajaxSuccess = function( data, status, xhr, $form ) {\n\t\t\tdetail.id = $( data.into ).attr( 'id' );\n\t\t\tdetail.status = data.status;\n\t\t\tdetail.apiResponse = data;\n\n\t\t\tvar $message = $( '.wpcf7-response-output', $form );\n\n\t\t\tswitch ( data.status ) {\n\t\t\t\tcase 'validation_failed':\n\t\t\t\t\t$.each( data.invalidFields, function( i, n ) {\n\t\t\t\t\t\t$( n.into, $form ).each( function() {\n\t\t\t\t\t\t\twpcf7.notValidTip( this, n.message );\n\t\t\t\t\t\t\t$( '.wpcf7-form-control', this ).addClass( 'wpcf7-not-valid' );\n\t\t\t\t\t\t\t$( '[aria-invalid]', this ).attr( 'aria-invalid', 'true' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t\t$message.addClass( 'wpcf7-validation-errors' );\n\t\t\t\t\t$form.addClass( 'invalid' );\n\n\t\t\t\t\twpcf7.triggerEvent( data.into, 'invalid', detail );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'acceptance_missing':\n\t\t\t\t\t$message.addClass( 'wpcf7-acceptance-missing' );\n\t\t\t\t\t$form.addClass( 'unaccepted' );\n\n\t\t\t\t\twpcf7.triggerEvent( data.into, 'unaccepted', detail );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'spam':\n\t\t\t\t\t$message.addClass( 'wpcf7-spam-blocked' );\n\t\t\t\t\t$form.addClass( 'spam' );\n\n\t\t\t\t\twpcf7.triggerEvent( data.into, 'spam', detail );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'aborted':\n\t\t\t\t\t$message.addClass( 'wpcf7-aborted' );\n\t\t\t\t\t$form.addClass( 'aborted' );\n\n\t\t\t\t\twpcf7.triggerEvent( data.into, 'aborted', detail );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'mail_sent':\n\t\t\t\t\t$message.addClass( 'wpcf7-mail-sent-ok' );\n\t\t\t\t\t$form.addClass( 'sent' );\n\n\t\t\t\t\twpcf7.triggerEvent( data.into, 'mailsent', detail );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'mail_failed':\n\t\t\t\t\t$message.addClass( 'wpcf7-mail-sent-ng' );\n\t\t\t\t\t$form.addClass( 'failed' );\n\n\t\t\t\t\twpcf7.triggerEvent( data.into, 'mailfailed', detail );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvar customStatusClass = 'custom-'\n\t\t\t\t\t\t+ data.status.replace( /[^0-9a-z]+/i, '-' );\n\t\t\t\t\t$message.addClass( 'wpcf7-' + customStatusClass );\n\t\t\t\t\t$form.addClass( customStatusClass );\n\t\t\t}\n\n\t\t\twpcf7.refill( $form, data );\n\n\t\t\twpcf7.triggerEvent( data.into, 'submit', detail );\n\n\t\t\tif ( 'mail_sent' == data.status ) {\n\t\t\t\t$form.each( function() {\n\t\t\t\t\tthis.reset();\n\t\t\t\t} );\n\n\t\t\t\twpcf7.toggleSubmit( $form );\n\t\t\t}\n\n\t\t\tif ( ! wpcf7.supportHtml5.placeholder ) {\n\t\t\t\t$form.find( '[placeholder].placeheld' ).each( function( i, n ) {\n\t\t\t\t\t$( n ).val( $( n ).attr( 'placeholder' ) );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t$message.html( '' ).append( data.message ).slideDown( 'fast' );\n\t\t\t$message.attr( 'role', 'alert' );\n\n\t\t\t$( '.screen-reader-response', $form.closest( '.wpcf7' ) ).each( function() {\n\t\t\t\tvar $response = $( this );\n\t\t\t\t$response.html( '' ).attr( 'role', '' ).append( data.message );\n\n\t\t\t\tif ( data.invalidFields ) {\n\t\t\t\t\tvar $invalids = $( '<ul></ul>' );\n\n\t\t\t\t\t$.each( data.invalidFields, function( i, n ) {\n\t\t\t\t\t\tif ( n.idref ) {\n\t\t\t\t\t\t\tvar $li = $( '<li></li>' ).append( $( '<a></a>' ).attr( 'href', '#' + n.idref ).append( n.message ) );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $li = $( '<li></li>' ).append( n.message );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$invalids.append( $li );\n\t\t\t\t\t} );\n\n\t\t\t\t\t$response.append( $invalids );\n\t\t\t\t}\n\n\t\t\t\t$response.attr( 'role', 'alert' ).focus();\n\t\t\t} );\n\t\t};\n\n\t\t$.ajax( {\n\t\t\ttype: 'POST',\n\t\t\turl: wpcf7.apiSettings.getRoute(\n\t\t\t\t'/contact-forms/' + wpcf7.getId( $form ) + '/feedback' ),\n\t\t\tdata: formData,\n\t\t\tdataType: 'json',\n\t\t\tprocessData: false,\n\t\t\tcontentType: false\n\t\t} ).done( function( data, status, xhr ) {\n\t\t\tajaxSuccess( data, status, xhr, $form );\n\t\t\t$( '.ajax-loader', $form ).removeClass( 'is-active' );\n\t\t} ).fail( function( xhr, status, error ) {\n\t\t\tvar $e = $( '<div class=\"ajax-error\"></div>' ).text( error.message );\n\t\t\t$form.after( $e );\n\t\t} );\n\t};\n\n\twpcf7.triggerEvent = function( target, name, detail ) {\n\t\tvar $target = $( target );\n\n\t\t/* DOM event */\n\t\tvar event = new CustomEvent( 'wpcf7' + name, {\n\t\t\tbubbles: true,\n\t\t\tdetail: detail\n\t\t} );\n\n\t\t$target.get( 0 ).dispatchEvent( event );\n\n\t\t/* jQuery event */\n\t\t$target.trigger( 'wpcf7:' + name, detail );\n\t\t$target.trigger( name + '.wpcf7', detail ); // deprecated\n\t};\n\n\twpcf7.toggleSubmit = function( form, state ) {\n\t\tvar $form = $( form );\n\t\tvar $submit = $( 'input:submit', $form );\n\n\t\tif ( typeof state !== 'undefined' ) {\n\t\t\t$submit.prop( 'disabled', ! state );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( $form.hasClass( 'wpcf7-acceptance-as-validation' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$submit.prop( 'disabled', false );\n\n\t\t$( '.wpcf7-acceptance', $form ).each( function() {\n\t\t\tvar $span = $( this );\n\t\t\tvar $input = $( 'input:checkbox', $span );\n\n\t\t\tif ( ! $span.hasClass( 'optional' ) ) {\n\t\t\t\tif ( $span.hasClass( 'invert' ) && $input.is( ':checked' )\n\t\t\t\t|| ! $span.hasClass( 'invert' ) && ! $input.is( ':checked' ) ) {\n\t\t\t\t\t$submit.prop( 'disabled', true );\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t};\n\n\twpcf7.notValidTip = function( target, message ) {\n\t\tvar $target = $( target );\n\t\t$( '.wpcf7-not-valid-tip', $target ).remove();\n\t\t$( '<span role=\"alert\" class=\"wpcf7-not-valid-tip\"></span>' )\n\t\t\t.text( message ).appendTo( $target );\n\n\t\tif ( $target.is( '.use-floating-validation-tip *' ) ) {\n\t\t\tvar fadeOut = function( target ) {\n\t\t\t\t$( target ).not( ':hidden' ).animate( {\n\t\t\t\t\topacity: 0\n\t\t\t\t}, 'fast', function() {\n\t\t\t\t\t$( this ).css( { 'z-index': -100 } );\n\t\t\t\t} );\n\t\t\t};\n\n\t\t\t$target.on( 'mouseover', '.wpcf7-not-valid-tip', function() {\n\t\t\t\tfadeOut( this );\n\t\t\t} );\n\n\t\t\t$target.on( 'focus', ':input', function() {\n\t\t\t\tfadeOut( $( '.wpcf7-not-valid-tip', $target ) );\n\t\t\t} );\n\t\t}\n\t};\n\n\twpcf7.refill = function( form, data ) {\n\t\tvar $form = $( form );\n\n\t\tvar refillCaptcha = function( $form, items ) {\n\t\t\t$.each( items, function( i, n ) {\n\t\t\t\t$form.find( ':input[name=\"' + i + '\"]' ).val( '' );\n\t\t\t\t$form.find( 'img.wpcf7-captcha-' + i ).attr( 'src', n );\n\t\t\t\tvar match = /([0-9]+)\\.(png|gif|jpeg)$/.exec( n );\n\t\t\t\t$form.find( 'input:hidden[name=\"_wpcf7_captcha_challenge_' + i + '\"]' ).attr( 'value', match[ 1 ] );\n\t\t\t} );\n\t\t};\n\n\t\tvar refillQuiz = function( $form, items ) {\n\t\t\t$.each( items, function( i, n ) {\n\t\t\t\t$form.find( ':input[name=\"' + i + '\"]' ).val( '' );\n\t\t\t\t$form.find( ':input[name=\"' + i + '\"]' ).siblings( 'span.wpcf7-quiz-label' ).text( n[ 0 ] );\n\t\t\t\t$form.find( 'input:hidden[name=\"_wpcf7_quiz_answer_' + i + '\"]' ).attr( 'value', n[ 1 ] );\n\t\t\t} );\n\t\t};\n\n\t\tif ( typeof data === 'undefined' ) {\n\t\t\t$.ajax( {\n\t\t\t\ttype: 'GET',\n\t\t\t\turl: wpcf7.apiSettings.getRoute(\n\t\t\t\t\t'/contact-forms/' + wpcf7.getId( $form ) + '/refill' ),\n\t\t\t\tbeforeSend: function( xhr ) {\n\t\t\t\t\tvar nonce = $form.find( ':input[name=\"_wpnonce\"]' ).val();\n\n\t\t\t\t\tif ( nonce ) {\n\t\t\t\t\t\txhr.setRequestHeader( 'X-WP-Nonce', nonce );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdataType: 'json'\n\t\t\t} ).done( function( data, status, xhr ) {\n\t\t\t\tif ( data.captcha ) {\n\t\t\t\t\trefillCaptcha( $form, data.captcha );\n\t\t\t\t}\n\n\t\t\t\tif ( data.quiz ) {\n\t\t\t\t\trefillQuiz( $form, data.quiz );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t} else {\n\t\t\tif ( data.captcha ) {\n\t\t\t\trefillCaptcha( $form, data.captcha );\n\t\t\t}\n\n\t\t\tif ( data.quiz ) {\n\t\t\t\trefillQuiz( $form, data.quiz );\n\t\t\t}\n\t\t}\n\t};\n\n\twpcf7.clearResponse = function( form ) {\n\t\tvar $form = $( form );\n\t\t$form.removeClass( 'invalid spam sent failed' );\n\t\t$form.siblings( '.screen-reader-response' ).html( '' ).attr( 'role', '' );\n\n\t\t$( '.wpcf7-not-valid-tip', $form ).remove();\n\t\t$( '[aria-invalid]', $form ).attr( 'aria-invalid', 'false' );\n\t\t$( '.wpcf7-form-control', $form ).removeClass( 'wpcf7-not-valid' );\n\n\t\t$( '.wpcf7-response-output', $form )\n\t\t\t.hide().empty().removeAttr( 'role' )\n\t\t\t.removeClass( 'wpcf7-mail-sent-ok wpcf7-mail-sent-ng wpcf7-validation-errors wpcf7-spam-blocked' );\n\t};\n\n\twpcf7.apiSettings.getRoute = function( path ) {\n\t\tvar url = wpcf7.apiSettings.root;\n\n\t\turl = url.replace(\n\t\t\twpcf7.apiSettings.namespace,\n\t\t\twpcf7.apiSettings.namespace + path );\n\n\t\treturn url;\n\t};\n\n} )( jQuery );\n\n/*\n * Polyfill for Internet Explorer\n * See https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n */\n( function () {\n\tif ( typeof window.CustomEvent === \"function\" ) return false;\n\n\tfunction CustomEvent ( event, params ) {\n\t\tparams = params || { bubbles: false, cancelable: false, detail: undefined };\n\t\tvar evt = document.createEvent( 'CustomEvent' );\n\t\tevt.initCustomEvent( event,\n\t\t\tparams.bubbles, params.cancelable, params.detail );\n\t\treturn evt;\n\t}\n\n\tCustomEvent.prototype = window.Event.prototype;\n\n\twindow.CustomEvent = CustomEvent;\n} )();\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.344Z",
        "time": 0.41900000360328704,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.3789999973378144,
          "receive": 0.04000000626547262,
          "_blocked_queueing": -1
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 960
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "connection": "88818",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/js/trx_addons.login.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Accept-Language",
              "value": "en-GB,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Host",
              "value": "exactspace.co"
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 573,
          "bodySize": 0
        },
        "response": {
          "status": 404,
          "statusText": "Not Found",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "580"
            },
            {
              "name": "Content-Type",
              "value": "text/html"
            },
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 14:53:33 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "text/html",
            "compression": 0,
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 164,
          "bodySize": 0,
          "_transferSize": 164,
          "_error": "net::ERR_ABORTED"
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.345Z",
        "time": 639.4550000040908,
        "timings": {
          "blocked": 74.34799999973411,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.20599999999999996,
          "wait": 88.41499999751291,
          "receive": 476.4860000068438,
          "_blocked_queueing": 73.05199999973411
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 961
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/api/js_composer/js_composer.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:53 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:09 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"267-5873f96f6cf40-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "330"
            }
          ],
          "cookies": [],
          "content": {
            "size": 615,
            "mimeType": "application/javascript",
            "text": "/* global jQuery:false */\n\n(function() {\n\t\"use strict\";\n\n\tjQuery(document).on('action.init_shortcodes', trx_addons_js_composer_init);\n\tjQuery(document).on('action.init_hidden_elements', trx_addons_js_composer_init);\n\t\n\tfunction trx_addons_js_composer_init(e, container) {\n\t\tif (arguments.length < 2) var container = jQuery('body');\n\t\tif (container===undefined || container.length === undefined || container.length == 0) return;\n\t\n\t\tcontainer.find('.vc_message_box_closeable:not(.inited)').addClass('inited').on('click', function(e) {\n\t\t\tjQuery(this).fadeOut();\n\t\t\te.preventDefault();\n\t\t\treturn false;\n\t\t});\n\t}\n})();"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.345Z",
        "time": 0.2010000025620684,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.15300000086426735,
          "receive": 0.048000001697801054,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 962
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/api/woocommerce/woocommerce.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:53 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:09 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"10a5-5873f96f6cf40-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "1248"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4261,
            "mimeType": "application/javascript",
            "text": "/* global jQuery:false */\n\njQuery(document).on('action.ready_trx_addons', function() {\n\t\"use strict\";\n\n\t// Add arrows to the WooCommerce categories on homepages\n\tjQuery('body:not(.woocommerce) .widget_area:not(.footer_wrap) .widget_product_categories ul.product-categories .has_children > a').append('<span class=\"open_child_menu\"></span>');\n\n\t// Open/Close submenu\n\tjQuery('body:not(.woocommerce) .widget_area:not(.footer_wrap) .widget_product_categories').on('click', 'ul.product-categories.plain li a .open_child_menu', function(e) {\n\t\tvar $a = jQuery(this).parent();\n\t\tif ($a.siblings('ul:visible').length > 0)\n\t\t\t$a.siblings('ul').slideUp().parent().removeClass('opened');\n\t\telse {\n\t\t\tjQuery(this).parents('li').siblings('li').find('ul:visible').slideUp().parent().removeClass('opened');\n\t\t\t$a.siblings('ul').slideDown().parent().addClass('opened');\n\t\t}\n\t\te.preventDefault();\n\t\treturn false;\n\t});\n\n\t// Resize handlers\n\tjQuery(document).on('action.resize_trx_addons', function() {\n\t\ttrx_addons_woocommerce_resize_actions();\n\t});\n\ttrx_addons_woocommerce_resize_actions();\n\n\t// Switch popup menu / hierarchical list on product categories list placed in sidebar\n\tfunction trx_addons_woocommerce_resize_actions() {\n\t\tvar cat_menu = jQuery('body:not(.woocommerce) .widget_area:not(.footer_wrap) .widget_product_categories ul.product-categories');\n\t\tvar sb = cat_menu.parents('.widget_area');\n\t\tif (sb.length > 0 && cat_menu.length > 0) {\n\t\t\tif (sb.width() == sb.parents('.content_wrap').width()) {\n\t\t\t\tif (cat_menu.hasClass('inited')) {\n\t\t\t\t\tcat_menu.removeClass('inited').addClass('plain').superfish('destroy');\n\t\t\t\t\tcat_menu.find('ul.animated').removeClass('animated').addClass('no_animated');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!cat_menu.hasClass('inited')) {\n\t\t\t\t\tcat_menu.removeClass('plain').addClass('inited');\n\t\t\t\t\tcat_menu.find('ul.no_animated').removeClass('no_animated').addClass('animated');\n\t\t\t\t\ttrx_addons_init_sfmenu('body:not(.woocommerce) .widget_area:not(.footer_wrap) .widget_product_categories ul.product-categories');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Check available product variations\n\tjQuery('.variations_form.cart:not(.inited)').each(function() {\n\t\tvar form = jQuery(this).addClass('inited');\n\t\tvar trx_addons_attribs = form.find('.trx_addons_attrib_item');\n\t\tif (trx_addons_attribs.length == 0) return;\n\t\t// Click on our variations attribs\n\t\ttrx_addons_attribs.on('click', function(e) {\n\t\t\tif (!jQuery(this).hasClass('trx_addons_attrib_disabled')) {\n\t\t\t\tjQuery(this).addClass('trx_addons_attrib_selected').siblings().removeClass('trx_addons_attrib_selected');\n\t\t\t\tvar term = jQuery(this).data('value');\n\t\t\t\tvar attrib = jQuery(this).parents('.trx_addons_attrib_extended').data('attrib');\n\t\t\t\tvar select_box = jQuery(this).parents('.trx_addons_attrib_extended').siblings('.select_container').find('#'+attrib).trigger('touchstart');\n\t\t\t\tselect_box.find('option:selected').removeAttr('selected');\n\t\t\t\tselect_box.find('option[value=\"'+term+'\"]').attr('selected', 'selected');\n\t\t\t\tselect_box.trigger('change');\n\t\t\t\ttrx_addons_woocommerce_check_variations(form);//, attrib\n\t\t\t}\n\t\t\te.preventDefault();\n\t\t\treturn false;\n\t\t});\n\t\t// Click on the default attrib\n\t\tvar busy = false;\n\t\tform.find( '.variations select' ).on('click', function(e) {\n\t\t\tif (!busy) {\n\t\t\t\tbusy = true;\n\t\t\t\ttrx_addons_woocommerce_check_variations(form);\n\t\t\t\tbusy = false;\n\t\t\t}\n\t\t});\n\t\ttrx_addons_woocommerce_check_variations(form);\n\t});\n\t\n\tfunction trx_addons_woocommerce_check_variations(form, exclude) {\n\t\tsetTimeout(function() {\n\t\t\tif (exclude == undefined) exclude = '';\n\t\t\t// Refresh selects\n\t\t\tform.find( '.variations select' ).each( function() {\n\t\t\t\tvar select_box = jQuery(this);\n\t\t\t\tvar attrib_box = select_box.parents('.select_container').siblings('.trx_addons_attrib_extended');\n\t\t\t\tif (select_box.attr('id') != exclude) select_box.trigger('touchstart');\n\t\t\t\tattrib_box.find('.trx_addons_attrib_item').removeClass('trx_addons_attrib_selected').addClass('trx_addons_attrib_disabled');\n\t\t\t\tselect_box.find('option').each(function() {\n\t\t\t\t\tattrib_box.find('.trx_addons_attrib_item[data-value=\"'+jQuery(this).val()+'\"]')\n\t\t\t\t\t\t\t\t.removeClass('trx_addons_attrib_disabled')\n\t\t\t\t\t\t\t\t.toggleClass('trx_addons_attrib_selected', jQuery(this).get(0).selected);\n\t\t\t\t});\n\t\t\t});\n\t\t}, 10);\n\t}\n});"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.345Z",
        "time": 0.16699999832781032,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.14399999781744555,
          "receive": 0.02300000051036477,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 963
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/shortcodes.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:53 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:09 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"581-5873f96f6cf40-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "608"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1409,
            "mimeType": "application/javascript",
            "text": "/**\n * Shortcodes common scripts\n *\n * @package WordPress\n * @subpackage ThemeREX Addons\n * @since v1.2\n */\n\n/* global jQuery:false */\n/* global TRX_ADDONS_STORAGE:false */\n\n\n(function() {\n\n\t\"use strict\";\n\t\n\t//jQuery(document).on('action.init_hidden_elements', trx_addons_sc_fullheight_init);\n\t//jQuery(document).on('action.init_shortcodes', trx_addons_sc_fullheight_init);\n\t//jQuery(document).on('action.resize_trx_addons', trx_addons_sc_fullheight_init);\n\t\n\t// Fullheight elements init\n\tfunction trx_addons_sc_fullheight_init(e, container) {\n\t\n\t\tif (arguments.length < 2) var container = jQuery('body');\n\t\tif (container===undefined || container.length === undefined || container.length == 0) return;\n\t\n\t\tcontainer.find('.trx_addons_stretch_height').each(function () {\n\t\t\tvar fullheight_item = jQuery(this);\n\t\t\t// If item now invisible\n\t\t\tif (jQuery(this).parents('div:hidden,article:hidden').length > 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar wh = 0;\n\t\t\tvar fullheight_row = jQuery(this).parents('.vc_row-o-full-height');\n\t\t\tif (fullheight_row.length > 0) {\n\t\t\t\twh = fullheight_row.css('height') != 'auto' ? fullheight_row.height() : 'auto';\n\t\t\t} else {\n\t\t\t\tif (screen.height > 1000) {\n\t\t\t\t\tvar adminbar = jQuery('#wpadminbar');\n\t\t\t\t\twh = jQuery(window).height() - (adminbar.length > 0 ? adminbar.height() : 0);\n\t\t\t\t} else\n\t\t\t\t\twh = 'auto';\n\t\t\t}\n\t\t\tif (wh == 'auto' || wh > 0) fullheight_item.height(wh);\n\t\t});\n\t}\n\n})();"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.346Z",
        "time": 0.16899999900488183,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.13300000136950985,
          "receive": 0.03599999763537198,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 964
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/js/swiper/swiper.jquery.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:53 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:09 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"32ccd-5873f96f6cf40-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "35224"
            }
          ],
          "cookies": [],
          "content": {
            "size": 208077,
            "mimeType": "application/javascript",
            "text": "/**\n * Swiper 3.4.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * \n * http://www.idangero.us/swiper/\n * \n * Copyright 2016, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n * \n * Licensed under MIT\n * \n * Released on: December 13, 2016\n */\n(function () {\n    'use strict';\n    var $;\n    /*===========================\n    Swiper\n    ===========================*/\n    var Swiper = function (container, params) {\n        if (!(this instanceof Swiper)) return new Swiper(container, params);\n\n        var defaults = {\n            direction: 'horizontal',\n            touchEventsTarget: 'container',\n            initialSlide: 0,\n            speed: 300,\n            // autoplay\n            autoplay: false,\n            autoplayDisableOnInteraction: true,\n            autoplayStopOnLast: false,\n            // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n            iOSEdgeSwipeDetection: false,\n            iOSEdgeSwipeThreshold: 20,\n            // Free mode\n            freeMode: false,\n            freeModeMomentum: true,\n            freeModeMomentumRatio: 1,\n            freeModeMomentumBounce: true,\n            freeModeMomentumBounceRatio: 1,\n            freeModeMomentumVelocityRatio: 1,\n            freeModeSticky: false,\n            freeModeMinimumVelocity: 0.02,\n            // Autoheight\n            autoHeight: false,\n            // Set wrapper width\n            setWrapperSize: false,\n            // Virtual Translate\n            virtualTranslate: false,\n            // Effects\n            effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n            coverflow: {\n                rotate: 50,\n                stretch: 0,\n                depth: 100,\n                modifier: 1,\n                slideShadows : true\n            },\n            flip: {\n                slideShadows : true,\n                limitRotation: true\n            },\n            cube: {\n                slideShadows: true,\n                shadow: true,\n                shadowOffset: 20,\n                shadowScale: 0.94\n            },\n            fade: {\n                crossFade: false\n            },\n            // Parallax\n            parallax: false,\n            // Zoom\n            zoom: false,\n            zoomMax: 3,\n            zoomMin: 1,\n            zoomToggle: true,\n            // Scrollbar\n            scrollbar: null,\n            scrollbarHide: true,\n            scrollbarDraggable: false,\n            scrollbarSnapOnRelease: false,\n            // Keyboard Mousewheel\n            keyboardControl: false,\n            mousewheelControl: false,\n            mousewheelReleaseOnEdges: false,\n            mousewheelInvert: false,\n            mousewheelForceToAxis: false,\n            mousewheelSensitivity: 1,\n            mousewheelEventsTarged: 'container',\n            // Hash Navigation\n            hashnav: false,\n            hashnavWatchState: false,\n            // History\n            history: false,\n            // Commong Nav State\n            replaceState: false,\n            // Breakpoints\n            breakpoints: undefined,\n            // Slides grid\n            spaceBetween: 0,\n            slidesPerView: 1,\n            slidesPerColumn: 1,\n            slidesPerColumnFill: 'column',\n            slidesPerGroup: 1,\n            centeredSlides: false,\n            slidesOffsetBefore: 0, // in px\n            slidesOffsetAfter: 0, // in px\n            // Round length\n            roundLengths: false,\n            // Touches\n            touchRatio: 1,\n            touchAngle: 45,\n            simulateTouch: true,\n            shortSwipes: true,\n            longSwipes: true,\n            longSwipesRatio: 0.5,\n            longSwipesMs: 300,\n            followFinger: true,\n            onlyExternal: false,\n            threshold: 0,\n            touchMoveStopPropagation: true,\n            touchReleaseOnEdges: false,\n            // Unique Navigation Elements\n            uniqueNavElements: true,\n            // Pagination\n            pagination: null,\n            paginationElement: 'span',\n            paginationClickable: false,\n            paginationHide: false,\n            paginationBulletRender: null,\n            paginationProgressRender: null,\n            paginationFractionRender: null,\n            paginationCustomRender: null,\n            paginationType: 'bullets', // 'bullets' or 'progress' or 'fraction' or 'custom'\n            // Resistance\n            resistance: true,\n            resistanceRatio: 0.85,\n            // Next/prev buttons\n            nextButton: null,\n            prevButton: null,\n            // Progress\n            watchSlidesProgress: false,\n            watchSlidesVisibility: false,\n            // Cursor\n            grabCursor: false,\n            // Clicks\n            preventClicks: true,\n            preventClicksPropagation: true,\n            slideToClickedSlide: false,\n            // Lazy Loading\n            lazyLoading: false,\n            lazyLoadingInPrevNext: false,\n            lazyLoadingInPrevNextAmount: 1,\n            lazyLoadingOnTransitionStart: false,\n            // Images\n            preloadImages: true,\n            updateOnImagesReady: true,\n            // loop\n            loop: false,\n            loopAdditionalSlides: 0,\n            loopedSlides: null,\n            // Control\n            control: undefined,\n            controlInverse: false,\n            controlBy: 'slide', //or 'container'\n            normalizeSlideIndex: true,\n            // Swiping/no swiping\n            allowSwipeToPrev: true,\n            allowSwipeToNext: true,\n            swipeHandler: null, //'.swipe-handler',\n            noSwiping: true,\n            noSwipingClass: 'swiper-no-swiping',\n            // Passive Listeners\n            passiveListeners: true,\n            // NS\n            containerModifierClass: 'swiper-container-', // NEW\n            slideClass: 'swiper-slide',\n            slideActiveClass: 'swiper-slide-active',\n            slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n            slideVisibleClass: 'swiper-slide-visible',\n            slideDuplicateClass: 'swiper-slide-duplicate',\n            slideNextClass: 'swiper-slide-next',\n            slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n            slidePrevClass: 'swiper-slide-prev',\n            slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n            wrapperClass: 'swiper-wrapper',\n            bulletClass: 'swiper-pagination-bullet',\n            bulletActiveClass: 'swiper-pagination-bullet-active',\n            buttonDisabledClass: 'swiper-button-disabled',\n            paginationCurrentClass: 'swiper-pagination-current',\n            paginationTotalClass: 'swiper-pagination-total',\n            paginationHiddenClass: 'swiper-pagination-hidden',\n            paginationProgressbarClass: 'swiper-pagination-progressbar',\n            paginationClickableClass: 'swiper-pagination-clickable', // NEW\n            paginationModifierClass: 'swiper-pagination-', // NEW\n            lazyLoadingClass: 'swiper-lazy',\n            lazyStatusLoadingClass: 'swiper-lazy-loading',\n            lazyStatusLoadedClass: 'swiper-lazy-loaded',\n            lazyPreloaderClass: 'swiper-lazy-preloader',\n            notificationClass: 'swiper-notification',\n            preloaderClass: 'preloader',\n            zoomContainerClass: 'swiper-zoom-container',\n        \n            // Observer\n            observer: false,\n            observeParents: false,\n            // Accessibility\n            a11y: false,\n            prevSlideMessage: 'Previous slide',\n            nextSlideMessage: 'Next slide',\n            firstSlideMessage: 'This is the first slide',\n            lastSlideMessage: 'This is the last slide',\n            paginationBulletMessage: 'Go to slide {{index}}',\n            // Callbacks\n            runCallbacksOnInit: true\n            /*\n            Callbacks:\n            onInit: function (swiper)\n            onDestroy: function (swiper)\n            onClick: function (swiper, e)\n            onTap: function (swiper, e)\n            onDoubleTap: function (swiper, e)\n            onSliderMove: function (swiper, e)\n            onSlideChangeStart: function (swiper)\n            onSlideChangeEnd: function (swiper)\n            onTransitionStart: function (swiper)\n            onTransitionEnd: function (swiper)\n            onImagesReady: function (swiper)\n            onProgress: function (swiper, progress)\n            onTouchStart: function (swiper, e)\n            onTouchMove: function (swiper, e)\n            onTouchMoveOpposite: function (swiper, e)\n            onTouchEnd: function (swiper, e)\n            onReachBeginning: function (swiper)\n            onReachEnd: function (swiper)\n            onSetTransition: function (swiper, duration)\n            onSetTranslate: function (swiper, translate)\n            onAutoplayStart: function (swiper)\n            onAutoplayStop: function (swiper),\n            onLazyImageLoad: function (swiper, slide, image)\n            onLazyImageReady: function (swiper, slide, image)\n            */\n        \n        };\n        var initialVirtualTranslate = params && params.virtualTranslate;\n        \n        params = params || {};\n        var originalParams = {};\n        for (var param in params) {\n            if (typeof params[param] === 'object' && params[param] !== null && !(params[param].nodeType || params[param] === window || params[param] === document || (typeof Dom7 !== 'undefined' && params[param] instanceof Dom7) || (typeof jQuery !== 'undefined' && params[param] instanceof jQuery))) {\n                originalParams[param] = {};\n                for (var deepParam in params[param]) {\n                    originalParams[param][deepParam] = params[param][deepParam];\n                }\n            }\n            else {\n                originalParams[param] = params[param];\n            }\n        }\n        for (var def in defaults) {\n            if (typeof params[def] === 'undefined') {\n                params[def] = defaults[def];\n            }\n            else if (typeof params[def] === 'object') {\n                for (var deepDef in defaults[def]) {\n                    if (typeof params[def][deepDef] === 'undefined') {\n                        params[def][deepDef] = defaults[def][deepDef];\n                    }\n                }\n            }\n        }\n        \n        // Swiper\n        var s = this;\n        \n        // Params\n        s.params = params;\n        s.originalParams = originalParams;\n        \n        // Classname\n        s.classNames = [];\n        /*=========================\n          Dom Library and plugins\n          ===========================*/\n        if (typeof $ !== 'undefined' && typeof Dom7 !== 'undefined'){\n            $ = Dom7;\n        }\n        if (typeof $ === 'undefined') {\n            if (typeof Dom7 === 'undefined') {\n                $ = window.Dom7 || window.Zepto || window.jQuery;\n            }\n            else {\n                $ = Dom7;\n            }\n            if (!$) return;\n        }\n        // Export it to Swiper instance\n        s.$ = $;\n        \n        /*=========================\n          Breakpoints\n          ===========================*/\n        s.currentBreakpoint = undefined;\n        s.getActiveBreakpoint = function () {\n            //Get breakpoint for window width\n            if (!s.params.breakpoints) return false;\n            var breakpoint = false;\n            var points = [], point;\n            for ( point in s.params.breakpoints ) {\n                if (s.params.breakpoints.hasOwnProperty(point)) {\n                    points.push(point);\n                }\n            }\n            points.sort(function (a, b) {\n                return parseInt(a, 10) > parseInt(b, 10);\n            });\n            for (var i = 0; i < points.length; i++) {\n                point = points[i];\n                if (point >= window.innerWidth && !breakpoint) {\n                    breakpoint = point;\n                }\n            }\n            return breakpoint || 'max';\n        };\n        s.setBreakpoint = function () {\n            //Set breakpoint for window width and update parameters\n            var breakpoint = s.getActiveBreakpoint();\n            if (breakpoint && s.currentBreakpoint !== breakpoint) {\n                var breakPointsParams = breakpoint in s.params.breakpoints ? s.params.breakpoints[breakpoint] : s.originalParams;\n                var needsReLoop = s.params.loop && (breakPointsParams.slidesPerView !== s.params.slidesPerView);\n                for ( var param in breakPointsParams ) {\n                    s.params[param] = breakPointsParams[param];\n                }\n                s.currentBreakpoint = breakpoint;\n                if(needsReLoop && s.destroyLoop) {\n                    s.reLoop(true);\n                }\n            }\n        };\n        // Set breakpoint on load\n        if (s.params.breakpoints) {\n            s.setBreakpoint();\n        }\n        \n        /*=========================\n          Preparation - Define Container, Wrapper and Pagination\n          ===========================*/\n        s.container = $(container);\n        if (s.container.length === 0) return;\n        if (s.container.length > 1) {\n            var swipers = [];\n            s.container.each(function () {\n                var container = this;\n                swipers.push(new Swiper(this, params));\n            });\n            return swipers;\n        }\n        \n        // Save instance in container HTML Element and in data\n        s.container[0].swiper = s;\n        s.container.data('swiper', s);\n        \n        s.classNames.push(s.params.containerModifierClass + s.params.direction);\n        \n        if (s.params.freeMode) {\n            s.classNames.push(s.params.containerModifierClass + 'free-mode');\n        }\n        if (!s.support.flexbox) {\n            s.classNames.push(s.params.containerModifierClass + 'no-flexbox');\n            s.params.slidesPerColumn = 1;\n        }\n        if (s.params.autoHeight) {\n            s.classNames.push(s.params.containerModifierClass + 'autoheight');\n        }\n        // Enable slides progress when required\n        if (s.params.parallax || s.params.watchSlidesVisibility) {\n            s.params.watchSlidesProgress = true;\n        }\n        // Max resistance when touchReleaseOnEdges\n        if (s.params.touchReleaseOnEdges) {\n            s.params.resistanceRatio = 0;\n        }\n        // Coverflow / 3D\n        if (['cube', 'coverflow', 'flip'].indexOf(s.params.effect) >= 0) {\n            if (s.support.transforms3d) {\n                s.params.watchSlidesProgress = true;\n                s.classNames.push(s.params.containerModifierClass + '3d');\n            }\n            else {\n                s.params.effect = 'slide';\n            }\n        }\n        if (s.params.effect !== 'slide') {\n            s.classNames.push(s.params.containerModifierClass + s.params.effect);\n        }\n        if (s.params.effect === 'cube') {\n            s.params.resistanceRatio = 0;\n            s.params.slidesPerView = 1;\n            s.params.slidesPerColumn = 1;\n            s.params.slidesPerGroup = 1;\n            s.params.centeredSlides = false;\n            s.params.spaceBetween = 0;\n            s.params.virtualTranslate = true;\n            s.params.setWrapperSize = false;\n        }\n        if (s.params.effect === 'fade' || s.params.effect === 'flip') {\n            s.params.slidesPerView = 1;\n            s.params.slidesPerColumn = 1;\n            s.params.slidesPerGroup = 1;\n            s.params.watchSlidesProgress = true;\n            s.params.spaceBetween = 0;\n            s.params.setWrapperSize = false;\n            if (typeof initialVirtualTranslate === 'undefined') {\n                s.params.virtualTranslate = true;\n            }\n        }\n        \n        // Grab Cursor\n        if (s.params.grabCursor && s.support.touch) {\n            s.params.grabCursor = false;\n        }\n        \n        // Wrapper\n        s.wrapper = s.container.children('.' + s.params.wrapperClass);\n        \n        // Pagination\n        if (s.params.pagination) {\n            s.paginationContainer = $(s.params.pagination);\n            if (s.params.uniqueNavElements && typeof s.params.pagination === 'string' && s.paginationContainer.length > 1 && s.container.find(s.params.pagination).length === 1) {\n                s.paginationContainer = s.container.find(s.params.pagination);\n            }\n        \n            if (s.params.paginationType === 'bullets' && s.params.paginationClickable) {\n                s.paginationContainer.addClass(s.params.paginationModifierClass + 'clickable');\n            }\n            else {\n                s.params.paginationClickable = false;\n            }\n            s.paginationContainer.addClass(s.params.paginationModifierClass + s.params.paginationType);\n        }\n        // Next/Prev Buttons\n        if (s.params.nextButton || s.params.prevButton) {\n            if (s.params.nextButton) {\n                s.nextButton = $(s.params.nextButton);\n                if (s.params.uniqueNavElements && typeof s.params.nextButton === 'string' && s.nextButton.length > 1 && s.container.find(s.params.nextButton).length === 1) {\n                    s.nextButton = s.container.find(s.params.nextButton);\n                }\n            }\n            if (s.params.prevButton) {\n                s.prevButton = $(s.params.prevButton);\n                if (s.params.uniqueNavElements && typeof s.params.prevButton === 'string' && s.prevButton.length > 1 && s.container.find(s.params.prevButton).length === 1) {\n                    s.prevButton = s.container.find(s.params.prevButton);\n                }\n            }\n        }\n        \n        // Is Horizontal\n        s.isHorizontal = function () {\n            return s.params.direction === 'horizontal';\n        };\n        // s.isH = isH;\n        \n        // RTL\n        s.rtl = s.isHorizontal() && (s.container[0].dir.toLowerCase() === 'rtl' || s.container.css('direction') === 'rtl');\n        if (s.rtl) {\n            s.classNames.push(s.params.containerModifierClass + 'rtl');\n        }\n        \n        // Wrong RTL support\n        if (s.rtl) {\n            s.wrongRTL = s.wrapper.css('display') === '-webkit-box';\n        }\n        \n        // Columns\n        if (s.params.slidesPerColumn > 1) {\n            s.classNames.push(s.params.containerModifierClass + 'multirow');\n        }\n        \n        // Check for Android\n        if (s.device.android) {\n            s.classNames.push(s.params.containerModifierClass + 'android');\n        }\n        \n        // Add classes\n        s.container.addClass(s.classNames.join(' '));\n        \n        // Translate\n        s.translate = 0;\n        \n        // Progress\n        s.progress = 0;\n        \n        // Velocity\n        s.velocity = 0;\n        \n        /*=========================\n          Locks, unlocks\n          ===========================*/\n        s.lockSwipeToNext = function () {\n            s.params.allowSwipeToNext = false;\n            if (s.params.allowSwipeToPrev === false && s.params.grabCursor) {\n                s.unsetGrabCursor();\n            }\n        };\n        s.lockSwipeToPrev = function () {\n            s.params.allowSwipeToPrev = false;\n            if (s.params.allowSwipeToNext === false && s.params.grabCursor) {\n                s.unsetGrabCursor();\n            }\n        };\n        s.lockSwipes = function () {\n            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = false;\n            if (s.params.grabCursor) s.unsetGrabCursor();\n        };\n        s.unlockSwipeToNext = function () {\n            s.params.allowSwipeToNext = true;\n            if (s.params.allowSwipeToPrev === true && s.params.grabCursor) {\n                s.setGrabCursor();\n            }\n        };\n        s.unlockSwipeToPrev = function () {\n            s.params.allowSwipeToPrev = true;\n            if (s.params.allowSwipeToNext === true && s.params.grabCursor) {\n                s.setGrabCursor();\n            }\n        };\n        s.unlockSwipes = function () {\n            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = true;\n            if (s.params.grabCursor) s.setGrabCursor();\n        };\n        \n        /*=========================\n          Round helper\n          ===========================*/\n        function round(a) {\n            return Math.floor(a);\n        }\n        /*=========================\n          Set grab cursor\n          ===========================*/\n        s.setGrabCursor = function(moving) {\n            s.container[0].style.cursor = 'move';\n            s.container[0].style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n            s.container[0].style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n            s.container[0].style.cursor = moving ? 'grabbing': 'grab';\n        };\n        s.unsetGrabCursor = function () {\n            s.container[0].style.cursor = '';\n        };\n        if (s.params.grabCursor) {\n            s.setGrabCursor();\n        }\n        /*=========================\n          Update on Images Ready\n          ===========================*/\n        s.imagesToLoad = [];\n        s.imagesLoaded = 0;\n        \n        s.loadImage = function (imgElement, src, srcset, sizes, checkForComplete, callback) {\n            var image;\n            function onReady () {\n                if (callback) callback();\n            }\n            if (!imgElement.complete || !checkForComplete) {\n                if (src) {\n                    image = new window.Image();\n                    image.onload = onReady;\n                    image.onerror = onReady;\n                    if (sizes) {\n                        image.sizes = sizes;\n                    }\n                    if (srcset) {\n                        image.srcset = srcset;\n                    }\n                    if (src) {\n                        image.src = src;\n                    }\n                } else {\n                    onReady();\n                }\n        \n            } else {//image already loaded...\n                onReady();\n            }\n        };\n        s.preloadImages = function () {\n            s.imagesToLoad = s.container.find('img');\n            function _onReady() {\n                if (typeof s === 'undefined' || s === null || !s) return;\n                if (s.imagesLoaded !== undefined) s.imagesLoaded++;\n                if (s.imagesLoaded === s.imagesToLoad.length) {\n                    if (s.params.updateOnImagesReady) s.update();\n                    s.emit('onImagesReady', s);\n                }\n            }\n            for (var i = 0; i < s.imagesToLoad.length; i++) {\n                s.loadImage(s.imagesToLoad[i], (s.imagesToLoad[i].currentSrc || s.imagesToLoad[i].getAttribute('src')), (s.imagesToLoad[i].srcset || s.imagesToLoad[i].getAttribute('srcset')), s.imagesToLoad[i].sizes || s.imagesToLoad[i].getAttribute('sizes'), true, _onReady);\n            }\n        };\n        \n        /*=========================\n          Autoplay\n          ===========================*/\n        s.autoplayTimeoutId = undefined;\n        s.autoplaying = false;\n        s.autoplayPaused = false;\n        function autoplay() {\n            var autoplayDelay = s.params.autoplay;\n            var activeSlide = s.slides.eq(s.activeIndex);\n            if (activeSlide.attr('data-swiper-autoplay')) {\n                autoplayDelay = activeSlide.attr('data-swiper-autoplay') || s.params.autoplay;\n            }\n            s.autoplayTimeoutId = setTimeout(function () {\n                if (s.params.loop) {\n                    s.fixLoop();\n                    s._slideNext();\n                    s.emit('onAutoplay', s);\n                }\n                else {\n                    if (!s.isEnd) {\n                        s._slideNext();\n                        s.emit('onAutoplay', s);\n                    }\n                    else {\n                        if (!params.autoplayStopOnLast) {\n                            s._slideTo(0);\n                            s.emit('onAutoplay', s);\n                        }\n                        else {\n                            s.stopAutoplay();\n                        }\n                    }\n                }\n            }, autoplayDelay);\n        }\n        s.startAutoplay = function () {\n            if (typeof s.autoplayTimeoutId !== 'undefined') return false;\n            if (!s.params.autoplay) return false;\n            if (s.autoplaying) return false;\n            s.autoplaying = true;\n            s.emit('onAutoplayStart', s);\n            autoplay();\n        };\n        s.stopAutoplay = function (internal) {\n            if (!s.autoplayTimeoutId) return;\n            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n            s.autoplaying = false;\n            s.autoplayTimeoutId = undefined;\n            s.emit('onAutoplayStop', s);\n        };\n        s.pauseAutoplay = function (speed) {\n            if (s.autoplayPaused) return;\n            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n            s.autoplayPaused = true;\n            if (speed === 0) {\n                s.autoplayPaused = false;\n                autoplay();\n            }\n            else {\n                s.wrapper.transitionEnd(function () {\n                    if (!s) return;\n                    s.autoplayPaused = false;\n                    if (!s.autoplaying) {\n                        s.stopAutoplay();\n                    }\n                    else {\n                        autoplay();\n                    }\n                });\n            }\n        };\n        /*=========================\n          Min/Max Translate\n          ===========================*/\n        s.minTranslate = function () {\n            return (-s.snapGrid[0]);\n        };\n        s.maxTranslate = function () {\n            return (-s.snapGrid[s.snapGrid.length - 1]);\n        };\n        /*=========================\n          Slider/slides sizes\n          ===========================*/\n        s.updateAutoHeight = function () {\n            var activeSlides = [];\n            var newHeight = 0;\n            var i;\n        \n            // Find slides currently in view\n            if(s.params.slidesPerView !== 'auto' && s.params.slidesPerView > 1) {\n                for (i = 0; i < Math.ceil(s.params.slidesPerView); i++) {\n                    var index = s.activeIndex + i;\n                    if(index > s.slides.length) break;\n                    activeSlides.push(s.slides.eq(index)[0]);\n                }\n            } else {\n                activeSlides.push(s.slides.eq(s.activeIndex)[0]);\n            }\n        \n            // Find new height from heighest slide in view\n            for (i = 0; i < activeSlides.length; i++) {\n                if (typeof activeSlides[i] !== 'undefined') {\n                    var height = activeSlides[i].offsetHeight;\n                    newHeight = height > newHeight ? height : newHeight;\n                }\n            }\n        \n            // Update Height\n            if (newHeight) s.wrapper.css('height', newHeight + 'px');\n        };\n        s.updateContainerSize = function () {\n            var width, height;\n            if (typeof s.params.width !== 'undefined') {\n                width = s.params.width;\n            }\n            else {\n                width = s.container[0].clientWidth;\n            }\n            if (typeof s.params.height !== 'undefined') {\n                height = s.params.height;\n            }\n            else {\n                height = s.container[0].clientHeight;\n            }\n            if (width === 0 && s.isHorizontal() || height === 0 && !s.isHorizontal()) {\n                return;\n            }\n        \n            //Subtract paddings\n            width = width - parseInt(s.container.css('padding-left'), 10) - parseInt(s.container.css('padding-right'), 10);\n            height = height - parseInt(s.container.css('padding-top'), 10) - parseInt(s.container.css('padding-bottom'), 10);\n        \n            // Store values\n            s.width = width;\n            s.height = height;\n            s.size = s.isHorizontal() ? s.width : s.height;\n        };\n        \n        s.updateSlidesSize = function () {\n            s.slides = s.wrapper.children('.' + s.params.slideClass);\n            s.snapGrid = [];\n            s.slidesGrid = [];\n            s.slidesSizesGrid = [];\n        \n            var spaceBetween = s.params.spaceBetween,\n                slidePosition = -s.params.slidesOffsetBefore,\n                i,\n                prevSlideSize = 0,\n                index = 0;\n            if (typeof s.size === 'undefined') return;\n            if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n                spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * s.size;\n            }\n        \n            s.virtualSize = -spaceBetween;\n            // reset margins\n            if (s.rtl) s.slides.css({marginLeft: '', marginTop: ''});\n            else s.slides.css({marginRight: '', marginBottom: ''});\n        \n            var slidesNumberEvenToRows;\n            if (s.params.slidesPerColumn > 1) {\n                if (Math.floor(s.slides.length / s.params.slidesPerColumn) === s.slides.length / s.params.slidesPerColumn) {\n                    slidesNumberEvenToRows = s.slides.length;\n                }\n                else {\n                    slidesNumberEvenToRows = Math.ceil(s.slides.length / s.params.slidesPerColumn) * s.params.slidesPerColumn;\n                }\n                if (s.params.slidesPerView !== 'auto' && s.params.slidesPerColumnFill === 'row') {\n                    slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, s.params.slidesPerView * s.params.slidesPerColumn);\n                }\n            }\n        \n            // Calc slides\n            var slideSize;\n            var slidesPerColumn = s.params.slidesPerColumn;\n            var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n            var numFullColumns = slidesPerRow - (s.params.slidesPerColumn * slidesPerRow - s.slides.length);\n            for (i = 0; i < s.slides.length; i++) {\n                slideSize = 0;\n                var slide = s.slides.eq(i);\n                if (s.params.slidesPerColumn > 1) {\n                    // Set slides order\n                    var newSlideOrderIndex;\n                    var column, row;\n                    if (s.params.slidesPerColumnFill === 'column') {\n                        column = Math.floor(i / slidesPerColumn);\n                        row = i - column * slidesPerColumn;\n                        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn-1)) {\n                            if (++row >= slidesPerColumn) {\n                                row = 0;\n                                column++;\n                            }\n                        }\n                        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n                        slide\n                            .css({\n                                '-webkit-box-ordinal-group': newSlideOrderIndex,\n                                '-moz-box-ordinal-group': newSlideOrderIndex,\n                                '-ms-flex-order': newSlideOrderIndex,\n                                '-webkit-order': newSlideOrderIndex,\n                                'order': newSlideOrderIndex\n                            });\n                    }\n                    else {\n                        row = Math.floor(i / slidesPerRow);\n                        column = i - row * slidesPerRow;\n                    }\n                    slide\n                        .css(\n                            'margin-' + (s.isHorizontal() ? 'top' : 'left'),\n                            (row !== 0 && s.params.spaceBetween) && (s.params.spaceBetween + 'px')\n                        )\n                        .attr('data-swiper-column', column)\n                        .attr('data-swiper-row', row);\n        \n                }\n                if (slide.css('display') === 'none') continue;\n                if (s.params.slidesPerView === 'auto') {\n                    slideSize = s.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n                    if (s.params.roundLengths) slideSize = round(slideSize);\n                }\n                else {\n                    slideSize = (s.size - (s.params.slidesPerView - 1) * spaceBetween) / s.params.slidesPerView;\n                    if (s.params.roundLengths) slideSize = round(slideSize);\n        \n                    if (s.isHorizontal()) {\n                        s.slides[i].style.width = slideSize + 'px';\n                    }\n                    else {\n                        s.slides[i].style.height = slideSize + 'px';\n                    }\n                }\n                s.slides[i].swiperSlideSize = slideSize;\n                s.slidesSizesGrid.push(slideSize);\n        \n        \n                if (s.params.centeredSlides) {\n                    slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n                    if (i === 0) slidePosition = slidePosition - s.size / 2 - spaceBetween;\n                    if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n                    s.slidesGrid.push(slidePosition);\n                }\n                else {\n                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n                    s.slidesGrid.push(slidePosition);\n                    slidePosition = slidePosition + slideSize + spaceBetween;\n                }\n        \n                s.virtualSize += slideSize + spaceBetween;\n        \n                prevSlideSize = slideSize;\n        \n                index ++;\n            }\n            s.virtualSize = Math.max(s.virtualSize, s.size) + s.params.slidesOffsetAfter;\n            var newSlidesGrid;\n        \n            if (\n                s.rtl && s.wrongRTL && (s.params.effect === 'slide' || s.params.effect === 'coverflow')) {\n                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n            }\n            if (!s.support.flexbox || s.params.setWrapperSize) {\n                if (s.isHorizontal()) s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n                else s.wrapper.css({height: s.virtualSize + s.params.spaceBetween + 'px'});\n            }\n        \n            if (s.params.slidesPerColumn > 1) {\n                s.virtualSize = (slideSize + s.params.spaceBetween) * slidesNumberEvenToRows;\n                s.virtualSize = Math.ceil(s.virtualSize / s.params.slidesPerColumn) - s.params.spaceBetween;\n                if (s.isHorizontal()) s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n                else s.wrapper.css({height: s.virtualSize + s.params.spaceBetween + 'px'});\n                if (s.params.centeredSlides) {\n                    newSlidesGrid = [];\n                    for (i = 0; i < s.snapGrid.length; i++) {\n                        if (s.snapGrid[i] < s.virtualSize + s.snapGrid[0]) newSlidesGrid.push(s.snapGrid[i]);\n                    }\n                    s.snapGrid = newSlidesGrid;\n                }\n            }\n        \n            // Remove last grid elements depending on width\n            if (!s.params.centeredSlides) {\n                newSlidesGrid = [];\n                for (i = 0; i < s.snapGrid.length; i++) {\n                    if (s.snapGrid[i] <= s.virtualSize - s.size) {\n                        newSlidesGrid.push(s.snapGrid[i]);\n                    }\n                }\n                s.snapGrid = newSlidesGrid;\n                if (Math.floor(s.virtualSize - s.size) - Math.floor(s.snapGrid[s.snapGrid.length - 1]) > 1) {\n                    s.snapGrid.push(s.virtualSize - s.size);\n                }\n            }\n            if (s.snapGrid.length === 0) s.snapGrid = [0];\n        \n            if (s.params.spaceBetween !== 0) {\n                if (s.isHorizontal()) {\n                    if (s.rtl) s.slides.css({marginLeft: spaceBetween + 'px'});\n                    else s.slides.css({marginRight: spaceBetween + 'px'});\n                }\n                else s.slides.css({marginBottom: spaceBetween + 'px'});\n            }\n            if (s.params.watchSlidesProgress) {\n                s.updateSlidesOffset();\n            }\n        };\n        s.updateSlidesOffset = function () {\n            for (var i = 0; i < s.slides.length; i++) {\n                s.slides[i].swiperSlideOffset = s.isHorizontal() ? s.slides[i].offsetLeft : s.slides[i].offsetTop;\n            }\n        };\n        \n        /*=========================\n          Dynamic Slides Per View\n          ===========================*/\n        s.currentSlidesPerView = function () {\n            var spv = 1, i, j;\n            if (s.params.centeredSlides) {\n                var size = s.slides[s.activeIndex].swiperSlideSize;\n                var breakLoop;\n                for (i = s.activeIndex + 1; i < s.slides.length; i++) {\n                    if (s.slides[i] && !breakLoop) {\n                        size += s.slides[i].swiperSlideSize;\n                        spv ++;\n                        if (size > s.size) breakLoop = true;\n                    }\n                }\n                for (j = s.activeIndex - 1; j >= 0; j--) {\n                    if (s.slides[j] && !breakLoop) {\n                        size += s.slides[j].swiperSlideSize;\n                        spv ++;\n                        if (size > s.size) breakLoop = true;\n                    }\n                }\n            }\n            else {\n                for (i = s.activeIndex + 1; i < s.slides.length; i++) {\n                    if (s.slidesGrid[i] - s.slidesGrid[s.activeIndex] < s.size) {\n                        spv++;\n                    }\n                }\n            }\n            return spv;\n        };\n        /*=========================\n          Slider/slides progress\n          ===========================*/\n        s.updateSlidesProgress = function (translate) {\n            if (typeof translate === 'undefined') {\n                translate = s.translate || 0;\n            }\n            if (s.slides.length === 0) return;\n            if (typeof s.slides[0].swiperSlideOffset === 'undefined') s.updateSlidesOffset();\n        \n            var offsetCenter = -translate;\n            if (s.rtl) offsetCenter = translate;\n        \n            // Visible Slides\n            s.slides.removeClass(s.params.slideVisibleClass);\n            for (var i = 0; i < s.slides.length; i++) {\n                var slide = s.slides[i];\n                var slideProgress = (offsetCenter + (s.params.centeredSlides ? s.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + s.params.spaceBetween);\n                if (s.params.watchSlidesVisibility) {\n                    var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n                    var slideAfter = slideBefore + s.slidesSizesGrid[i];\n                    var isVisible =\n                        (slideBefore >= 0 && slideBefore < s.size) ||\n                        (slideAfter > 0 && slideAfter <= s.size) ||\n                        (slideBefore <= 0 && slideAfter >= s.size);\n                    if (isVisible) {\n                        s.slides.eq(i).addClass(s.params.slideVisibleClass);\n                    }\n                }\n                slide.progress = s.rtl ? -slideProgress : slideProgress;\n            }\n        };\n        s.updateProgress = function (translate) {\n            if (typeof translate === 'undefined') {\n                translate = s.translate || 0;\n            }\n            var translatesDiff = s.maxTranslate() - s.minTranslate();\n            var wasBeginning = s.isBeginning;\n            var wasEnd = s.isEnd;\n            if (translatesDiff === 0) {\n                s.progress = 0;\n                s.isBeginning = s.isEnd = true;\n            }\n            else {\n                s.progress = (translate - s.minTranslate()) / (translatesDiff);\n                s.isBeginning = s.progress <= 0;\n                s.isEnd = s.progress >= 1;\n            }\n            if (s.isBeginning && !wasBeginning) s.emit('onReachBeginning', s);\n            if (s.isEnd && !wasEnd) s.emit('onReachEnd', s);\n        \n            if (s.params.watchSlidesProgress) s.updateSlidesProgress(translate);\n            s.emit('onProgress', s, s.progress);\n        };\n        s.updateActiveIndex = function () {\n            var translate = s.rtl ? s.translate : -s.translate;\n            var newActiveIndex, i, snapIndex;\n            for (i = 0; i < s.slidesGrid.length; i ++) {\n                if (typeof s.slidesGrid[i + 1] !== 'undefined') {\n                    if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1] - (s.slidesGrid[i + 1] - s.slidesGrid[i]) / 2) {\n                        newActiveIndex = i;\n                    }\n                    else if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1]) {\n                        newActiveIndex = i + 1;\n                    }\n                }\n                else {\n                    if (translate >= s.slidesGrid[i]) {\n                        newActiveIndex = i;\n                    }\n                }\n            }\n            // Normalize slideIndex\n            if(s.params.normalizeSlideIndex){\n                if (newActiveIndex < 0 || typeof newActiveIndex === 'undefined') newActiveIndex = 0;\n            }\n            // for (i = 0; i < s.slidesGrid.length; i++) {\n                // if (- translate >= s.slidesGrid[i]) {\n                    // newActiveIndex = i;\n                // }\n            // }\n            snapIndex = Math.floor(newActiveIndex / s.params.slidesPerGroup);\n            if (snapIndex >= s.snapGrid.length) snapIndex = s.snapGrid.length - 1;\n        \n            if (newActiveIndex === s.activeIndex) {\n                return;\n            }\n            s.snapIndex = snapIndex;\n            s.previousIndex = s.activeIndex;\n            s.activeIndex = newActiveIndex;\n            s.updateClasses();\n            s.updateRealIndex();\n        };\n        s.updateRealIndex = function(){\n            s.realIndex = parseInt(s.slides.eq(s.activeIndex).attr('data-swiper-slide-index') || s.activeIndex, 10);\n        };\n        \n        /*=========================\n          Classes\n          ===========================*/\n        s.updateClasses = function () {\n            s.slides.removeClass(s.params.slideActiveClass + ' ' + s.params.slideNextClass + ' ' + s.params.slidePrevClass + ' ' + s.params.slideDuplicateActiveClass + ' ' + s.params.slideDuplicateNextClass + ' ' + s.params.slideDuplicatePrevClass);\n            var activeSlide = s.slides.eq(s.activeIndex);\n            // Active classes\n            activeSlide.addClass(s.params.slideActiveClass);\n            if (params.loop) {\n                // Duplicate to all looped slides\n                if (activeSlide.hasClass(s.params.slideDuplicateClass)) {\n                    s.wrapper.children('.' + s.params.slideClass + ':not(.' + s.params.slideDuplicateClass + ')[data-swiper-slide-index=\"' + s.realIndex + '\"]').addClass(s.params.slideDuplicateActiveClass);\n                }\n                else {\n                    s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + s.realIndex + '\"]').addClass(s.params.slideDuplicateActiveClass);\n                }\n            }\n            // Next Slide\n            var nextSlide = activeSlide.next('.' + s.params.slideClass).addClass(s.params.slideNextClass);\n            if (s.params.loop && nextSlide.length === 0) {\n                nextSlide = s.slides.eq(0);\n                nextSlide.addClass(s.params.slideNextClass);\n            }\n            // Prev Slide\n            var prevSlide = activeSlide.prev('.' + s.params.slideClass).addClass(s.params.slidePrevClass);\n            if (s.params.loop && prevSlide.length === 0) {\n                prevSlide = s.slides.eq(-1);\n                prevSlide.addClass(s.params.slidePrevClass);\n            }\n            if (params.loop) {\n                // Duplicate to all looped slides\n                if (nextSlide.hasClass(s.params.slideDuplicateClass)) {\n                    s.wrapper.children('.' + s.params.slideClass + ':not(.' + s.params.slideDuplicateClass + ')[data-swiper-slide-index=\"' + nextSlide.attr('data-swiper-slide-index') + '\"]').addClass(s.params.slideDuplicateNextClass);\n                }\n                else {\n                    s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + nextSlide.attr('data-swiper-slide-index') + '\"]').addClass(s.params.slideDuplicateNextClass);\n                }\n                if (prevSlide.hasClass(s.params.slideDuplicateClass)) {\n                    s.wrapper.children('.' + s.params.slideClass + ':not(.' + s.params.slideDuplicateClass + ')[data-swiper-slide-index=\"' + prevSlide.attr('data-swiper-slide-index') + '\"]').addClass(s.params.slideDuplicatePrevClass);\n                }\n                else {\n                    s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + prevSlide.attr('data-swiper-slide-index') + '\"]').addClass(s.params.slideDuplicatePrevClass);\n                }\n            }\n        \n            // Pagination\n            if (s.paginationContainer && s.paginationContainer.length > 0) {\n                // Current/Total\n                var current,\n                    total = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;\n                if (s.params.loop) {\n                    current = Math.ceil((s.activeIndex - s.loopedSlides)/s.params.slidesPerGroup);\n                    if (current > s.slides.length - 1 - s.loopedSlides * 2) {\n                        current = current - (s.slides.length - s.loopedSlides * 2);\n                    }\n                    if (current > total - 1) current = current - total;\n                    if (current < 0 && s.params.paginationType !== 'bullets') current = total + current;\n                }\n                else {\n                    if (typeof s.snapIndex !== 'undefined') {\n                        current = s.snapIndex;\n                    }\n                    else {\n                        current = s.activeIndex || 0;\n                    }\n                }\n                // Types\n                if (s.params.paginationType === 'bullets' && s.bullets && s.bullets.length > 0) {\n                    s.bullets.removeClass(s.params.bulletActiveClass);\n                    if (s.paginationContainer.length > 1) {\n                        s.bullets.each(function () {\n                            if ($(this).index() === current) $(this).addClass(s.params.bulletActiveClass);\n                        });\n                    }\n                    else {\n                        s.bullets.eq(current).addClass(s.params.bulletActiveClass);\n                    }\n                }\n                if (s.params.paginationType === 'fraction') {\n                    s.paginationContainer.find('.' + s.params.paginationCurrentClass).text(current + 1);\n                    s.paginationContainer.find('.' + s.params.paginationTotalClass).text(total);\n                }\n                if (s.params.paginationType === 'progress') {\n                    var scale = (current + 1) / total,\n                        scaleX = scale,\n                        scaleY = 1;\n                    if (!s.isHorizontal()) {\n                        scaleY = scale;\n                        scaleX = 1;\n                    }\n                    s.paginationContainer.find('.' + s.params.paginationProgressbarClass).transform('translate3d(0,0,0) scaleX(' + scaleX + ') scaleY(' + scaleY + ')').transition(s.params.speed);\n                }\n                if (s.params.paginationType === 'custom' && s.params.paginationCustomRender) {\n                    s.paginationContainer.html(s.params.paginationCustomRender(s, current + 1, total));\n                    s.emit('onPaginationRendered', s, s.paginationContainer[0]);\n                }\n            }\n        \n            // Next/active buttons\n            if (!s.params.loop) {\n                if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {\n                    if (s.isBeginning) {\n                        s.prevButton.addClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.disable(s.prevButton);\n                    }\n                    else {\n                        s.prevButton.removeClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.enable(s.prevButton);\n                    }\n                }\n                if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {\n                    if (s.isEnd) {\n                        s.nextButton.addClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.disable(s.nextButton);\n                    }\n                    else {\n                        s.nextButton.removeClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.enable(s.nextButton);\n                    }\n                }\n            }\n        };\n        \n        /*=========================\n          Pagination\n          ===========================*/\n        s.updatePagination = function () {\n            if (!s.params.pagination) return;\n            if (s.paginationContainer && s.paginationContainer.length > 0) {\n                var paginationHTML = '';\n                if (s.params.paginationType === 'bullets') {\n                    var numberOfBullets = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;\n                    for (var i = 0; i < numberOfBullets; i++) {\n                        if (s.params.paginationBulletRender) {\n                            paginationHTML += s.params.paginationBulletRender(s, i, s.params.bulletClass);\n                        }\n                        else {\n                            paginationHTML += '<' + s.params.paginationElement+' class=\"' + s.params.bulletClass + '\"></' + s.params.paginationElement + '>';\n                        }\n                    }\n                    s.paginationContainer.html(paginationHTML);\n                    s.bullets = s.paginationContainer.find('.' + s.params.bulletClass);\n                    if (s.params.paginationClickable && s.params.a11y && s.a11y) {\n                        s.a11y.initPagination();\n                    }\n                }\n                if (s.params.paginationType === 'fraction') {\n                    if (s.params.paginationFractionRender) {\n                        paginationHTML = s.params.paginationFractionRender(s, s.params.paginationCurrentClass, s.params.paginationTotalClass);\n                    }\n                    else {\n                        paginationHTML =\n                            '<span class=\"' + s.params.paginationCurrentClass + '\"></span>' +\n                            ' / ' +\n                            '<span class=\"' + s.params.paginationTotalClass+'\"></span>';\n                    }\n                    s.paginationContainer.html(paginationHTML);\n                }\n                if (s.params.paginationType === 'progress') {\n                    if (s.params.paginationProgressRender) {\n                        paginationHTML = s.params.paginationProgressRender(s, s.params.paginationProgressbarClass);\n                    }\n                    else {\n                        paginationHTML = '<span class=\"' + s.params.paginationProgressbarClass + '\"></span>';\n                    }\n                    s.paginationContainer.html(paginationHTML);\n                }\n                if (s.params.paginationType !== 'custom') {\n                    s.emit('onPaginationRendered', s, s.paginationContainer[0]);\n                }\n            }\n        };\n        /*=========================\n          Common update method\n          ===========================*/\n        s.update = function (updateTranslate) {\n            if (!s) return;\n            s.updateContainerSize();\n            s.updateSlidesSize();\n            s.updateProgress();\n            s.updatePagination();\n            s.updateClasses();\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.set();\n            }\n            function forceSetTranslate() {\n                var translate = s.rtl ? -s.translate : s.translate;\n                newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n                s.setWrapperTranslate(newTranslate);\n                s.updateActiveIndex();\n                s.updateClasses();\n            }\n            if (updateTranslate) {\n                var translated, newTranslate;\n                if (s.controller && s.controller.spline) {\n                    s.controller.spline = undefined;\n                }\n                if (s.params.freeMode) {\n                    forceSetTranslate();\n                    if (s.params.autoHeight) {\n                        s.updateAutoHeight();\n                    }\n                }\n                else {\n                    if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n                        translated = s.slideTo(s.slides.length - 1, 0, false, true);\n                    }\n                    else {\n                        translated = s.slideTo(s.activeIndex, 0, false, true);\n                    }\n                    if (!translated) {\n                        forceSetTranslate();\n                    }\n                }\n            }\n            else if (s.params.autoHeight) {\n                s.updateAutoHeight();\n            }\n        };\n        \n        /*=========================\n          Resize Handler\n          ===========================*/\n        s.onResize = function (forceUpdatePagination) {\n            //Breakpoints\n            if (s.params.breakpoints) {\n                s.setBreakpoint();\n            }\n        \n            // Disable locks on resize\n            var allowSwipeToPrev = s.params.allowSwipeToPrev;\n            var allowSwipeToNext = s.params.allowSwipeToNext;\n            s.params.allowSwipeToPrev = s.params.allowSwipeToNext = true;\n        \n            s.updateContainerSize();\n            s.updateSlidesSize();\n            if (s.params.slidesPerView === 'auto' || s.params.freeMode || forceUpdatePagination) s.updatePagination();\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.set();\n            }\n            if (s.controller && s.controller.spline) {\n                s.controller.spline = undefined;\n            }\n            var slideChangedBySlideTo = false;\n            if (s.params.freeMode) {\n                var newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n                s.setWrapperTranslate(newTranslate);\n                s.updateActiveIndex();\n                s.updateClasses();\n        \n                if (s.params.autoHeight) {\n                    s.updateAutoHeight();\n                }\n            }\n            else {\n                s.updateClasses();\n                if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n                    slideChangedBySlideTo = s.slideTo(s.slides.length - 1, 0, false, true);\n                }\n                else {\n                    slideChangedBySlideTo = s.slideTo(s.activeIndex, 0, false, true);\n                }\n            }\n            if (s.params.lazyLoading && !slideChangedBySlideTo && s.lazy) {\n                s.lazy.load();\n            }\n            // Return locks after resize\n            s.params.allowSwipeToPrev = allowSwipeToPrev;\n            s.params.allowSwipeToNext = allowSwipeToNext;\n        };\n        \n        /*=========================\n          Events\n          ===========================*/\n        \n        //Define Touch Events\n        s.touchEventsDesktop = {start: 'mousedown', move: 'mousemove', end: 'mouseup'};\n        if (window.navigator.pointerEnabled) s.touchEventsDesktop = {start: 'pointerdown', move: 'pointermove', end: 'pointerup'};\n        else if (window.navigator.msPointerEnabled) s.touchEventsDesktop = {start: 'MSPointerDown', move: 'MSPointerMove', end: 'MSPointerUp'};\n        s.touchEvents = {\n            start : s.support.touch || !s.params.simulateTouch  ? 'touchstart' : s.touchEventsDesktop.start,\n            move : s.support.touch || !s.params.simulateTouch ? 'touchmove' : s.touchEventsDesktop.move,\n            end : s.support.touch || !s.params.simulateTouch ? 'touchend' : s.touchEventsDesktop.end\n        };\n        \n        \n        // WP8 Touch Events Fix\n        if (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) {\n            (s.params.touchEventsTarget === 'container' ? s.container : s.wrapper).addClass('swiper-wp8-' + s.params.direction);\n        }\n        \n        // Attach/detach events\n        s.initEvents = function (detach) {\n            var actionDom = detach ? 'off' : 'on';\n            var action = detach ? 'removeEventListener' : 'addEventListener';\n            var touchEventsTarget = s.params.touchEventsTarget === 'container' ? s.container[0] : s.wrapper[0];\n            var target = s.support.touch ? touchEventsTarget : document;\n        \n            var moveCapture = s.params.nested ? true : false;\n        \n            //Touch Events\n            if (s.browser.ie) {\n                touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);\n                target[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n                target[action](s.touchEvents.end, s.onTouchEnd, false);\n            }\n            else {\n                if (s.support.touch) {\n                    var passiveListener = s.touchEvents.start === 'touchstart' && s.support.passiveListener && s.params.passiveListeners ? {passive: true, capture: false} : false;\n                    touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, passiveListener);\n                    touchEventsTarget[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n                    touchEventsTarget[action](s.touchEvents.end, s.onTouchEnd, passiveListener);\n                }\n                if ((params.simulateTouch && !s.device.ios && !s.device.android) || (params.simulateTouch && !s.support.touch && s.device.ios)) {\n                    touchEventsTarget[action]('mousedown', s.onTouchStart, false);\n                    document[action]('mousemove', s.onTouchMove, moveCapture);\n                    document[action]('mouseup', s.onTouchEnd, false);\n                }\n            }\n            window[action]('resize', s.onResize);\n        \n            // Next, Prev, Index\n            if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {\n                s.nextButton[actionDom]('click', s.onClickNext);\n                if (s.params.a11y && s.a11y) s.nextButton[actionDom]('keydown', s.a11y.onEnterKey);\n            }\n            if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {\n                s.prevButton[actionDom]('click', s.onClickPrev);\n                if (s.params.a11y && s.a11y) s.prevButton[actionDom]('keydown', s.a11y.onEnterKey);\n            }\n            if (s.params.pagination && s.params.paginationClickable) {\n                s.paginationContainer[actionDom]('click', '.' + s.params.bulletClass, s.onClickIndex);\n                if (s.params.a11y && s.a11y) s.paginationContainer[actionDom]('keydown', '.' + s.params.bulletClass, s.a11y.onEnterKey);\n            }\n        \n            // Prevent Links Clicks\n            if (s.params.preventClicks || s.params.preventClicksPropagation) touchEventsTarget[action]('click', s.preventClicks, true);\n        };\n        s.attachEvents = function () {\n            s.initEvents();\n        };\n        s.detachEvents = function () {\n            s.initEvents(true);\n        };\n        \n        /*=========================\n          Handle Clicks\n          ===========================*/\n        // Prevent Clicks\n        s.allowClick = true;\n        s.preventClicks = function (e) {\n            if (!s.allowClick) {\n                if (s.params.preventClicks) e.preventDefault();\n                if (s.params.preventClicksPropagation && s.animating) {\n                    e.stopPropagation();\n                    e.stopImmediatePropagation();\n                }\n            }\n        };\n        // Clicks\n        s.onClickNext = function (e) {\n            e.preventDefault();\n            if (s.isEnd && !s.params.loop) return;\n            s.slideNext();\n        };\n        s.onClickPrev = function (e) {\n            e.preventDefault();\n            if (s.isBeginning && !s.params.loop) return;\n            s.slidePrev();\n        };\n        s.onClickIndex = function (e) {\n            e.preventDefault();\n            var index = $(this).index() * s.params.slidesPerGroup;\n            if (s.params.loop) index = index + s.loopedSlides;\n            s.slideTo(index);\n        };\n        \n        /*=========================\n          Handle Touches\n          ===========================*/\n        function findElementInEvent(e, selector) {\n            var el = $(e.target);\n            if (!el.is(selector)) {\n                if (typeof selector === 'string') {\n                    el = el.parents(selector);\n                }\n                else if (selector.nodeType) {\n                    var found;\n                    el.parents().each(function (index, _el) {\n                        if (_el === selector) found = selector;\n                    });\n                    if (!found) return undefined;\n                    else return selector;\n                }\n            }\n            if (el.length === 0) {\n                return undefined;\n            }\n            return el[0];\n        }\n        s.updateClickedSlide = function (e) {\n            var slide = findElementInEvent(e, '.' + s.params.slideClass);\n            var slideFound = false;\n            if (slide) {\n                for (var i = 0; i < s.slides.length; i++) {\n                    if (s.slides[i] === slide) slideFound = true;\n                }\n            }\n        \n            if (slide && slideFound) {\n                s.clickedSlide = slide;\n                s.clickedIndex = $(slide).index();\n            }\n            else {\n                s.clickedSlide = undefined;\n                s.clickedIndex = undefined;\n                return;\n            }\n            if (s.params.slideToClickedSlide && s.clickedIndex !== undefined && s.clickedIndex !== s.activeIndex) {\n                var slideToIndex = s.clickedIndex,\n                    realIndex,\n                    duplicatedSlides,\n                    slidesPerView = s.params.slidesPerView === 'auto' ? s.currentSlidesPerView() : s.params.slidesPerView;\n                if (s.params.loop) {\n                    if (s.animating) return;\n                    realIndex = parseInt($(s.clickedSlide).attr('data-swiper-slide-index'), 10);\n                    if (s.params.centeredSlides) {\n                        if ((slideToIndex < s.loopedSlides - slidesPerView/2) || (slideToIndex > s.slides.length - s.loopedSlides + slidesPerView/2)) {\n                            s.fixLoop();\n                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.' + s.params.slideDuplicateClass + ')').eq(0).index();\n                            setTimeout(function () {\n                                s.slideTo(slideToIndex);\n                            }, 0);\n                        }\n                        else {\n                            s.slideTo(slideToIndex);\n                        }\n                    }\n                    else {\n                        if (slideToIndex > s.slides.length - slidesPerView) {\n                            s.fixLoop();\n                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.' + s.params.slideDuplicateClass + ')').eq(0).index();\n                            setTimeout(function () {\n                                s.slideTo(slideToIndex);\n                            }, 0);\n                        }\n                        else {\n                            s.slideTo(slideToIndex);\n                        }\n                    }\n                }\n                else {\n                    s.slideTo(slideToIndex);\n                }\n            }\n        };\n        \n        var isTouched,\n            isMoved,\n            allowTouchCallbacks,\n            touchStartTime,\n            isScrolling,\n            currentTranslate,\n            startTranslate,\n            allowThresholdMove,\n            // Form elements to match\n            formElements = 'input, select, textarea, button, video',\n            // Last click time\n            lastClickTime = Date.now(), clickTimeout,\n            //Velocities\n            velocities = [],\n            allowMomentumBounce;\n        \n        // Animating Flag\n        s.animating = false;\n        \n        // Touches information\n        s.touches = {\n            startX: 0,\n            startY: 0,\n            currentX: 0,\n            currentY: 0,\n            diff: 0\n        };\n        \n        // Touch handlers\n        var isTouchEvent, startMoving;\n        s.onTouchStart = function (e) {\n            if (e.originalEvent) e = e.originalEvent;\n            isTouchEvent = e.type === 'touchstart';\n            if (!isTouchEvent && 'which' in e && e.which === 3) return;\n            if (s.params.noSwiping && findElementInEvent(e, '.' + s.params.noSwipingClass)) {\n                s.allowClick = true;\n                return;\n            }\n            if (s.params.swipeHandler) {\n                if (!findElementInEvent(e, s.params.swipeHandler)) return;\n            }\n        \n            var startX = s.touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n            var startY = s.touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n        \n            // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n            if(s.device.ios && s.params.iOSEdgeSwipeDetection && startX <= s.params.iOSEdgeSwipeThreshold) {\n                return;\n            }\n        \n            isTouched = true;\n            isMoved = false;\n            allowTouchCallbacks = true;\n            isScrolling = undefined;\n            startMoving = undefined;\n            s.touches.startX = startX;\n            s.touches.startY = startY;\n            touchStartTime = Date.now();\n            s.allowClick = true;\n            s.updateContainerSize();\n            s.swipeDirection = undefined;\n            if (s.params.threshold > 0) allowThresholdMove = false;\n            if (e.type !== 'touchstart') {\n                var preventDefault = true;\n                if ($(e.target).is(formElements)) preventDefault = false;\n                if (document.activeElement && $(document.activeElement).is(formElements)) {\n                    document.activeElement.blur();\n                }\n                if (preventDefault) {\n                    e.preventDefault();\n                }\n            }\n            s.emit('onTouchStart', s, e);\n        };\n        \n        s.onTouchMove = function (e) {\n            if (e.originalEvent) e = e.originalEvent;\n            if (isTouchEvent && e.type === 'mousemove') return;\n            if (e.preventedByNestedSwiper) {\n                s.touches.startX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n                s.touches.startY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n                return;\n            }\n            if (s.params.onlyExternal) {\n                // isMoved = true;\n                s.allowClick = false;\n                if (isTouched) {\n                    s.touches.startX = s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n                    s.touches.startY = s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n                    touchStartTime = Date.now();\n                }\n                return;\n            }\n            if (isTouchEvent && s.params.touchReleaseOnEdges && !s.params.loop) {\n                if (!s.isHorizontal()) {\n                    // Vertical\n                    if (\n                        (s.touches.currentY < s.touches.startY && s.translate <= s.maxTranslate()) ||\n                        (s.touches.currentY > s.touches.startY && s.translate >= s.minTranslate())\n                        ) {\n                        return;\n                    }\n                }\n                else {\n                    if (\n                        (s.touches.currentX < s.touches.startX && s.translate <= s.maxTranslate()) ||\n                        (s.touches.currentX > s.touches.startX && s.translate >= s.minTranslate())\n                        ) {\n                        return;\n                    }\n                }\n            }\n            if (isTouchEvent && document.activeElement) {\n                if (e.target === document.activeElement && $(e.target).is(formElements)) {\n                    isMoved = true;\n                    s.allowClick = false;\n                    return;\n                }\n            }\n            if (allowTouchCallbacks) {\n                s.emit('onTouchMove', s, e);\n            }\n            if (e.targetTouches && e.targetTouches.length > 1) return;\n        \n            s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n            s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n        \n            if (typeof isScrolling === 'undefined') {\n                var touchAngle;\n                if (s.isHorizontal() && s.touches.currentY === s.touches.startY || !s.isHorizontal() && s.touches.currentX === s.touches.startX) {\n                    isScrolling = false;\n                }\n                else {\n                    touchAngle = Math.atan2(Math.abs(s.touches.currentY - s.touches.startY), Math.abs(s.touches.currentX - s.touches.startX)) * 180 / Math.PI;\n                    isScrolling = s.isHorizontal() ? touchAngle > s.params.touchAngle : (90 - touchAngle > s.params.touchAngle);\n                }\n            }\n            if (isScrolling) {\n                s.emit('onTouchMoveOpposite', s, e);\n            }\n            if (typeof startMoving === 'undefined' && s.browser.ieTouch) {\n                if (s.touches.currentX !== s.touches.startX || s.touches.currentY !== s.touches.startY) {\n                    startMoving = true;\n                }\n            }\n            if (!isTouched) return;\n            if (isScrolling)  {\n                isTouched = false;\n                return;\n            }\n            if (!startMoving && s.browser.ieTouch) {\n                return;\n            }\n            s.allowClick = false;\n            s.emit('onSliderMove', s, e);\n            e.preventDefault();\n            if (s.params.touchMoveStopPropagation && !s.params.nested) {\n                e.stopPropagation();\n            }\n        \n            if (!isMoved) {\n                if (params.loop) {\n                    s.fixLoop();\n                }\n                startTranslate = s.getWrapperTranslate();\n                s.setWrapperTransition(0);\n                if (s.animating) {\n                    s.wrapper.trigger('webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd');\n                }\n                if (s.params.autoplay && s.autoplaying) {\n                    if (s.params.autoplayDisableOnInteraction) {\n                        s.stopAutoplay();\n                    }\n                    else {\n                        s.pauseAutoplay();\n                    }\n                }\n                allowMomentumBounce = false;\n                //Grab Cursor\n                if (s.params.grabCursor && (s.params.allowSwipeToNext === true || s.params.allowSwipeToPrev === true)) {\n                    s.setGrabCursor(true);\n                }\n            }\n            isMoved = true;\n        \n            var diff = s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n        \n            diff = diff * s.params.touchRatio;\n            if (s.rtl) diff = -diff;\n        \n            s.swipeDirection = diff > 0 ? 'prev' : 'next';\n            currentTranslate = diff + startTranslate;\n        \n            var disableParentSwiper = true;\n            if ((diff > 0 && currentTranslate > s.minTranslate())) {\n                disableParentSwiper = false;\n                if (s.params.resistance) currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + startTranslate + diff, s.params.resistanceRatio);\n            }\n            else if (diff < 0 && currentTranslate < s.maxTranslate()) {\n                disableParentSwiper = false;\n                if (s.params.resistance) currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - startTranslate - diff, s.params.resistanceRatio);\n            }\n        \n            if (disableParentSwiper) {\n                e.preventedByNestedSwiper = true;\n            }\n        \n            // Directions locks\n            if (!s.params.allowSwipeToNext && s.swipeDirection === 'next' && currentTranslate < startTranslate) {\n                currentTranslate = startTranslate;\n            }\n            if (!s.params.allowSwipeToPrev && s.swipeDirection === 'prev' && currentTranslate > startTranslate) {\n                currentTranslate = startTranslate;\n            }\n        \n        \n            // Threshold\n            if (s.params.threshold > 0) {\n                if (Math.abs(diff) > s.params.threshold || allowThresholdMove) {\n                    if (!allowThresholdMove) {\n                        allowThresholdMove = true;\n                        s.touches.startX = s.touches.currentX;\n                        s.touches.startY = s.touches.currentY;\n                        currentTranslate = startTranslate;\n                        s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n                        return;\n                    }\n                }\n                else {\n                    currentTranslate = startTranslate;\n                    return;\n                }\n            }\n        \n            if (!s.params.followFinger) return;\n        \n            // Update active index in free mode\n            if (s.params.freeMode || s.params.watchSlidesProgress) {\n                s.updateActiveIndex();\n            }\n            if (s.params.freeMode) {\n                //Velocity\n                if (velocities.length === 0) {\n                    velocities.push({\n                        position: s.touches[s.isHorizontal() ? 'startX' : 'startY'],\n                        time: touchStartTime\n                    });\n                }\n                velocities.push({\n                    position: s.touches[s.isHorizontal() ? 'currentX' : 'currentY'],\n                    time: (new window.Date()).getTime()\n                });\n            }\n            // Update progress\n            s.updateProgress(currentTranslate);\n            // Update translate\n            s.setWrapperTranslate(currentTranslate);\n        };\n        s.onTouchEnd = function (e) {\n            if (e.originalEvent) e = e.originalEvent;\n            if (allowTouchCallbacks) {\n                s.emit('onTouchEnd', s, e);\n            }\n            allowTouchCallbacks = false;\n            if (!isTouched) return;\n            //Return Grab Cursor\n            if (s.params.grabCursor && isMoved && isTouched  && (s.params.allowSwipeToNext === true || s.params.allowSwipeToPrev === true)) {\n                s.setGrabCursor(false);\n            }\n        \n            // Time diff\n            var touchEndTime = Date.now();\n            var timeDiff = touchEndTime - touchStartTime;\n        \n            // Tap, doubleTap, Click\n            if (s.allowClick) {\n                s.updateClickedSlide(e);\n                s.emit('onTap', s, e);\n                if (timeDiff < 300 && (touchEndTime - lastClickTime) > 300) {\n                    if (clickTimeout) clearTimeout(clickTimeout);\n                    clickTimeout = setTimeout(function () {\n                        if (!s) return;\n                        if (s.params.paginationHide && s.paginationContainer.length > 0 && !$(e.target).hasClass(s.params.bulletClass)) {\n                            s.paginationContainer.toggleClass(s.params.paginationHiddenClass);\n                        }\n                        s.emit('onClick', s, e);\n                    }, 300);\n        \n                }\n                if (timeDiff < 300 && (touchEndTime - lastClickTime) < 300) {\n                    if (clickTimeout) clearTimeout(clickTimeout);\n                    s.emit('onDoubleTap', s, e);\n                }\n            }\n        \n            lastClickTime = Date.now();\n            setTimeout(function () {\n                if (s) s.allowClick = true;\n            }, 0);\n        \n            if (!isTouched || !isMoved || !s.swipeDirection || s.touches.diff === 0 || currentTranslate === startTranslate) {\n                isTouched = isMoved = false;\n                return;\n            }\n            isTouched = isMoved = false;\n        \n            var currentPos;\n            if (s.params.followFinger) {\n                currentPos = s.rtl ? s.translate : -s.translate;\n            }\n            else {\n                currentPos = -currentTranslate;\n            }\n            if (s.params.freeMode) {\n                if (currentPos < -s.minTranslate()) {\n                    s.slideTo(s.activeIndex);\n                    return;\n                }\n                else if (currentPos > -s.maxTranslate()) {\n                    if (s.slides.length < s.snapGrid.length) {\n                        s.slideTo(s.snapGrid.length - 1);\n                    }\n                    else {\n                        s.slideTo(s.slides.length - 1);\n                    }\n                    return;\n                }\n        \n                if (s.params.freeModeMomentum) {\n                    if (velocities.length > 1) {\n                        var lastMoveEvent = velocities.pop(), velocityEvent = velocities.pop();\n        \n                        var distance = lastMoveEvent.position - velocityEvent.position;\n                        var time = lastMoveEvent.time - velocityEvent.time;\n                        s.velocity = distance / time;\n                        s.velocity = s.velocity / 2;\n                        if (Math.abs(s.velocity) < s.params.freeModeMinimumVelocity) {\n                            s.velocity = 0;\n                        }\n                        // this implies that the user stopped moving a finger then released.\n                        // There would be no events with distance zero, so the last event is stale.\n                        if (time > 150 || (new window.Date().getTime() - lastMoveEvent.time) > 300) {\n                            s.velocity = 0;\n                        }\n                    } else {\n                        s.velocity = 0;\n                    }\n                    s.velocity = s.velocity * s.params.freeModeMomentumVelocityRatio;\n        \n                    velocities.length = 0;\n                    var momentumDuration = 1000 * s.params.freeModeMomentumRatio;\n                    var momentumDistance = s.velocity * momentumDuration;\n        \n                    var newPosition = s.translate + momentumDistance;\n                    if (s.rtl) newPosition = - newPosition;\n                    var doBounce = false;\n                    var afterBouncePosition;\n                    var bounceAmount = Math.abs(s.velocity) * 20 * s.params.freeModeMomentumBounceRatio;\n                    if (newPosition < s.maxTranslate()) {\n                        if (s.params.freeModeMomentumBounce) {\n                            if (newPosition + s.maxTranslate() < -bounceAmount) {\n                                newPosition = s.maxTranslate() - bounceAmount;\n                            }\n                            afterBouncePosition = s.maxTranslate();\n                            doBounce = true;\n                            allowMomentumBounce = true;\n                        }\n                        else {\n                            newPosition = s.maxTranslate();\n                        }\n                    }\n                    else if (newPosition > s.minTranslate()) {\n                        if (s.params.freeModeMomentumBounce) {\n                            if (newPosition - s.minTranslate() > bounceAmount) {\n                                newPosition = s.minTranslate() + bounceAmount;\n                            }\n                            afterBouncePosition = s.minTranslate();\n                            doBounce = true;\n                            allowMomentumBounce = true;\n                        }\n                        else {\n                            newPosition = s.minTranslate();\n                        }\n                    }\n                    else if (s.params.freeModeSticky) {\n                        var j = 0,\n                            nextSlide;\n                        for (j = 0; j < s.snapGrid.length; j += 1) {\n                            if (s.snapGrid[j] > -newPosition) {\n                                nextSlide = j;\n                                break;\n                            }\n        \n                        }\n                        if (Math.abs(s.snapGrid[nextSlide] - newPosition) < Math.abs(s.snapGrid[nextSlide - 1] - newPosition) || s.swipeDirection === 'next') {\n                            newPosition = s.snapGrid[nextSlide];\n                        } else {\n                            newPosition = s.snapGrid[nextSlide - 1];\n                        }\n                        if (!s.rtl) newPosition = - newPosition;\n                    }\n                    //Fix duration\n                    if (s.velocity !== 0) {\n                        if (s.rtl) {\n                            momentumDuration = Math.abs((-newPosition - s.translate) / s.velocity);\n                        }\n                        else {\n                            momentumDuration = Math.abs((newPosition - s.translate) / s.velocity);\n                        }\n                    }\n                    else if (s.params.freeModeSticky) {\n                        s.slideReset();\n                        return;\n                    }\n        \n                    if (s.params.freeModeMomentumBounce && doBounce) {\n                        s.updateProgress(afterBouncePosition);\n                        s.setWrapperTransition(momentumDuration);\n                        s.setWrapperTranslate(newPosition);\n                        s.onTransitionStart();\n                        s.animating = true;\n                        s.wrapper.transitionEnd(function () {\n                            if (!s || !allowMomentumBounce) return;\n                            s.emit('onMomentumBounce', s);\n        \n                            s.setWrapperTransition(s.params.speed);\n                            s.setWrapperTranslate(afterBouncePosition);\n                            s.wrapper.transitionEnd(function () {\n                                if (!s) return;\n                                s.onTransitionEnd();\n                            });\n                        });\n                    } else if (s.velocity) {\n                        s.updateProgress(newPosition);\n                        s.setWrapperTransition(momentumDuration);\n                        s.setWrapperTranslate(newPosition);\n                        s.onTransitionStart();\n                        if (!s.animating) {\n                            s.animating = true;\n                            s.wrapper.transitionEnd(function () {\n                                if (!s) return;\n                                s.onTransitionEnd();\n                            });\n                        }\n        \n                    } else {\n                        s.updateProgress(newPosition);\n                    }\n        \n                    s.updateActiveIndex();\n                }\n                if (!s.params.freeModeMomentum || timeDiff >= s.params.longSwipesMs) {\n                    s.updateProgress();\n                    s.updateActiveIndex();\n                }\n                return;\n            }\n        \n            // Find current slide\n            var i, stopIndex = 0, groupSize = s.slidesSizesGrid[0];\n            for (i = 0; i < s.slidesGrid.length; i += s.params.slidesPerGroup) {\n                if (typeof s.slidesGrid[i + s.params.slidesPerGroup] !== 'undefined') {\n                    if (currentPos >= s.slidesGrid[i] && currentPos < s.slidesGrid[i + s.params.slidesPerGroup]) {\n                        stopIndex = i;\n                        groupSize = s.slidesGrid[i + s.params.slidesPerGroup] - s.slidesGrid[i];\n                    }\n                }\n                else {\n                    if (currentPos >= s.slidesGrid[i]) {\n                        stopIndex = i;\n                        groupSize = s.slidesGrid[s.slidesGrid.length - 1] - s.slidesGrid[s.slidesGrid.length - 2];\n                    }\n                }\n            }\n        \n            // Find current slide size\n            var ratio = (currentPos - s.slidesGrid[stopIndex]) / groupSize;\n        \n            if (timeDiff > s.params.longSwipesMs) {\n                // Long touches\n                if (!s.params.longSwipes) {\n                    s.slideTo(s.activeIndex);\n                    return;\n                }\n                if (s.swipeDirection === 'next') {\n                    if (ratio >= s.params.longSwipesRatio) s.slideTo(stopIndex + s.params.slidesPerGroup);\n                    else s.slideTo(stopIndex);\n        \n                }\n                if (s.swipeDirection === 'prev') {\n                    if (ratio > (1 - s.params.longSwipesRatio)) s.slideTo(stopIndex + s.params.slidesPerGroup);\n                    else s.slideTo(stopIndex);\n                }\n            }\n            else {\n                // Short swipes\n                if (!s.params.shortSwipes) {\n                    s.slideTo(s.activeIndex);\n                    return;\n                }\n                if (s.swipeDirection === 'next') {\n                    s.slideTo(stopIndex + s.params.slidesPerGroup);\n        \n                }\n                if (s.swipeDirection === 'prev') {\n                    s.slideTo(stopIndex);\n                }\n            }\n        };\n        /*=========================\n          Transitions\n          ===========================*/\n        s._slideTo = function (slideIndex, speed) {\n            return s.slideTo(slideIndex, speed, true, true);\n        };\n        s.slideTo = function (slideIndex, speed, runCallbacks, internal) {\n            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n            if (typeof slideIndex === 'undefined') slideIndex = 0;\n            if (slideIndex < 0) slideIndex = 0;\n            s.snapIndex = Math.floor(slideIndex / s.params.slidesPerGroup);\n            if (s.snapIndex >= s.snapGrid.length) s.snapIndex = s.snapGrid.length - 1;\n        \n            var translate = - s.snapGrid[s.snapIndex];\n            // Stop autoplay\n            if (s.params.autoplay && s.autoplaying) {\n                if (internal || !s.params.autoplayDisableOnInteraction) {\n                    s.pauseAutoplay(speed);\n                }\n                else {\n                    s.stopAutoplay();\n                }\n            }\n            // Update progress\n            s.updateProgress(translate);\n        \n            // Normalize slideIndex\n            if(s.params.normalizeSlideIndex){\n                for (var i = 0; i < s.slidesGrid.length; i++) {\n                    if (- Math.floor(translate * 100) >= Math.floor(s.slidesGrid[i] * 100)) {\n                        slideIndex = i;\n                    }\n                }\n            }\n        \n            // Directions locks\n            if (!s.params.allowSwipeToNext && translate < s.translate && translate < s.minTranslate()) {\n                return false;\n            }\n            if (!s.params.allowSwipeToPrev && translate > s.translate && translate > s.maxTranslate()) {\n                if ((s.activeIndex || 0) !== slideIndex ) return false;\n            }\n        \n            // Update Index\n            if (typeof speed === 'undefined') speed = s.params.speed;\n            s.previousIndex = s.activeIndex || 0;\n            s.activeIndex = slideIndex;\n            s.updateRealIndex();\n            if ((s.rtl && -translate === s.translate) || (!s.rtl && translate === s.translate)) {\n                // Update Height\n                if (s.params.autoHeight) {\n                    s.updateAutoHeight();\n                }\n                s.updateClasses();\n                if (s.params.effect !== 'slide') {\n                    s.setWrapperTranslate(translate);\n                }\n                return false;\n            }\n            s.updateClasses();\n            s.onTransitionStart(runCallbacks);\n        \n            if (speed === 0 || s.browser.lteIE9) {\n                s.setWrapperTranslate(translate);\n                s.setWrapperTransition(0);\n                s.onTransitionEnd(runCallbacks);\n            }\n            else {\n                s.setWrapperTranslate(translate);\n                s.setWrapperTransition(speed);\n                if (!s.animating) {\n                    s.animating = true;\n                    s.wrapper.transitionEnd(function () {\n                        if (!s) return;\n                        s.onTransitionEnd(runCallbacks);\n                    });\n                }\n        \n            }\n        \n            return true;\n        };\n        \n        s.onTransitionStart = function (runCallbacks) {\n            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n            if (s.params.autoHeight) {\n                s.updateAutoHeight();\n            }\n            if (s.lazy) s.lazy.onTransitionStart();\n            if (runCallbacks) {\n                s.emit('onTransitionStart', s);\n                if (s.activeIndex !== s.previousIndex) {\n                    s.emit('onSlideChangeStart', s);\n                    if (s.activeIndex > s.previousIndex) {\n                        s.emit('onSlideNextStart', s);\n                    }\n                    else {\n                        s.emit('onSlidePrevStart', s);\n                    }\n                }\n        \n            }\n        };\n        s.onTransitionEnd = function (runCallbacks) {\n            s.animating = false;\n            s.setWrapperTransition(0);\n            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n            if (s.lazy) s.lazy.onTransitionEnd();\n            if (runCallbacks) {\n                s.emit('onTransitionEnd', s);\n                if (s.activeIndex !== s.previousIndex) {\n                    s.emit('onSlideChangeEnd', s);\n                    if (s.activeIndex > s.previousIndex) {\n                        s.emit('onSlideNextEnd', s);\n                    }\n                    else {\n                        s.emit('onSlidePrevEnd', s);\n                    }\n                }\n            }\n            if (s.params.history && s.history) {\n                s.history.setHistory(s.params.history, s.activeIndex);\n            }\n            if (s.params.hashnav && s.hashnav) {\n                s.hashnav.setHash();\n            }\n        \n        };\n        s.slideNext = function (runCallbacks, speed, internal) {\n            if (s.params.loop) {\n                if (s.animating) return false;\n                s.fixLoop();\n                var clientLeft = s.container[0].clientLeft;\n                return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n            }\n            else return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n        };\n        s._slideNext = function (speed) {\n            return s.slideNext(true, speed, true);\n        };\n        s.slidePrev = function (runCallbacks, speed, internal) {\n            if (s.params.loop) {\n                if (s.animating) return false;\n                s.fixLoop();\n                var clientLeft = s.container[0].clientLeft;\n                return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n            }\n            else return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n        };\n        s._slidePrev = function (speed) {\n            return s.slidePrev(true, speed, true);\n        };\n        s.slideReset = function (runCallbacks, speed, internal) {\n            return s.slideTo(s.activeIndex, speed, runCallbacks);\n        };\n        \n        s.disableTouchControl = function () {\n            s.params.onlyExternal = true;\n            return true;\n        };\n        s.enableTouchControl = function () {\n            s.params.onlyExternal = false;\n            return true;\n        };\n        \n        /*=========================\n          Translate/transition helpers\n          ===========================*/\n        s.setWrapperTransition = function (duration, byController) {\n            s.wrapper.transition(duration);\n            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n                s.effects[s.params.effect].setTransition(duration);\n            }\n            if (s.params.parallax && s.parallax) {\n                s.parallax.setTransition(duration);\n            }\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.setTransition(duration);\n            }\n            if (s.params.control && s.controller) {\n                s.controller.setTransition(duration, byController);\n            }\n            s.emit('onSetTransition', s, duration);\n        };\n        s.setWrapperTranslate = function (translate, updateActiveIndex, byController) {\n            var x = 0, y = 0, z = 0;\n            if (s.isHorizontal()) {\n                x = s.rtl ? -translate : translate;\n            }\n            else {\n                y = translate;\n            }\n        \n            if (s.params.roundLengths) {\n                x = round(x);\n                y = round(y);\n            }\n        \n            if (!s.params.virtualTranslate) {\n                if (s.support.transforms3d) s.wrapper.transform('translate3d(' + x + 'px, ' + y + 'px, ' + z + 'px)');\n                else s.wrapper.transform('translate(' + x + 'px, ' + y + 'px)');\n            }\n        \n            s.translate = s.isHorizontal() ? x : y;\n        \n            // Check if we need to update progress\n            var progress;\n            var translatesDiff = s.maxTranslate() - s.minTranslate();\n            if (translatesDiff === 0) {\n                progress = 0;\n            }\n            else {\n                progress = (translate - s.minTranslate()) / (translatesDiff);\n            }\n            if (progress !== s.progress) {\n                s.updateProgress(translate);\n            }\n        \n            if (updateActiveIndex) s.updateActiveIndex();\n            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n                s.effects[s.params.effect].setTranslate(s.translate);\n            }\n            if (s.params.parallax && s.parallax) {\n                s.parallax.setTranslate(s.translate);\n            }\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.setTranslate(s.translate);\n            }\n            if (s.params.control && s.controller) {\n                s.controller.setTranslate(s.translate, byController);\n            }\n            s.emit('onSetTranslate', s, s.translate);\n        };\n        \n        s.getTranslate = function (el, axis) {\n            var matrix, curTransform, curStyle, transformMatrix;\n        \n            // automatic axis detection\n            if (typeof axis === 'undefined') {\n                axis = 'x';\n            }\n        \n            if (s.params.virtualTranslate) {\n                return s.rtl ? -s.translate : s.translate;\n            }\n        \n            curStyle = window.getComputedStyle(el, null);\n            if (window.WebKitCSSMatrix) {\n                curTransform = curStyle.transform || curStyle.webkitTransform;\n                if (curTransform.split(',').length > 6) {\n                    curTransform = curTransform.split(', ').map(function(a){\n                        return a.replace(',','.');\n                    }).join(', ');\n                }\n                // Some old versions of Webkit choke when 'none' is passed; pass\n                // empty string instead in this case\n                transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n            }\n            else {\n                transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform  || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n                matrix = transformMatrix.toString().split(',');\n            }\n        \n            if (axis === 'x') {\n                //Latest Chrome and webkits Fix\n                if (window.WebKitCSSMatrix)\n                    curTransform = transformMatrix.m41;\n                //Crazy IE10 Matrix\n                else if (matrix.length === 16)\n                    curTransform = parseFloat(matrix[12]);\n                //Normal Browsers\n                else\n                    curTransform = parseFloat(matrix[4]);\n            }\n            if (axis === 'y') {\n                //Latest Chrome and webkits Fix\n                if (window.WebKitCSSMatrix)\n                    curTransform = transformMatrix.m42;\n                //Crazy IE10 Matrix\n                else if (matrix.length === 16)\n                    curTransform = parseFloat(matrix[13]);\n                //Normal Browsers\n                else\n                    curTransform = parseFloat(matrix[5]);\n            }\n            if (s.rtl && curTransform) curTransform = -curTransform;\n            return curTransform || 0;\n        };\n        s.getWrapperTranslate = function (axis) {\n            if (typeof axis === 'undefined') {\n                axis = s.isHorizontal() ? 'x' : 'y';\n            }\n            return s.getTranslate(s.wrapper[0], axis);\n        };\n        \n        /*=========================\n          Observer\n          ===========================*/\n        s.observers = [];\n        function initObserver(target, options) {\n            options = options || {};\n            // create an observer instance\n            var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n            var observer = new ObserverFunc(function (mutations) {\n                mutations.forEach(function (mutation) {\n                    s.onResize(true);\n                    s.emit('onObserverUpdate', s, mutation);\n                });\n            });\n        \n            observer.observe(target, {\n                attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n                childList: typeof options.childList === 'undefined' ? true : options.childList,\n                characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n            });\n        \n            s.observers.push(observer);\n        }\n        s.initObservers = function () {\n            if (s.params.observeParents) {\n                var containerParents = s.container.parents();\n                for (var i = 0; i < containerParents.length; i++) {\n                    initObserver(containerParents[i]);\n                }\n            }\n        \n            // Observe container\n            initObserver(s.container[0], {childList: false});\n        \n            // Observe wrapper\n            initObserver(s.wrapper[0], {attributes: false});\n        };\n        s.disconnectObservers = function () {\n            for (var i = 0; i < s.observers.length; i++) {\n                s.observers[i].disconnect();\n            }\n            s.observers = [];\n        };\n        /*=========================\n          Loop\n          ===========================*/\n        // Create looped slides\n        s.createLoop = function () {\n            // Remove duplicated slides\n            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n        \n            var slides = s.wrapper.children('.' + s.params.slideClass);\n        \n            if(s.params.slidesPerView === 'auto' && !s.params.loopedSlides) s.params.loopedSlides = slides.length;\n        \n            s.loopedSlides = parseInt(s.params.loopedSlides || s.params.slidesPerView, 10);\n            s.loopedSlides = s.loopedSlides + s.params.loopAdditionalSlides;\n            if (s.loopedSlides > slides.length) {\n                s.loopedSlides = slides.length;\n            }\n        \n            var prependSlides = [], appendSlides = [], i;\n            slides.each(function (index, el) {\n                var slide = $(this);\n                if (index < s.loopedSlides) appendSlides.push(el);\n                if (index < slides.length && index >= slides.length - s.loopedSlides) prependSlides.push(el);\n                slide.attr('data-swiper-slide-index', index);\n            });\n            for (i = 0; i < appendSlides.length; i++) {\n                s.wrapper.append($(appendSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n            }\n            for (i = prependSlides.length - 1; i >= 0; i--) {\n                s.wrapper.prepend($(prependSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n            }\n        };\n        s.destroyLoop = function () {\n            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n            s.slides.removeAttr('data-swiper-slide-index');\n        };\n        s.reLoop = function (updatePosition) {\n            var oldIndex = s.activeIndex - s.loopedSlides;\n            s.destroyLoop();\n            s.createLoop();\n            s.updateSlidesSize();\n            if (updatePosition) {\n                s.slideTo(oldIndex + s.loopedSlides, 0, false);\n            }\n        \n        };\n        s.fixLoop = function () {\n            var newIndex;\n            //Fix For Negative Oversliding\n            if (s.activeIndex < s.loopedSlides) {\n                newIndex = s.slides.length - s.loopedSlides * 3 + s.activeIndex;\n                newIndex = newIndex + s.loopedSlides;\n                s.slideTo(newIndex, 0, false, true);\n            }\n            //Fix For Positive Oversliding\n            else if ((s.params.slidesPerView === 'auto' && s.activeIndex >= s.loopedSlides * 2) || (s.activeIndex > s.slides.length - s.params.slidesPerView * 2)) {\n                newIndex = -s.slides.length + s.activeIndex + s.loopedSlides;\n                newIndex = newIndex + s.loopedSlides;\n                s.slideTo(newIndex, 0, false, true);\n            }\n        };\n        /*=========================\n          Append/Prepend/Remove Slides\n          ===========================*/\n        s.appendSlide = function (slides) {\n            if (s.params.loop) {\n                s.destroyLoop();\n            }\n            if (typeof slides === 'object' && slides.length) {\n                for (var i = 0; i < slides.length; i++) {\n                    if (slides[i]) s.wrapper.append(slides[i]);\n                }\n            }\n            else {\n                s.wrapper.append(slides);\n            }\n            if (s.params.loop) {\n                s.createLoop();\n            }\n            if (!(s.params.observer && s.support.observer)) {\n                s.update(true);\n            }\n        };\n        s.prependSlide = function (slides) {\n            if (s.params.loop) {\n                s.destroyLoop();\n            }\n            var newActiveIndex = s.activeIndex + 1;\n            if (typeof slides === 'object' && slides.length) {\n                for (var i = 0; i < slides.length; i++) {\n                    if (slides[i]) s.wrapper.prepend(slides[i]);\n                }\n                newActiveIndex = s.activeIndex + slides.length;\n            }\n            else {\n                s.wrapper.prepend(slides);\n            }\n            if (s.params.loop) {\n                s.createLoop();\n            }\n            if (!(s.params.observer && s.support.observer)) {\n                s.update(true);\n            }\n            s.slideTo(newActiveIndex, 0, false);\n        };\n        s.removeSlide = function (slidesIndexes) {\n            if (s.params.loop) {\n                s.destroyLoop();\n                s.slides = s.wrapper.children('.' + s.params.slideClass);\n            }\n            var newActiveIndex = s.activeIndex,\n                indexToRemove;\n            if (typeof slidesIndexes === 'object' && slidesIndexes.length) {\n                for (var i = 0; i < slidesIndexes.length; i++) {\n                    indexToRemove = slidesIndexes[i];\n                    if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n                    if (indexToRemove < newActiveIndex) newActiveIndex--;\n                }\n                newActiveIndex = Math.max(newActiveIndex, 0);\n            }\n            else {\n                indexToRemove = slidesIndexes;\n                if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n                if (indexToRemove < newActiveIndex) newActiveIndex--;\n                newActiveIndex = Math.max(newActiveIndex, 0);\n            }\n        \n            if (s.params.loop) {\n                s.createLoop();\n            }\n        \n            if (!(s.params.observer && s.support.observer)) {\n                s.update(true);\n            }\n            if (s.params.loop) {\n                s.slideTo(newActiveIndex + s.loopedSlides, 0, false);\n            }\n            else {\n                s.slideTo(newActiveIndex, 0, false);\n            }\n        \n        };\n        s.removeAllSlides = function () {\n            var slidesIndexes = [];\n            for (var i = 0; i < s.slides.length; i++) {\n                slidesIndexes.push(i);\n            }\n            s.removeSlide(slidesIndexes);\n        };\n        \n\n        /*=========================\n          Effects\n          ===========================*/\n        s.effects = {\n            fade: {\n                setTranslate: function () {\n                    for (var i = 0; i < s.slides.length; i++) {\n                        var slide = s.slides.eq(i);\n                        var offset = slide[0].swiperSlideOffset;\n                        var tx = -offset;\n                        if (!s.params.virtualTranslate) tx = tx - s.translate;\n                        var ty = 0;\n                        if (!s.isHorizontal()) {\n                            ty = tx;\n                            tx = 0;\n                        }\n                        var slideOpacity = s.params.fade.crossFade ?\n                                Math.max(1 - Math.abs(slide[0].progress), 0) :\n                                1 + Math.min(Math.max(slide[0].progress, -1), 0);\n                        slide\n                            .css({\n                                opacity: slideOpacity\n                            })\n                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px)');\n        \n                    }\n        \n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration);\n                    if (s.params.virtualTranslate && duration !== 0) {\n                        var eventTriggered = false;\n                        s.slides.transitionEnd(function () {\n                            if (eventTriggered) return;\n                            if (!s) return;\n                            eventTriggered = true;\n                            s.animating = false;\n                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];\n                            for (var i = 0; i < triggerEvents.length; i++) {\n                                s.wrapper.trigger(triggerEvents[i]);\n                            }\n                        });\n                    }\n                }\n            },\n            flip: {\n                setTranslate: function () {\n                    for (var i = 0; i < s.slides.length; i++) {\n                        var slide = s.slides.eq(i);\n                        var progress = slide[0].progress;\n                        if (s.params.flip.limitRotation) {\n                            progress = Math.max(Math.min(slide[0].progress, 1), -1);\n                        }\n                        var offset = slide[0].swiperSlideOffset;\n                        var rotate = -180 * progress,\n                            rotateY = rotate,\n                            rotateX = 0,\n                            tx = -offset,\n                            ty = 0;\n                        if (!s.isHorizontal()) {\n                            ty = tx;\n                            tx = 0;\n                            rotateX = -rotateY;\n                            rotateY = 0;\n                        }\n                        else if (s.rtl) {\n                            rotateY = -rotateY;\n                        }\n        \n                        slide[0].style.zIndex = -Math.abs(Math.round(progress)) + s.slides.length;\n        \n                        if (s.params.flip.slideShadows) {\n                            //Set shadows\n                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n                            if (shadowBefore.length === 0) {\n                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '\"></div>');\n                                slide.append(shadowBefore);\n                            }\n                            if (shadowAfter.length === 0) {\n                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '\"></div>');\n                                slide.append(shadowAfter);\n                            }\n                            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n                            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n                        }\n        \n                        slide\n                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px) rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)');\n                    }\n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n                    if (s.params.virtualTranslate && duration !== 0) {\n                        var eventTriggered = false;\n                        s.slides.eq(s.activeIndex).transitionEnd(function () {\n                            if (eventTriggered) return;\n                            if (!s) return;\n                            if (!$(this).hasClass(s.params.slideActiveClass)) return;\n                            eventTriggered = true;\n                            s.animating = false;\n                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];\n                            for (var i = 0; i < triggerEvents.length; i++) {\n                                s.wrapper.trigger(triggerEvents[i]);\n                            }\n                        });\n                    }\n                }\n            },\n            cube: {\n                setTranslate: function () {\n                    var wrapperRotate = 0, cubeShadow;\n                    if (s.params.cube.shadow) {\n                        if (s.isHorizontal()) {\n                            cubeShadow = s.wrapper.find('.swiper-cube-shadow');\n                            if (cubeShadow.length === 0) {\n                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n                                s.wrapper.append(cubeShadow);\n                            }\n                            cubeShadow.css({height: s.width + 'px'});\n                        }\n                        else {\n                            cubeShadow = s.container.find('.swiper-cube-shadow');\n                            if (cubeShadow.length === 0) {\n                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n                                s.container.append(cubeShadow);\n                            }\n                        }\n                    }\n                    for (var i = 0; i < s.slides.length; i++) {\n                        var slide = s.slides.eq(i);\n                        var slideAngle = i * 90;\n                        var round = Math.floor(slideAngle / 360);\n                        if (s.rtl) {\n                            slideAngle = -slideAngle;\n                            round = Math.floor(-slideAngle / 360);\n                        }\n                        var progress = Math.max(Math.min(slide[0].progress, 1), -1);\n                        var tx = 0, ty = 0, tz = 0;\n                        if (i % 4 === 0) {\n                            tx = - round * 4 * s.size;\n                            tz = 0;\n                        }\n                        else if ((i - 1) % 4 === 0) {\n                            tx = 0;\n                            tz = - round * 4 * s.size;\n                        }\n                        else if ((i - 2) % 4 === 0) {\n                            tx = s.size + round * 4 * s.size;\n                            tz = s.size;\n                        }\n                        else if ((i - 3) % 4 === 0) {\n                            tx = - s.size;\n                            tz = 3 * s.size + s.size * 4 * round;\n                        }\n                        if (s.rtl) {\n                            tx = -tx;\n                        }\n        \n                        if (!s.isHorizontal()) {\n                            ty = tx;\n                            tx = 0;\n                        }\n        \n                        var transform = 'rotateX(' + (s.isHorizontal() ? 0 : -slideAngle) + 'deg) rotateY(' + (s.isHorizontal() ? slideAngle : 0) + 'deg) translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px)';\n                        if (progress <= 1 && progress > -1) {\n                            wrapperRotate = i * 90 + progress * 90;\n                            if (s.rtl) wrapperRotate = -i * 90 - progress * 90;\n                        }\n                        slide.transform(transform);\n                        if (s.params.cube.slideShadows) {\n                            //Set shadows\n                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n                            if (shadowBefore.length === 0) {\n                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '\"></div>');\n                                slide.append(shadowBefore);\n                            }\n                            if (shadowAfter.length === 0) {\n                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '\"></div>');\n                                slide.append(shadowAfter);\n                            }\n                            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n                            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n                        }\n                    }\n                    s.wrapper.css({\n                        '-webkit-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n                        '-moz-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n                        '-ms-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n                        'transform-origin': '50% 50% -' + (s.size / 2) + 'px'\n                    });\n        \n                    if (s.params.cube.shadow) {\n                        if (s.isHorizontal()) {\n                            cubeShadow.transform('translate3d(0px, ' + (s.width / 2 + s.params.cube.shadowOffset) + 'px, ' + (-s.width / 2) + 'px) rotateX(90deg) rotateZ(0deg) scale(' + (s.params.cube.shadowScale) + ')');\n                        }\n                        else {\n                            var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n                            var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n                            var scale1 = s.params.cube.shadowScale,\n                                scale2 = s.params.cube.shadowScale / multiplier,\n                                offset = s.params.cube.shadowOffset;\n                            cubeShadow.transform('scale3d(' + scale1 + ', 1, ' + scale2 + ') translate3d(0px, ' + (s.height / 2 + offset) + 'px, ' + (-s.height / 2 / scale2) + 'px) rotateX(-90deg)');\n                        }\n                    }\n                    var zFactor = (s.isSafari || s.isUiWebView) ? (-s.size / 2) : 0;\n                    s.wrapper.transform('translate3d(0px,0,' + zFactor + 'px) rotateX(' + (s.isHorizontal() ? 0 : wrapperRotate) + 'deg) rotateY(' + (s.isHorizontal() ? -wrapperRotate : 0) + 'deg)');\n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n                    if (s.params.cube.shadow && !s.isHorizontal()) {\n                        s.container.find('.swiper-cube-shadow').transition(duration);\n                    }\n                }\n            },\n            coverflow: {\n                setTranslate: function () {\n                    var transform = s.translate;\n                    var center = s.isHorizontal() ? -transform + s.width / 2 : -transform + s.height / 2;\n                    var rotate = s.isHorizontal() ? s.params.coverflow.rotate: -s.params.coverflow.rotate;\n                    var translate = s.params.coverflow.depth;\n                    //Each slide offset from center\n                    for (var i = 0, length = s.slides.length; i < length; i++) {\n                        var slide = s.slides.eq(i);\n                        var slideSize = s.slidesSizesGrid[i];\n                        var slideOffset = slide[0].swiperSlideOffset;\n                        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * s.params.coverflow.modifier;\n        \n                        var rotateY = s.isHorizontal() ? rotate * offsetMultiplier : 0;\n                        var rotateX = s.isHorizontal() ? 0 : rotate * offsetMultiplier;\n                        // var rotateZ = 0\n                        var translateZ = -translate * Math.abs(offsetMultiplier);\n        \n                        var translateY = s.isHorizontal() ? 0 : s.params.coverflow.stretch * (offsetMultiplier);\n                        var translateX = s.isHorizontal() ? s.params.coverflow.stretch * (offsetMultiplier) : 0;\n        \n                        //Fix for ultra small values\n                        if (Math.abs(translateX) < 0.001) translateX = 0;\n                        if (Math.abs(translateY) < 0.001) translateY = 0;\n                        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n                        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n                        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n        \n                        var slideTransform = 'translate3d(' + translateX + 'px,' + translateY + 'px,' + translateZ + 'px)  rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)';\n        \n                        slide.transform(slideTransform);\n                        slide[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n                        if (s.params.coverflow.slideShadows) {\n                            //Set shadows\n                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n                            if (shadowBefore.length === 0) {\n                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '\"></div>');\n                                slide.append(shadowBefore);\n                            }\n                            if (shadowAfter.length === 0) {\n                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '\"></div>');\n                                slide.append(shadowAfter);\n                            }\n                            if (shadowBefore.length) shadowBefore[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n                            if (shadowAfter.length) shadowAfter[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n                        }\n                    }\n        \n                    //Set correct perspective for IE10\n                    if (s.browser.ie) {\n                        var ws = s.wrapper[0].style;\n                        ws.perspectiveOrigin = center + 'px 50%';\n                    }\n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n                }\n            }\n        };\n\n        /*=========================\n          Images Lazy Loading\n          ===========================*/\n        s.lazy = {\n            initialImageLoaded: false,\n            loadImageInSlide: function (index, loadInDuplicate) {\n                if (typeof index === 'undefined') return;\n                if (typeof loadInDuplicate === 'undefined') loadInDuplicate = true;\n                if (s.slides.length === 0) return;\n        \n                var slide = s.slides.eq(index);\n                var img = slide.find('.' + s.params.lazyLoadingClass + ':not(.' + s.params.lazyStatusLoadedClass + '):not(.' + s.params.lazyStatusLoadingClass + ')');\n                if (slide.hasClass(s.params.lazyLoadingClass) && !slide.hasClass(s.params.lazyStatusLoadedClass) && !slide.hasClass(s.params.lazyStatusLoadingClass)) {\n                    img = img.add(slide[0]);\n                }\n                if (img.length === 0) return;\n        \n                img.each(function () {\n                    var _img = $(this);\n                    _img.addClass(s.params.lazyStatusLoadingClass);\n                    var background = _img.attr('data-background');\n                    var src = _img.attr('data-src'),\n                        srcset = _img.attr('data-srcset'),\n                        sizes = _img.attr('data-sizes');\n                    s.loadImage(_img[0], (src || background), srcset, sizes, false, function () {\n                        if (background) {\n                            _img.css('background-image', 'url(\"' + background + '\")');\n                            _img.removeAttr('data-background');\n                        }\n                        else {\n                            if (srcset) {\n                                _img.attr('srcset', srcset);\n                                _img.removeAttr('data-srcset');\n                            }\n                            if (sizes) {\n                                _img.attr('sizes', sizes);\n                                _img.removeAttr('data-sizes');\n                            }\n                            if (src) {\n                                _img.attr('src', src);\n                                _img.removeAttr('data-src');\n                            }\n        \n                        }\n        \n                        _img.addClass(s.params.lazyStatusLoadedClass).removeClass(s.params.lazyStatusLoadingClass);\n                        slide.find('.' + s.params.lazyPreloaderClass + ', .' + s.params.preloaderClass).remove();\n                        if (s.params.loop && loadInDuplicate) {\n                            var slideOriginalIndex = slide.attr('data-swiper-slide-index');\n                            if (slide.hasClass(s.params.slideDuplicateClass)) {\n                                var originalSlide = s.wrapper.children('[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]:not(.' + s.params.slideDuplicateClass + ')');\n                                s.lazy.loadImageInSlide(originalSlide.index(), false);\n                            }\n                            else {\n                                var duplicatedSlide = s.wrapper.children('.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]');\n                                s.lazy.loadImageInSlide(duplicatedSlide.index(), false);\n                            }\n                        }\n                        s.emit('onLazyImageReady', s, slide[0], _img[0]);\n                    });\n        \n                    s.emit('onLazyImageLoad', s, slide[0], _img[0]);\n                });\n        \n            },\n            load: function () {\n                var i;\n                var slidesPerView = s.params.slidesPerView;\n                if (slidesPerView === 'auto') {\n                    slidesPerView = 0;\n                }\n                if (!s.lazy.initialImageLoaded) s.lazy.initialImageLoaded = true;\n                if (s.params.watchSlidesVisibility) {\n                    s.wrapper.children('.' + s.params.slideVisibleClass).each(function () {\n                        s.lazy.loadImageInSlide($(this).index());\n                    });\n                }\n                else {\n                    if (slidesPerView > 1) {\n                        for (i = s.activeIndex; i < s.activeIndex + slidesPerView ; i++) {\n                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n                        }\n                    }\n                    else {\n                        s.lazy.loadImageInSlide(s.activeIndex);\n                    }\n                }\n                if (s.params.lazyLoadingInPrevNext) {\n                    if (slidesPerView > 1 || (s.params.lazyLoadingInPrevNextAmount && s.params.lazyLoadingInPrevNextAmount > 1)) {\n                        var amount = s.params.lazyLoadingInPrevNextAmount;\n                        var spv = slidesPerView;\n                        var maxIndex = Math.min(s.activeIndex + spv + Math.max(amount, spv), s.slides.length);\n                        var minIndex = Math.max(s.activeIndex - Math.max(spv, amount), 0);\n                        // Next Slides\n                        for (i = s.activeIndex + slidesPerView; i < maxIndex; i++) {\n                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n                        }\n                        // Prev Slides\n                        for (i = minIndex; i < s.activeIndex ; i++) {\n                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n                        }\n                    }\n                    else {\n                        var nextSlide = s.wrapper.children('.' + s.params.slideNextClass);\n                        if (nextSlide.length > 0) s.lazy.loadImageInSlide(nextSlide.index());\n        \n                        var prevSlide = s.wrapper.children('.' + s.params.slidePrevClass);\n                        if (prevSlide.length > 0) s.lazy.loadImageInSlide(prevSlide.index());\n                    }\n                }\n            },\n            onTransitionStart: function () {\n                if (s.params.lazyLoading) {\n                    if (s.params.lazyLoadingOnTransitionStart || (!s.params.lazyLoadingOnTransitionStart && !s.lazy.initialImageLoaded)) {\n                        s.lazy.load();\n                    }\n                }\n            },\n            onTransitionEnd: function () {\n                if (s.params.lazyLoading && !s.params.lazyLoadingOnTransitionStart) {\n                    s.lazy.load();\n                }\n            }\n        };\n        \n\n        /*=========================\n          Scrollbar\n          ===========================*/\n        s.scrollbar = {\n            isTouched: false,\n            setDragPosition: function (e) {\n                var sb = s.scrollbar;\n                var x = 0, y = 0;\n                var translate;\n                var pointerPosition = s.isHorizontal() ?\n                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX) :\n                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY) ;\n                var position = (pointerPosition) - sb.track.offset()[s.isHorizontal() ? 'left' : 'top'] - sb.dragSize / 2;\n                var positionMin = -s.minTranslate() * sb.moveDivider;\n                var positionMax = -s.maxTranslate() * sb.moveDivider;\n                if (position < positionMin) {\n                    position = positionMin;\n                }\n                else if (position > positionMax) {\n                    position = positionMax;\n                }\n                position = -position / sb.moveDivider;\n                s.updateProgress(position);\n                s.setWrapperTranslate(position, true);\n            },\n            dragStart: function (e) {\n                var sb = s.scrollbar;\n                sb.isTouched = true;\n                e.preventDefault();\n                e.stopPropagation();\n        \n                sb.setDragPosition(e);\n                clearTimeout(sb.dragTimeout);\n        \n                sb.track.transition(0);\n                if (s.params.scrollbarHide) {\n                    sb.track.css('opacity', 1);\n                }\n                s.wrapper.transition(100);\n                sb.drag.transition(100);\n                s.emit('onScrollbarDragStart', s);\n            },\n            dragMove: function (e) {\n                var sb = s.scrollbar;\n                if (!sb.isTouched) return;\n                if (e.preventDefault) e.preventDefault();\n                else e.returnValue = false;\n                sb.setDragPosition(e);\n                s.wrapper.transition(0);\n                sb.track.transition(0);\n                sb.drag.transition(0);\n                s.emit('onScrollbarDragMove', s);\n            },\n            dragEnd: function (e) {\n                var sb = s.scrollbar;\n                if (!sb.isTouched) return;\n                sb.isTouched = false;\n                if (s.params.scrollbarHide) {\n                    clearTimeout(sb.dragTimeout);\n                    sb.dragTimeout = setTimeout(function () {\n                        sb.track.css('opacity', 0);\n                        sb.track.transition(400);\n                    }, 1000);\n        \n                }\n                s.emit('onScrollbarDragEnd', s);\n                if (s.params.scrollbarSnapOnRelease) {\n                    s.slideReset();\n                }\n            },\n            draggableEvents: (function () {\n                if ((s.params.simulateTouch === false && !s.support.touch)) return s.touchEventsDesktop;\n                else return s.touchEvents;\n            })(),\n            enableDraggable: function () {\n                var sb = s.scrollbar;\n                var target = s.support.touch ? sb.track : document;\n                $(sb.track).on(sb.draggableEvents.start, sb.dragStart);\n                $(target).on(sb.draggableEvents.move, sb.dragMove);\n                $(target).on(sb.draggableEvents.end, sb.dragEnd);\n            },\n            disableDraggable: function () {\n                var sb = s.scrollbar;\n                var target = s.support.touch ? sb.track : document;\n                $(sb.track).off(sb.draggableEvents.start, sb.dragStart);\n                $(target).off(sb.draggableEvents.move, sb.dragMove);\n                $(target).off(sb.draggableEvents.end, sb.dragEnd);\n            },\n            set: function () {\n                if (!s.params.scrollbar) return;\n                var sb = s.scrollbar;\n                sb.track = $(s.params.scrollbar);\n                if (s.params.uniqueNavElements && typeof s.params.scrollbar === 'string' && sb.track.length > 1 && s.container.find(s.params.scrollbar).length === 1) {\n                    sb.track = s.container.find(s.params.scrollbar);\n                }\n                sb.drag = sb.track.find('.swiper-scrollbar-drag');\n                if (sb.drag.length === 0) {\n                    sb.drag = $('<div class=\"swiper-scrollbar-drag\"></div>');\n                    sb.track.append(sb.drag);\n                }\n                sb.drag[0].style.width = '';\n                sb.drag[0].style.height = '';\n                sb.trackSize = s.isHorizontal() ? sb.track[0].offsetWidth : sb.track[0].offsetHeight;\n        \n                sb.divider = s.size / s.virtualSize;\n                sb.moveDivider = sb.divider * (sb.trackSize / s.size);\n                sb.dragSize = sb.trackSize * sb.divider;\n        \n                if (s.isHorizontal()) {\n                    sb.drag[0].style.width = sb.dragSize + 'px';\n                }\n                else {\n                    sb.drag[0].style.height = sb.dragSize + 'px';\n                }\n        \n                if (sb.divider >= 1) {\n                    sb.track[0].style.display = 'none';\n                }\n                else {\n                    sb.track[0].style.display = '';\n                }\n                if (s.params.scrollbarHide) {\n                    sb.track[0].style.opacity = 0;\n                }\n            },\n            setTranslate: function () {\n                if (!s.params.scrollbar) return;\n                var diff;\n                var sb = s.scrollbar;\n                var translate = s.translate || 0;\n                var newPos;\n        \n                var newSize = sb.dragSize;\n                newPos = (sb.trackSize - sb.dragSize) * s.progress;\n                if (s.rtl && s.isHorizontal()) {\n                    newPos = -newPos;\n                    if (newPos > 0) {\n                        newSize = sb.dragSize - newPos;\n                        newPos = 0;\n                    }\n                    else if (-newPos + sb.dragSize > sb.trackSize) {\n                        newSize = sb.trackSize + newPos;\n                    }\n                }\n                else {\n                    if (newPos < 0) {\n                        newSize = sb.dragSize + newPos;\n                        newPos = 0;\n                    }\n                    else if (newPos + sb.dragSize > sb.trackSize) {\n                        newSize = sb.trackSize - newPos;\n                    }\n                }\n                if (s.isHorizontal()) {\n                    if (s.support.transforms3d) {\n                        sb.drag.transform('translate3d(' + (newPos) + 'px, 0, 0)');\n                    }\n                    else {\n                        sb.drag.transform('translateX(' + (newPos) + 'px)');\n                    }\n                    sb.drag[0].style.width = newSize + 'px';\n                }\n                else {\n                    if (s.support.transforms3d) {\n                        sb.drag.transform('translate3d(0px, ' + (newPos) + 'px, 0)');\n                    }\n                    else {\n                        sb.drag.transform('translateY(' + (newPos) + 'px)');\n                    }\n                    sb.drag[0].style.height = newSize + 'px';\n                }\n                if (s.params.scrollbarHide) {\n                    clearTimeout(sb.timeout);\n                    sb.track[0].style.opacity = 1;\n                    sb.timeout = setTimeout(function () {\n                        sb.track[0].style.opacity = 0;\n                        sb.track.transition(400);\n                    }, 1000);\n                }\n            },\n            setTransition: function (duration) {\n                if (!s.params.scrollbar) return;\n                s.scrollbar.drag.transition(duration);\n            }\n        };\n\n        /*=========================\n          Controller\n          ===========================*/\n        s.controller = {\n            LinearSpline: function (x, y) {\n                this.x = x;\n                this.y = y;\n                this.lastIndex = x.length - 1;\n                // Given an x value (x2), return the expected y2 value:\n                // (x1,y1) is the known point before given value,\n                // (x3,y3) is the known point after given value.\n                var i1, i3;\n                var l = this.x.length;\n        \n                this.interpolate = function (x2) {\n                    if (!x2) return 0;\n        \n                    // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n                    i3 = binarySearch(this.x, x2);\n                    i1 = i3 - 1;\n        \n                    // We have our indexes i1 & i3, so we can calculate already:\n                    // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n                    return ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1]) + this.y[i1];\n                };\n        \n                var binarySearch = (function() {\n                    var maxIndex, minIndex, guess;\n                    return function(array, val) {\n                        minIndex = -1;\n                        maxIndex = array.length;\n                        while (maxIndex - minIndex > 1)\n                            if (array[guess = maxIndex + minIndex >> 1] <= val) {\n                                minIndex = guess;\n                            } else {\n                                maxIndex = guess;\n                            }\n                        return maxIndex;\n                    };\n                })();\n            },\n            //xxx: for now i will just save one spline function to to\n            getInterpolateFunction: function(c){\n                if(!s.controller.spline) s.controller.spline = s.params.loop ?\n                    new s.controller.LinearSpline(s.slidesGrid, c.slidesGrid) :\n                    new s.controller.LinearSpline(s.snapGrid, c.snapGrid);\n            },\n            setTranslate: function (translate, byController) {\n               var controlled = s.params.control;\n               var multiplier, controlledTranslate;\n               function setControlledTranslate(c) {\n                    // this will create an Interpolate function based on the snapGrids\n                    // x is the Grid of the scrolled scroller and y will be the controlled scroller\n                    // it makes sense to create this only once and recall it for the interpolation\n                    // the function does a lot of value caching for performance\n                    translate = c.rtl && c.params.direction === 'horizontal' ? -s.translate : s.translate;\n                    if (s.params.controlBy === 'slide') {\n                        s.controller.getInterpolateFunction(c);\n                        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n                        // but it did not work out\n                        controlledTranslate = -s.controller.spline.interpolate(-translate);\n                    }\n        \n                    if(!controlledTranslate || s.params.controlBy === 'container'){\n                        multiplier = (c.maxTranslate() - c.minTranslate()) / (s.maxTranslate() - s.minTranslate());\n                        controlledTranslate = (translate - s.minTranslate()) * multiplier + c.minTranslate();\n                    }\n        \n                    if (s.params.controlInverse) {\n                        controlledTranslate = c.maxTranslate() - controlledTranslate;\n                    }\n                    c.updateProgress(controlledTranslate);\n                    c.setWrapperTranslate(controlledTranslate, false, s);\n                    c.updateActiveIndex();\n               }\n               if (s.isArray(controlled)) {\n                   for (var i = 0; i < controlled.length; i++) {\n                       if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n                           setControlledTranslate(controlled[i]);\n                       }\n                   }\n               }\n               else if (controlled instanceof Swiper && byController !== controlled) {\n        \n                   setControlledTranslate(controlled);\n               }\n            },\n            setTransition: function (duration, byController) {\n                var controlled = s.params.control;\n                var i;\n                function setControlledTransition(c) {\n                    c.setWrapperTransition(duration, s);\n                    if (duration !== 0) {\n                        c.onTransitionStart();\n                        c.wrapper.transitionEnd(function(){\n                            if (!controlled) return;\n                            if (c.params.loop && s.params.controlBy === 'slide') {\n                                c.fixLoop();\n                            }\n                            c.onTransitionEnd();\n        \n                        });\n                    }\n                }\n                if (s.isArray(controlled)) {\n                    for (i = 0; i < controlled.length; i++) {\n                        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n                            setControlledTransition(controlled[i]);\n                        }\n                    }\n                }\n                else if (controlled instanceof Swiper && byController !== controlled) {\n                    setControlledTransition(controlled);\n                }\n            }\n        };\n\n        /*=========================\n          Hash Navigation\n          ===========================*/\n        s.hashnav = {\n            onHashCange: function (e, a) {\n                var newHash = document.location.hash.replace('#', '');\n                var activeSlideHash = s.slides.eq(s.activeIndex).attr('data-hash');\n                if (newHash !== activeSlideHash) {\n                    s.slideTo(s.wrapper.children('.' + s.params.slideClass + '[data-hash=\"' + (newHash) + '\"]').index());\n                }\n            },\n            attachEvents: function (detach) {\n                var action = detach ? 'off' : 'on';\n                $(window)[action]('hashchange', s.hashnav.onHashCange);\n            },\n            setHash: function () {\n                if (!s.hashnav.initialized || !s.params.hashnav) return;\n                if (s.params.replaceState && window.history && window.history.replaceState) {\n                    window.history.replaceState(null, null, ('#' + s.slides.eq(s.activeIndex).attr('data-hash') || ''));\n                } else {\n                    var slide = s.slides.eq(s.activeIndex);\n                    var hash = slide.attr('data-hash') || slide.attr('data-history');\n                    document.location.hash = hash || '';\n                }\n            },\n            init: function () {\n                if (!s.params.hashnav || s.params.history) return;\n                s.hashnav.initialized = true;\n                var hash = document.location.hash.replace('#', '');\n                if (hash) {\n                    var speed = 0;\n                    for (var i = 0, length = s.slides.length; i < length; i++) {\n                        var slide = s.slides.eq(i);\n                        var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n                        if (slideHash === hash && !slide.hasClass(s.params.slideDuplicateClass)) {\n                            var index = slide.index();\n                            s.slideTo(index, speed, s.params.runCallbacksOnInit, true);\n                        }\n                    }\n                }\n                if (s.params.hashnavWatchState) s.hashnav.attachEvents();\n            },\n            destroy: function () {\n                if (s.params.hashnavWatchState) s.hashnav.attachEvents(true);\n            }\n        };\n\n        /*=========================\n          History Api with fallback to Hashnav\n          ===========================*/\n        s.history = {\n            init: function () {\n                if (!s.params.history) return;\n                if (!window.history || !window.history.pushState) {\n                    s.params.history = false;\n                    s.params.hashnav = true;\n                    return;\n                }\n                s.history.initialized = true;\n                this.paths = this.getPathValues();\n                if (!this.paths.key && !this.paths.value) return;\n                this.scrollToSlide(0, this.paths.value, s.params.runCallbacksOnInit);\n                if (!s.params.replaceState) {\n                    window.addEventListener('popstate', this.setHistoryPopState);\n                }\n            },\n            setHistoryPopState: function() {\n                s.history.paths = s.history.getPathValues();\n                s.history.scrollToSlide(s.params.speed, s.history.paths.value, false);\n            },\n            getPathValues: function() {\n                var pathArray = window.location.pathname.slice(1).split('/');\n                var total = pathArray.length;\n                var key = pathArray[total - 2];\n                var value = pathArray[total - 1];\n                return { key: key, value: value };\n            },\n            setHistory: function (key, index) {\n                if (!s.history.initialized || !s.params.history) return;\n                var slide = s.slides.eq(index);\n                var value = this.slugify(slide.attr('data-history'));\n                if (!window.location.pathname.includes(key)) {\n                    value = key + '/' + value;\n                }\n                if (s.params.replaceState) {\n                    window.history.replaceState(null, null, value);\n                } else {\n                    window.history.pushState(null, null, value);\n                }\n            },\n            slugify: function(text) {\n                return text.toString().toLowerCase()\n                    .replace(/\\s+/g, '-')\n                    .replace(/[^\\w\\-]+/g, '')\n                    .replace(/\\-\\-+/g, '-')\n                    .replace(/^-+/, '')\n                    .replace(/-+$/, '');\n            },\n            scrollToSlide: function(speed, value, runCallbacks) {\n                if (value) {\n                    for (var i = 0, length = s.slides.length; i < length; i++) {\n                        var slide = s.slides.eq(i);\n                        var slideHistory = this.slugify(slide.attr('data-history'));\n                        if (slideHistory === value && !slide.hasClass(s.params.slideDuplicateClass)) {\n                            var index = slide.index();\n                            s.slideTo(index, speed, runCallbacks);\n                        }\n                    }\n                } else {\n                    s.slideTo(0, speed, runCallbacks);\n                }\n            }\n        };\n\n        /*=========================\n          Keyboard Control\n          ===========================*/\n        function handleKeyboard(e) {\n            if (e.originalEvent) e = e.originalEvent; //jquery fix\n            var kc = e.keyCode || e.charCode;\n            // Directions locks\n            if (!s.params.allowSwipeToNext && (s.isHorizontal() && kc === 39 || !s.isHorizontal() && kc === 40)) {\n                return false;\n            }\n            if (!s.params.allowSwipeToPrev && (s.isHorizontal() && kc === 37 || !s.isHorizontal() && kc === 38)) {\n                return false;\n            }\n            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n                return;\n            }\n            if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n                return;\n            }\n            if (kc === 37 || kc === 39 || kc === 38 || kc === 40) {\n                var inView = false;\n                //Check that swiper should be inside of visible area of window\n                if (s.container.parents('.' + s.params.slideClass).length > 0 && s.container.parents('.' + s.params.slideActiveClass).length === 0) {\n                    return;\n                }\n                var windowScroll = {\n                    left: window.pageXOffset,\n                    top: window.pageYOffset\n                };\n                var windowWidth = window.innerWidth;\n                var windowHeight = window.innerHeight;\n                var swiperOffset = s.container.offset();\n                if (s.rtl) swiperOffset.left = swiperOffset.left - s.container[0].scrollLeft;\n                var swiperCoord = [\n                    [swiperOffset.left, swiperOffset.top],\n                    [swiperOffset.left + s.width, swiperOffset.top],\n                    [swiperOffset.left, swiperOffset.top + s.height],\n                    [swiperOffset.left + s.width, swiperOffset.top + s.height]\n                ];\n                for (var i = 0; i < swiperCoord.length; i++) {\n                    var point = swiperCoord[i];\n                    if (\n                        point[0] >= windowScroll.left && point[0] <= windowScroll.left + windowWidth &&\n                        point[1] >= windowScroll.top && point[1] <= windowScroll.top + windowHeight\n                    ) {\n                        inView = true;\n                    }\n        \n                }\n                if (!inView) return;\n            }\n            if (s.isHorizontal()) {\n                if (kc === 37 || kc === 39) {\n                    if (e.preventDefault) e.preventDefault();\n                    else e.returnValue = false;\n                }\n                if ((kc === 39 && !s.rtl) || (kc === 37 && s.rtl)) s.slideNext();\n                if ((kc === 37 && !s.rtl) || (kc === 39 && s.rtl)) s.slidePrev();\n            }\n            else {\n                if (kc === 38 || kc === 40) {\n                    if (e.preventDefault) e.preventDefault();\n                    else e.returnValue = false;\n                }\n                if (kc === 40) s.slideNext();\n                if (kc === 38) s.slidePrev();\n            }\n        }\n        s.disableKeyboardControl = function () {\n            s.params.keyboardControl = false;\n            $(document).off('keydown', handleKeyboard);\n        };\n        s.enableKeyboardControl = function () {\n            s.params.keyboardControl = true;\n            $(document).on('keydown', handleKeyboard);\n        };\n        \n\n        /*=========================\n          Mousewheel Control\n          ===========================*/\n        s.mousewheel = {\n            event: false,\n            lastScrollTime: (new window.Date()).getTime()\n        };\n        if (s.params.mousewheelControl) {\n            /**\n             * The best combination if you prefer spinX + spinY normalization.  It favors\n             * the older DOMMouseScroll for Firefox, as FF does not include wheelDelta with\n             * 'wheel' event, making spin speed determination impossible.\n             */\n            s.mousewheel.event = (navigator.userAgent.indexOf('firefox') > -1) ?\n                'DOMMouseScroll' :\n                isEventSupported() ?\n                    'wheel' : 'mousewheel';\n        }\n        \n        function isEventSupported() {\n            var eventName = 'onwheel';\n            var isSupported = eventName in document;\n        \n            if (!isSupported) {\n                var element = document.createElement('div');\n                element.setAttribute(eventName, 'return;');\n                isSupported = typeof element[eventName] === 'function';\n            }\n        \n            if (!isSupported &&\n                document.implementation &&\n                document.implementation.hasFeature &&\n                    // always returns true in newer browsers as per the standard.\n                    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n                document.implementation.hasFeature('', '') !== true ) {\n                // This is the only way to test support for the `wheel` event in IE9+.\n                isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n            }\n        \n            return isSupported;\n        }\n        \n        function handleMousewheel(e) {\n            if (e.originalEvent) e = e.originalEvent; //jquery fix\n            var delta = 0;\n            var rtlFactor = s.rtl ? -1 : 1;\n        \n            var data = normalizeWheel( e );\n        \n            if (s.params.mousewheelForceToAxis) {\n                if (s.isHorizontal()) {\n                    if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n                    else return;\n                }\n                else {\n                    if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n                    else return;\n                }\n            }\n            else {\n                delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? - data.pixelX * rtlFactor : - data.pixelY;\n            }\n        \n            if (delta === 0) return;\n        \n            if (s.params.mousewheelInvert) delta = -delta;\n        \n            if (!s.params.freeMode) {\n                if ((new window.Date()).getTime() - s.mousewheel.lastScrollTime > 60) {\n                    if (delta < 0) {\n                        if ((!s.isEnd || s.params.loop) && !s.animating) {\n                            s.slideNext();\n                            s.emit('onScroll', s, e);\n                        }\n                        else if (s.params.mousewheelReleaseOnEdges) return true;\n                    }\n                    else {\n                        if ((!s.isBeginning || s.params.loop) && !s.animating) {\n                            s.slidePrev();\n                            s.emit('onScroll', s, e);\n                        }\n                        else if (s.params.mousewheelReleaseOnEdges) return true;\n                    }\n                }\n                s.mousewheel.lastScrollTime = (new window.Date()).getTime();\n        \n            }\n            else {\n                //Freemode or scrollContainer:\n                var position = s.getWrapperTranslate() + delta * s.params.mousewheelSensitivity;\n                var wasBeginning = s.isBeginning,\n                    wasEnd = s.isEnd;\n        \n                if (position >= s.minTranslate()) position = s.minTranslate();\n                if (position <= s.maxTranslate()) position = s.maxTranslate();\n        \n                s.setWrapperTransition(0);\n                s.setWrapperTranslate(position);\n                s.updateProgress();\n                s.updateActiveIndex();\n        \n                if (!wasBeginning && s.isBeginning || !wasEnd && s.isEnd) {\n                    s.updateClasses();\n                }\n        \n                if (s.params.freeModeSticky) {\n                    clearTimeout(s.mousewheel.timeout);\n                    s.mousewheel.timeout = setTimeout(function () {\n                        s.slideReset();\n                    }, 300);\n                }\n                else {\n                    if (s.params.lazyLoading && s.lazy) {\n                        s.lazy.load();\n                    }\n                }\n                // Emit event\n                s.emit('onScroll', s, e);\n        \n                // Stop autoplay\n                if (s.params.autoplay && s.params.autoplayDisableOnInteraction) s.stopAutoplay();\n        \n                // Return page scroll on edge positions\n                if (position === 0 || position === s.maxTranslate()) return;\n            }\n        \n            if (e.preventDefault) e.preventDefault();\n            else e.returnValue = false;\n            return false;\n        }\n        s.disableMousewheelControl = function () {\n            if (!s.mousewheel.event) return false;\n            var target = s.container;\n            if (s.params.mousewheelEventsTarged !== 'container') {\n                target = $(s.params.mousewheelEventsTarged);\n            }\n            target.off(s.mousewheel.event, handleMousewheel);\n            return true;\n        };\n        \n        s.enableMousewheelControl = function () {\n            if (!s.mousewheel.event) return false;\n            var target = s.container;\n            if (s.params.mousewheelEventsTarged !== 'container') {\n                target = $(s.params.mousewheelEventsTarged);\n            }\n            target.on(s.mousewheel.event, handleMousewheel);\n            return true;\n        };\n        \n        /**\n         * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n         * complicated, thus this doc is long and (hopefully) detailed enough to answer\n         * your questions.\n         *\n         * If you need to react to the mouse wheel in a predictable way, this code is\n         * like your bestest friend. * hugs *\n         *\n         * As of today, there are 4 DOM event types you can listen to:\n         *\n         *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n         *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n         *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n         *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n         *\n         * So what to do?  The is the best:\n         *\n         *   normalizeWheel.getEventType();\n         *\n         * In your event callback, use this code to get sane interpretation of the\n         * deltas.  This code will return an object with properties:\n         *\n         *   spinX   -- normalized spin speed (use for zoom) - x plane\n         *   spinY   -- \" - y plane\n         *   pixelX  -- normalized distance (to pixels) - x plane\n         *   pixelY  -- \" - y plane\n         *\n         * Wheel values are provided by the browser assuming you are using the wheel to\n         * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n         * significantly on different platforms and browsers, forgetting that you can\n         * scroll at different speeds.  Some devices (like trackpads) emit more events\n         * at smaller increments with fine granularity, and some emit massive jumps with\n         * linear speed or acceleration.\n         *\n         * This code does its best to normalize the deltas for you:\n         *\n         *   - spin is trying to normalize how far the wheel was spun (or trackpad\n         *     dragged).  This is super useful for zoom support where you want to\n         *     throw away the chunky scroll steps on the PC and make those equal to\n         *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n         *     resolve a single slow step on a wheel to 1.\n         *\n         *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n         *     get the crazy differences between browsers, but at least it'll be in\n         *     pixels!\n         *\n         *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n         *     should translate to positive value zooming IN, negative zooming OUT.\n         *     This matches the newer 'wheel' event.\n         *\n         * Why are there spinX, spinY (or pixels)?\n         *\n         *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n         *     with a mouse.  It results in side-scrolling in the browser by default.\n         *\n         *   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n         *\n         *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n         *     probably is by browsers in conjunction with fancy 3D controllers .. but\n         *     you know.\n         *\n         * Implementation info:\n         *\n         * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n         * average mouse:\n         *\n         *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n         *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n         *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n         *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n         *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n         *\n         * On the trackpad:\n         *\n         *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n         *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n         *\n         * On other/older browsers.. it's more complicated as there can be multiple and\n         * also missing delta values.\n         *\n         * The 'wheel' event is more standard:\n         *\n         * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n         *\n         * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n         * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n         * backward compatibility with older events.  Those other values help us\n         * better normalize spin speed.  Example of what the browsers provide:\n         *\n         *                          | event.wheelDelta | event.detail\n         *        ------------------+------------------+--------------\n         *          Safari v5/OS X  |       -120       |       0\n         *          Safari v5/Win7  |       -120       |       0\n         *         Chrome v17/OS X  |       -120       |       0\n         *         Chrome v17/Win7  |       -120       |       0\n         *                IE9/Win7  |       -120       |   undefined\n         *         Firefox v4/OS X  |     undefined    |       1\n         *         Firefox v4/Win7  |     undefined    |       3\n         *\n         */\n        function normalizeWheel( /*object*/ event ) /*object*/ {\n            // Reasonable defaults\n            var PIXEL_STEP = 10;\n            var LINE_HEIGHT = 40;\n            var PAGE_HEIGHT = 800;\n        \n            var sX = 0, sY = 0,       // spinX, spinY\n                pX = 0, pY = 0;       // pixelX, pixelY\n        \n            // Legacy\n            if( 'detail' in event ) {\n                sY = event.detail;\n            }\n            if( 'wheelDelta' in event ) {\n                sY = -event.wheelDelta / 120;\n            }\n            if( 'wheelDeltaY' in event ) {\n                sY = -event.wheelDeltaY / 120;\n            }\n            if( 'wheelDeltaX' in event ) {\n                sX = -event.wheelDeltaX / 120;\n            }\n        \n            // side scrolling on FF with DOMMouseScroll\n            if( 'axis' in event && event.axis === event.HORIZONTAL_AXIS ) {\n                sX = sY;\n                sY = 0;\n            }\n        \n            pX = sX * PIXEL_STEP;\n            pY = sY * PIXEL_STEP;\n        \n            if( 'deltaY' in event ) {\n                pY = event.deltaY;\n            }\n            if( 'deltaX' in event ) {\n                pX = event.deltaX;\n            }\n        \n            if( (pX || pY) && event.deltaMode ) {\n                if( event.deltaMode === 1 ) {          // delta in LINE units\n                    pX *= LINE_HEIGHT;\n                    pY *= LINE_HEIGHT;\n                } else {                             // delta in PAGE units\n                    pX *= PAGE_HEIGHT;\n                    pY *= PAGE_HEIGHT;\n                }\n            }\n        \n            // Fall-back if spin cannot be determined\n            if( pX && !sX ) {\n                sX = (pX < 1) ? -1 : 1;\n            }\n            if( pY && !sY ) {\n                sY = (pY < 1) ? -1 : 1;\n            }\n        \n            return {\n                spinX: sX,\n                spinY: sY,\n                pixelX: pX,\n                pixelY: pY\n            };\n        }\n\n        /*=========================\n          Parallax\n          ===========================*/\n        function setParallaxTransform(el, progress) {\n            el = $(el);\n            var p, pX, pY;\n            var rtlFactor = s.rtl ? -1 : 1;\n        \n            p = el.attr('data-swiper-parallax') || '0';\n            pX = el.attr('data-swiper-parallax-x');\n            pY = el.attr('data-swiper-parallax-y');\n            if (pX || pY) {\n                pX = pX || '0';\n                pY = pY || '0';\n            }\n            else {\n                if (s.isHorizontal()) {\n                    pX = p;\n                    pY = '0';\n                }\n                else {\n                    pY = p;\n                    pX = '0';\n                }\n            }\n        \n            if ((pX).indexOf('%') >= 0) {\n                pX = parseInt(pX, 10) * progress * rtlFactor + '%';\n            }\n            else {\n                pX = pX * progress * rtlFactor + 'px' ;\n            }\n            if ((pY).indexOf('%') >= 0) {\n                pY = parseInt(pY, 10) * progress + '%';\n            }\n            else {\n                pY = pY * progress + 'px' ;\n            }\n        \n            el.transform('translate3d(' + pX + ', ' + pY + ',0px)');\n        }\n        s.parallax = {\n            setTranslate: function () {\n                s.container.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n                    setParallaxTransform(this, s.progress);\n        \n                });\n                s.slides.each(function () {\n                    var slide = $(this);\n                    slide.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function () {\n                        var progress = Math.min(Math.max(slide[0].progress, -1), 1);\n                        setParallaxTransform(this, progress);\n                    });\n                });\n            },\n            setTransition: function (duration) {\n                if (typeof duration === 'undefined') duration = s.params.speed;\n                s.container.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n                    var el = $(this);\n                    var parallaxDuration = parseInt(el.attr('data-swiper-parallax-duration'), 10) || duration;\n                    if (duration === 0) parallaxDuration = 0;\n                    el.transition(parallaxDuration);\n                });\n            }\n        };\n        \n\n        /*=========================\n          Zoom\n          ===========================*/\n        s.zoom = {\n            // \"Global\" Props\n            scale: 1,\n            currentScale: 1,\n            isScaling: false,\n            gesture: {\n                slide: undefined,\n                slideWidth: undefined,\n                slideHeight: undefined,\n                image: undefined,\n                imageWrap: undefined,\n                zoomMax: s.params.zoomMax\n            },\n            image: {\n                isTouched: undefined,\n                isMoved: undefined,\n                currentX: undefined,\n                currentY: undefined,\n                minX: undefined,\n                minY: undefined,\n                maxX: undefined,\n                maxY: undefined,\n                width: undefined,\n                height: undefined,\n                startX: undefined,\n                startY: undefined,\n                touchesStart: {},\n                touchesCurrent: {}\n            },\n            velocity: {\n                x: undefined,\n                y: undefined,\n                prevPositionX: undefined,\n                prevPositionY: undefined,\n                prevTime: undefined\n            },\n            // Calc Scale From Multi-touches\n            getDistanceBetweenTouches: function (e) {\n                if (e.targetTouches.length < 2) return 1;\n                var x1 = e.targetTouches[0].pageX,\n                    y1 = e.targetTouches[0].pageY,\n                    x2 = e.targetTouches[1].pageX,\n                    y2 = e.targetTouches[1].pageY;\n                var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n                return distance;\n            },\n            // Events\n            onGestureStart: function (e) {\n                var z = s.zoom;\n                if (!s.support.gestures) {\n                    if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n                        return;\n                    }\n                    z.gesture.scaleStart = z.getDistanceBetweenTouches(e);\n                }\n                if (!z.gesture.slide || !z.gesture.slide.length) {\n                    z.gesture.slide = $(this);\n                    if (z.gesture.slide.length === 0) z.gesture.slide = s.slides.eq(s.activeIndex);\n                    z.gesture.image = z.gesture.slide.find('img, svg, canvas');\n                    z.gesture.imageWrap = z.gesture.image.parent('.' + s.params.zoomContainerClass);\n                    z.gesture.zoomMax = z.gesture.imageWrap.attr('data-swiper-zoom') || s.params.zoomMax ;\n                    if (z.gesture.imageWrap.length === 0) {\n                        z.gesture.image = undefined;\n                        return;\n                    }\n                }\n                z.gesture.image.transition(0);\n                z.isScaling = true;\n            },\n            onGestureChange: function (e) {\n                var z = s.zoom;\n                if (!s.support.gestures) {\n                    if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n                        return;\n                    }\n                    z.gesture.scaleMove = z.getDistanceBetweenTouches(e);\n                }\n                if (!z.gesture.image || z.gesture.image.length === 0) return;\n                if (s.support.gestures) {\n                    z.scale = e.scale * z.currentScale;\n                }\n                else {\n                    z.scale = (z.gesture.scaleMove / z.gesture.scaleStart) * z.currentScale;\n                }\n                if (z.scale > z.gesture.zoomMax) {\n                    z.scale = z.gesture.zoomMax - 1 + Math.pow((z.scale - z.gesture.zoomMax + 1), 0.5);\n                }\n                if (z.scale < s.params.zoomMin) {\n                    z.scale =  s.params.zoomMin + 1 - Math.pow((s.params.zoomMin - z.scale + 1), 0.5);\n                }\n                z.gesture.image.transform('translate3d(0,0,0) scale(' + z.scale + ')');\n            },\n            onGestureEnd: function (e) {\n                var z = s.zoom;\n                if (!s.support.gestures) {\n                    if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2) {\n                        return;\n                    }\n                }\n                if (!z.gesture.image || z.gesture.image.length === 0) return;\n                z.scale = Math.max(Math.min(z.scale, z.gesture.zoomMax), s.params.zoomMin);\n                z.gesture.image.transition(s.params.speed).transform('translate3d(0,0,0) scale(' + z.scale + ')');\n                z.currentScale = z.scale;\n                z.isScaling = false;\n                if (z.scale === 1) z.gesture.slide = undefined;\n            },\n            onTouchStart: function (s, e) {\n                var z = s.zoom;\n                if (!z.gesture.image || z.gesture.image.length === 0) return;\n                if (z.image.isTouched) return;\n                if (s.device.os === 'android') e.preventDefault();\n                z.image.isTouched = true;\n                z.image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n                z.image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n            },\n            onTouchMove: function (e) {\n                var z = s.zoom;\n                if (!z.gesture.image || z.gesture.image.length === 0) return;\n                s.allowClick = false;\n                if (!z.image.isTouched || !z.gesture.slide) return;\n        \n                if (!z.image.isMoved) {\n                    z.image.width = z.gesture.image[0].offsetWidth;\n                    z.image.height = z.gesture.image[0].offsetHeight;\n                    z.image.startX = s.getTranslate(z.gesture.imageWrap[0], 'x') || 0;\n                    z.image.startY = s.getTranslate(z.gesture.imageWrap[0], 'y') || 0;\n                    z.gesture.slideWidth = z.gesture.slide[0].offsetWidth;\n                    z.gesture.slideHeight = z.gesture.slide[0].offsetHeight;\n                    z.gesture.imageWrap.transition(0);\n                    if (s.rtl) z.image.startX = -z.image.startX;\n                    if (s.rtl) z.image.startY = -z.image.startY;\n                }\n                // Define if we need image drag\n                var scaledWidth = z.image.width * z.scale;\n                var scaledHeight = z.image.height * z.scale;\n        \n                if (scaledWidth < z.gesture.slideWidth && scaledHeight < z.gesture.slideHeight) return;\n        \n                z.image.minX = Math.min((z.gesture.slideWidth / 2 - scaledWidth / 2), 0);\n                z.image.maxX = -z.image.minX;\n                z.image.minY = Math.min((z.gesture.slideHeight / 2 - scaledHeight / 2), 0);\n                z.image.maxY = -z.image.minY;\n        \n                z.image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n                z.image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n        \n                if (!z.image.isMoved && !z.isScaling) {\n                    if (s.isHorizontal() &&\n                        (Math.floor(z.image.minX) === Math.floor(z.image.startX) && z.image.touchesCurrent.x < z.image.touchesStart.x) ||\n                        (Math.floor(z.image.maxX) === Math.floor(z.image.startX) && z.image.touchesCurrent.x > z.image.touchesStart.x)\n                        ) {\n                        z.image.isTouched = false;\n                        return;\n                    }\n                    else if (!s.isHorizontal() &&\n                        (Math.floor(z.image.minY) === Math.floor(z.image.startY) && z.image.touchesCurrent.y < z.image.touchesStart.y) ||\n                        (Math.floor(z.image.maxY) === Math.floor(z.image.startY) && z.image.touchesCurrent.y > z.image.touchesStart.y)\n                        ) {\n                        z.image.isTouched = false;\n                        return;\n                    }\n                }\n                e.preventDefault();\n                e.stopPropagation();\n        \n                z.image.isMoved = true;\n                z.image.currentX = z.image.touchesCurrent.x - z.image.touchesStart.x + z.image.startX;\n                z.image.currentY = z.image.touchesCurrent.y - z.image.touchesStart.y + z.image.startY;\n        \n                if (z.image.currentX < z.image.minX) {\n                    z.image.currentX =  z.image.minX + 1 - Math.pow((z.image.minX - z.image.currentX + 1), 0.8);\n                }\n                if (z.image.currentX > z.image.maxX) {\n                    z.image.currentX = z.image.maxX - 1 + Math.pow((z.image.currentX - z.image.maxX + 1), 0.8);\n                }\n        \n                if (z.image.currentY < z.image.minY) {\n                    z.image.currentY =  z.image.minY + 1 - Math.pow((z.image.minY - z.image.currentY + 1), 0.8);\n                }\n                if (z.image.currentY > z.image.maxY) {\n                    z.image.currentY = z.image.maxY - 1 + Math.pow((z.image.currentY - z.image.maxY + 1), 0.8);\n                }\n        \n                //Velocity\n                if (!z.velocity.prevPositionX) z.velocity.prevPositionX = z.image.touchesCurrent.x;\n                if (!z.velocity.prevPositionY) z.velocity.prevPositionY = z.image.touchesCurrent.y;\n                if (!z.velocity.prevTime) z.velocity.prevTime = Date.now();\n                z.velocity.x = (z.image.touchesCurrent.x - z.velocity.prevPositionX) / (Date.now() - z.velocity.prevTime) / 2;\n                z.velocity.y = (z.image.touchesCurrent.y - z.velocity.prevPositionY) / (Date.now() - z.velocity.prevTime) / 2;\n                if (Math.abs(z.image.touchesCurrent.x - z.velocity.prevPositionX) < 2) z.velocity.x = 0;\n                if (Math.abs(z.image.touchesCurrent.y - z.velocity.prevPositionY) < 2) z.velocity.y = 0;\n                z.velocity.prevPositionX = z.image.touchesCurrent.x;\n                z.velocity.prevPositionY = z.image.touchesCurrent.y;\n                z.velocity.prevTime = Date.now();\n        \n                z.gesture.imageWrap.transform('translate3d(' + z.image.currentX + 'px, ' + z.image.currentY + 'px,0)');\n            },\n            onTouchEnd: function (s, e) {\n                var z = s.zoom;\n                if (!z.gesture.image || z.gesture.image.length === 0) return;\n                if (!z.image.isTouched || !z.image.isMoved) {\n                    z.image.isTouched = false;\n                    z.image.isMoved = false;\n                    return;\n                }\n                z.image.isTouched = false;\n                z.image.isMoved = false;\n                var momentumDurationX = 300;\n                var momentumDurationY = 300;\n                var momentumDistanceX = z.velocity.x * momentumDurationX;\n                var newPositionX = z.image.currentX + momentumDistanceX;\n                var momentumDistanceY = z.velocity.y * momentumDurationY;\n                var newPositionY = z.image.currentY + momentumDistanceY;\n        \n                //Fix duration\n                if (z.velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - z.image.currentX) / z.velocity.x);\n                if (z.velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - z.image.currentY) / z.velocity.y);\n                var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n        \n                z.image.currentX = newPositionX;\n                z.image.currentY = newPositionY;\n        \n                // Define if we need image drag\n                var scaledWidth = z.image.width * z.scale;\n                var scaledHeight = z.image.height * z.scale;\n                z.image.minX = Math.min((z.gesture.slideWidth / 2 - scaledWidth / 2), 0);\n                z.image.maxX = -z.image.minX;\n                z.image.minY = Math.min((z.gesture.slideHeight / 2 - scaledHeight / 2), 0);\n                z.image.maxY = -z.image.minY;\n                z.image.currentX = Math.max(Math.min(z.image.currentX, z.image.maxX), z.image.minX);\n                z.image.currentY = Math.max(Math.min(z.image.currentY, z.image.maxY), z.image.minY);\n        \n                z.gesture.imageWrap.transition(momentumDuration).transform('translate3d(' + z.image.currentX + 'px, ' + z.image.currentY + 'px,0)');\n            },\n            onTransitionEnd: function (s) {\n                var z = s.zoom;\n                if (z.gesture.slide && s.previousIndex !== s.activeIndex) {\n                    z.gesture.image.transform('translate3d(0,0,0) scale(1)');\n                    z.gesture.imageWrap.transform('translate3d(0,0,0)');\n                    z.gesture.slide = z.gesture.image = z.gesture.imageWrap = undefined;\n                    z.scale = z.currentScale = 1;\n                }\n            },\n            // Toggle Zoom\n            toggleZoom: function (s, e) {\n                var z = s.zoom;\n                if (!z.gesture.slide) {\n                    z.gesture.slide = s.clickedSlide ? $(s.clickedSlide) : s.slides.eq(s.activeIndex);\n                    z.gesture.image = z.gesture.slide.find('img, svg, canvas');\n                    z.gesture.imageWrap = z.gesture.image.parent('.' + s.params.zoomContainerClass);\n                }\n                if (!z.gesture.image || z.gesture.image.length === 0) return;\n        \n                var touchX, touchY, offsetX, offsetY, diffX, diffY, translateX, translateY, imageWidth, imageHeight, scaledWidth, scaledHeight, translateMinX, translateMinY, translateMaxX, translateMaxY, slideWidth, slideHeight;\n        \n                if (typeof z.image.touchesStart.x === 'undefined' && e) {\n                    touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n                    touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n                }\n                else {\n                    touchX = z.image.touchesStart.x;\n                    touchY = z.image.touchesStart.y;\n                }\n        \n                if (z.scale && z.scale !== 1) {\n                    // Zoom Out\n                    z.scale = z.currentScale = 1;\n                    z.gesture.imageWrap.transition(300).transform('translate3d(0,0,0)');\n                    z.gesture.image.transition(300).transform('translate3d(0,0,0) scale(1)');\n                    z.gesture.slide = undefined;\n                }\n                else {\n                    // Zoom In\n                    z.scale = z.currentScale = z.gesture.imageWrap.attr('data-swiper-zoom') || s.params.zoomMax;\n                    if (e) {\n                        slideWidth = z.gesture.slide[0].offsetWidth;\n                        slideHeight = z.gesture.slide[0].offsetHeight;\n                        offsetX = z.gesture.slide.offset().left;\n                        offsetY = z.gesture.slide.offset().top;\n                        diffX = offsetX + slideWidth/2 - touchX;\n                        diffY = offsetY + slideHeight/2 - touchY;\n        \n                        imageWidth = z.gesture.image[0].offsetWidth;\n                        imageHeight = z.gesture.image[0].offsetHeight;\n                        scaledWidth = imageWidth * z.scale;\n                        scaledHeight = imageHeight * z.scale;\n        \n                        translateMinX = Math.min((slideWidth / 2 - scaledWidth / 2), 0);\n                        translateMinY = Math.min((slideHeight / 2 - scaledHeight / 2), 0);\n                        translateMaxX = -translateMinX;\n                        translateMaxY = -translateMinY;\n        \n                        translateX = diffX * z.scale;\n                        translateY = diffY * z.scale;\n        \n                        if (translateX < translateMinX) {\n                            translateX =  translateMinX;\n                        }\n                        if (translateX > translateMaxX) {\n                            translateX = translateMaxX;\n                        }\n        \n                        if (translateY < translateMinY) {\n                            translateY =  translateMinY;\n                        }\n                        if (translateY > translateMaxY) {\n                            translateY = translateMaxY;\n                        }\n                    }\n                    else {\n                        translateX = 0;\n                        translateY = 0;\n                    }\n                    z.gesture.imageWrap.transition(300).transform('translate3d(' + translateX + 'px, ' + translateY + 'px,0)');\n                    z.gesture.image.transition(300).transform('translate3d(0,0,0) scale(' + z.scale + ')');\n                }\n            },\n            // Attach/Detach Events\n            attachEvents: function (detach) {\n                var action = detach ? 'off' : 'on';\n        \n                if (s.params.zoom) {\n                    var target = s.slides;\n                    var passiveListener = s.touchEvents.start === 'touchstart' && s.support.passiveListener && s.params.passiveListeners ? {passive: true, capture: false} : false;\n                    // Scale image\n                    if (s.support.gestures) {\n                        s.slides[action]('gesturestart', s.zoom.onGestureStart, passiveListener);\n                        s.slides[action]('gesturechange', s.zoom.onGestureChange, passiveListener);\n                        s.slides[action]('gestureend', s.zoom.onGestureEnd, passiveListener);\n                    }\n                    else if (s.touchEvents.start === 'touchstart') {\n                        s.slides[action](s.touchEvents.start, s.zoom.onGestureStart, passiveListener);\n                        s.slides[action](s.touchEvents.move, s.zoom.onGestureChange, passiveListener);\n                        s.slides[action](s.touchEvents.end, s.zoom.onGestureEnd, passiveListener);\n                    }\n        \n                    // Move image\n                    s[action]('touchStart', s.zoom.onTouchStart);\n                    s.slides.each(function (index, slide){\n                        if ($(slide).find('.' + s.params.zoomContainerClass).length > 0) {\n                            $(slide)[action](s.touchEvents.move, s.zoom.onTouchMove);\n                        }\n                    });\n                    s[action]('touchEnd', s.zoom.onTouchEnd);\n        \n                    // Scale Out\n                    s[action]('transitionEnd', s.zoom.onTransitionEnd);\n                    if (s.params.zoomToggle) {\n                        s.on('doubleTap', s.zoom.toggleZoom);\n                    }\n                }\n            },\n            init: function () {\n                s.zoom.attachEvents();\n            },\n            destroy: function () {\n                s.zoom.attachEvents(true);\n            }\n        };\n\n        /*=========================\n          Plugins API. Collect all and init all plugins\n          ===========================*/\n        s._plugins = [];\n        for (var plugin in s.plugins) {\n            var p = s.plugins[plugin](s, s.params[plugin]);\n            if (p) s._plugins.push(p);\n        }\n        // Method to call all plugins event/method\n        s.callPlugins = function (eventName) {\n            for (var i = 0; i < s._plugins.length; i++) {\n                if (eventName in s._plugins[i]) {\n                    s._plugins[i][eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n                }\n            }\n        };\n\n        /*=========================\n          Events/Callbacks/Plugins Emitter\n          ===========================*/\n        function normalizeEventName (eventName) {\n            if (eventName.indexOf('on') !== 0) {\n                if (eventName[0] !== eventName[0].toUpperCase()) {\n                    eventName = 'on' + eventName[0].toUpperCase() + eventName.substring(1);\n                }\n                else {\n                    eventName = 'on' + eventName;\n                }\n            }\n            return eventName;\n        }\n        s.emitterEventListeners = {\n        \n        };\n        s.emit = function (eventName) {\n            // Trigger callbacks\n            if (s.params[eventName]) {\n                s.params[eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n            }\n            var i;\n            // Trigger events\n            if (s.emitterEventListeners[eventName]) {\n                for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n                    s.emitterEventListeners[eventName][i](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n                }\n            }\n            // Trigger plugins\n            if (s.callPlugins) s.callPlugins(eventName, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n        };\n        s.on = function (eventName, handler) {\n            eventName = normalizeEventName(eventName);\n            if (!s.emitterEventListeners[eventName]) s.emitterEventListeners[eventName] = [];\n            s.emitterEventListeners[eventName].push(handler);\n            return s;\n        };\n        s.off = function (eventName, handler) {\n            var i;\n            eventName = normalizeEventName(eventName);\n            if (typeof handler === 'undefined') {\n                // Remove all handlers for such event\n                s.emitterEventListeners[eventName] = [];\n                return s;\n            }\n            if (!s.emitterEventListeners[eventName] || s.emitterEventListeners[eventName].length === 0) return;\n            for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n                if(s.emitterEventListeners[eventName][i] === handler) s.emitterEventListeners[eventName].splice(i, 1);\n            }\n            return s;\n        };\n        s.once = function (eventName, handler) {\n            eventName = normalizeEventName(eventName);\n            var _handler = function () {\n                handler(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);\n                s.off(eventName, _handler);\n            };\n            s.on(eventName, _handler);\n            return s;\n        };\n\n        // Accessibility tools\n        s.a11y = {\n            makeFocusable: function ($el) {\n                $el.attr('tabIndex', '0');\n                return $el;\n            },\n            addRole: function ($el, role) {\n                $el.attr('role', role);\n                return $el;\n            },\n        \n            addLabel: function ($el, label) {\n                $el.attr('aria-label', label);\n                return $el;\n            },\n        \n            disable: function ($el) {\n                $el.attr('aria-disabled', true);\n                return $el;\n            },\n        \n            enable: function ($el) {\n                $el.attr('aria-disabled', false);\n                return $el;\n            },\n        \n            onEnterKey: function (event) {\n                if (event.keyCode !== 13) return;\n                if ($(event.target).is(s.params.nextButton)) {\n                    s.onClickNext(event);\n                    if (s.isEnd) {\n                        s.a11y.notify(s.params.lastSlideMessage);\n                    }\n                    else {\n                        s.a11y.notify(s.params.nextSlideMessage);\n                    }\n                }\n                else if ($(event.target).is(s.params.prevButton)) {\n                    s.onClickPrev(event);\n                    if (s.isBeginning) {\n                        s.a11y.notify(s.params.firstSlideMessage);\n                    }\n                    else {\n                        s.a11y.notify(s.params.prevSlideMessage);\n                    }\n                }\n                if ($(event.target).is('.' + s.params.bulletClass)) {\n                    $(event.target)[0].click();\n                }\n            },\n        \n            liveRegion: $('<span class=\"' + s.params.notificationClass + '\" aria-live=\"assertive\" aria-atomic=\"true\"></span>'),\n        \n            notify: function (message) {\n                var notification = s.a11y.liveRegion;\n                if (notification.length === 0) return;\n                notification.html('');\n                notification.html(message);\n            },\n            init: function () {\n                // Setup accessibility\n                if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {\n                    s.a11y.makeFocusable(s.nextButton);\n                    s.a11y.addRole(s.nextButton, 'button');\n                    s.a11y.addLabel(s.nextButton, s.params.nextSlideMessage);\n                }\n                if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {\n                    s.a11y.makeFocusable(s.prevButton);\n                    s.a11y.addRole(s.prevButton, 'button');\n                    s.a11y.addLabel(s.prevButton, s.params.prevSlideMessage);\n                }\n        \n                $(s.container).append(s.a11y.liveRegion);\n            },\n            initPagination: function () {\n                if (s.params.pagination && s.params.paginationClickable && s.bullets && s.bullets.length) {\n                    s.bullets.each(function () {\n                        var bullet = $(this);\n                        s.a11y.makeFocusable(bullet);\n                        s.a11y.addRole(bullet, 'button');\n                        s.a11y.addLabel(bullet, s.params.paginationBulletMessage.replace(/{{index}}/, bullet.index() + 1));\n                    });\n                }\n            },\n            destroy: function () {\n                if (s.a11y.liveRegion && s.a11y.liveRegion.length > 0) s.a11y.liveRegion.remove();\n            }\n        };\n        \n\n        /*=========================\n          Init/Destroy\n          ===========================*/\n        s.init = function () {\n            if (s.params.loop) s.createLoop();\n            s.updateContainerSize();\n            s.updateSlidesSize();\n            s.updatePagination();\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.set();\n                if (s.params.scrollbarDraggable) {\n                    s.scrollbar.enableDraggable();\n                }\n            }\n            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n                if (!s.params.loop) s.updateProgress();\n                s.effects[s.params.effect].setTranslate();\n            }\n            if (s.params.loop) {\n                s.slideTo(s.params.initialSlide + s.loopedSlides, 0, s.params.runCallbacksOnInit);\n            }\n            else {\n                s.slideTo(s.params.initialSlide, 0, s.params.runCallbacksOnInit);\n                if (s.params.initialSlide === 0) {\n                    if (s.parallax && s.params.parallax) s.parallax.setTranslate();\n                    if (s.lazy && s.params.lazyLoading) {\n                        s.lazy.load();\n                        s.lazy.initialImageLoaded = true;\n                    }\n                }\n            }\n            s.attachEvents();\n            if (s.params.observer && s.support.observer) {\n                s.initObservers();\n            }\n            if (s.params.preloadImages && !s.params.lazyLoading) {\n                s.preloadImages();\n            }\n            if (s.params.zoom && s.zoom) {\n                s.zoom.init();\n            }\n            if (s.params.autoplay) {\n                s.startAutoplay();\n            }\n            if (s.params.keyboardControl) {\n                if (s.enableKeyboardControl) s.enableKeyboardControl();\n            }\n            if (s.params.mousewheelControl) {\n                if (s.enableMousewheelControl) s.enableMousewheelControl();\n            }\n            // Deprecated hashnavReplaceState changed to replaceState for use in hashnav and history\n            if (s.params.hashnavReplaceState) {\n                s.params.replaceState = s.params.hashnavReplaceState;\n            }\n            if (s.params.history) {\n                if (s.history) s.history.init();\n            }\n            if (s.params.hashnav) {\n                if (s.hashnav) s.hashnav.init();\n            }\n            if (s.params.a11y && s.a11y) s.a11y.init();\n            s.emit('onInit', s);\n        };\n        \n        // Cleanup dynamic styles\n        s.cleanupStyles = function () {\n            // Container\n            s.container.removeClass(s.classNames.join(' ')).removeAttr('style');\n        \n            // Wrapper\n            s.wrapper.removeAttr('style');\n        \n            // Slides\n            if (s.slides && s.slides.length) {\n                s.slides\n                    .removeClass([\n                      s.params.slideVisibleClass,\n                      s.params.slideActiveClass,\n                      s.params.slideNextClass,\n                      s.params.slidePrevClass\n                    ].join(' '))\n                    .removeAttr('style')\n                    .removeAttr('data-swiper-column')\n                    .removeAttr('data-swiper-row');\n            }\n        \n            // Pagination/Bullets\n            if (s.paginationContainer && s.paginationContainer.length) {\n                s.paginationContainer.removeClass(s.params.paginationHiddenClass);\n            }\n            if (s.bullets && s.bullets.length) {\n                s.bullets.removeClass(s.params.bulletActiveClass);\n            }\n        \n            // Buttons\n            if (s.params.prevButton) $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);\n            if (s.params.nextButton) $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);\n        \n            // Scrollbar\n            if (s.params.scrollbar && s.scrollbar) {\n                if (s.scrollbar.track && s.scrollbar.track.length) s.scrollbar.track.removeAttr('style');\n                if (s.scrollbar.drag && s.scrollbar.drag.length) s.scrollbar.drag.removeAttr('style');\n            }\n        };\n        \n        // Destroy\n        s.destroy = function (deleteInstance, cleanupStyles) {\n            // Detach evebts\n            s.detachEvents();\n            // Stop autoplay\n            s.stopAutoplay();\n            // Disable draggable\n            if (s.params.scrollbar && s.scrollbar) {\n                if (s.params.scrollbarDraggable) {\n                    s.scrollbar.disableDraggable();\n                }\n            }\n            // Destroy loop\n            if (s.params.loop) {\n                s.destroyLoop();\n            }\n            // Cleanup styles\n            if (cleanupStyles) {\n                s.cleanupStyles();\n            }\n            // Disconnect observer\n            s.disconnectObservers();\n        \n            // Destroy zoom\n            if (s.params.zoom && s.zoom) {\n                s.zoom.destroy();\n            }\n            // Disable keyboard/mousewheel\n            if (s.params.keyboardControl) {\n                if (s.disableKeyboardControl) s.disableKeyboardControl();\n            }\n            if (s.params.mousewheelControl) {\n                if (s.disableMousewheelControl) s.disableMousewheelControl();\n            }\n            // Disable a11y\n            if (s.params.a11y && s.a11y) s.a11y.destroy();\n            // Delete history popstate\n            if (s.params.history && !s.params.replaceState) {\n                window.removeEventListener('popstate', s.history.setHistoryPopState);\n            }\n            if (s.params.hashnav && s.hashnav)  {\n                s.hashnav.destroy();\n            }\n            // Destroy callback\n            s.emit('onDestroy');\n            // Delete instance\n            if (deleteInstance !== false) s = null;\n        };\n        \n        s.init();\n        \n\n    \n        // Return swiper instance\n        return s;\n    };\n    \n\n    /*==================================================\n        Prototype\n    ====================================================*/\n    Swiper.prototype = {\n        isSafari: (function () {\n            var ua = window.navigator.userAgent.toLowerCase();\n            return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n        })(),\n        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n        isArray: function (arr) {\n            return Object.prototype.toString.apply(arr) === '[object Array]';\n        },\n        /*==================================================\n        Browser\n        ====================================================*/\n        browser: {\n            ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,\n            ieTouch: (window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1) || (window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1),\n            lteIE9: (function() {\n                // create temporary DIV\n                var div = document.createElement('div');\n                // add content to tmp DIV which is wrapped into the IE HTML conditional statement\n                div.innerHTML = '<!--[if lte IE 9]><i></i><![endif]-->';\n                // return true / false value based on what will browser render\n                return div.getElementsByTagName('i').length === 1;\n            })()\n        },\n        /*==================================================\n        Devices\n        ====================================================*/\n        device: (function () {\n            var ua = window.navigator.userAgent;\n            var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n            var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n            var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n            var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n            return {\n                ios: ipad || iphone || ipod,\n                android: android\n            };\n        })(),\n        /*==================================================\n        Feature Detection\n        ====================================================*/\n        support: {\n            touch : (window.Modernizr && Modernizr.touch === true) || (function () {\n                return !!(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch);\n            })(),\n    \n            transforms3d : (window.Modernizr && Modernizr.csstransforms3d === true) || (function () {\n                var div = document.createElement('div').style;\n                return ('webkitPerspective' in div || 'MozPerspective' in div || 'OPerspective' in div || 'MsPerspective' in div || 'perspective' in div);\n            })(),\n    \n            flexbox: (function () {\n                var div = document.createElement('div').style;\n                var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n                for (var i = 0; i < styles.length; i++) {\n                    if (styles[i] in div) return true;\n                }\n            })(),\n    \n            observer: (function () {\n                return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n            })(),\n    \n            passiveListener: (function () {\n                var supportsPassive = false;\n                try {\n                    var opts = Object.defineProperty({}, 'passive', {\n                        get: function() {\n                            supportsPassive = true;\n                        }\n                    });\n                    window.addEventListener('testPassiveListener', null, opts);\n                } catch (e) {}\n                return supportsPassive;\n            })(),\n    \n            gestures: (function () {\n                return 'ongesturestart' in window;\n            })()\n        },\n        /*==================================================\n        Plugins\n        ====================================================*/\n        plugins: {}\n    };\n    \n\n    /*===========================\n     Get Dom libraries\n     ===========================*/\n    var swiperDomPlugins = ['jQuery', 'Zepto', 'Dom7'];\n    for (var i = 0; i < swiperDomPlugins.length; i++) {\n    \tif (window[swiperDomPlugins[i]]) {\n    \t\taddLibraryPlugin(window[swiperDomPlugins[i]]);\n    \t}\n    }\n    // Required DOM Plugins\n    var domLib;\n    if (typeof Dom7 === 'undefined') {\n    \tdomLib = window.Dom7 || window.Zepto || window.jQuery;\n    }\n    else {\n    \tdomLib = Dom7;\n    }\n\n    /*===========================\n    Add .swiper plugin from Dom libraries\n    ===========================*/\n    function addLibraryPlugin(lib) {\n        lib.fn.swiper = function (params) {\n            var firstInstance;\n            lib(this).each(function () {\n                var s = new Swiper(this, params);\n                if (!firstInstance) firstInstance = s;\n            });\n            return firstInstance;\n        };\n    }\n    \n    if (domLib) {\n        if (!('transitionEnd' in domLib.fn)) {\n            domLib.fn.transitionEnd = function (callback) {\n                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n                    i, j, dom = this;\n                function fireCallBack(e) {\n                    /*jshint validthis:true */\n                    if (e.target !== this) return;\n                    callback.call(this, e);\n                    for (i = 0; i < events.length; i++) {\n                        dom.off(events[i], fireCallBack);\n                    }\n                }\n                if (callback) {\n                    for (i = 0; i < events.length; i++) {\n                        dom.on(events[i], fireCallBack);\n                    }\n                }\n                return this;\n            };\n        }\n        if (!('transform' in domLib.fn)) {\n            domLib.fn.transform = function (transform) {\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;\n                }\n                return this;\n            };\n        }\n        if (!('transition' in domLib.fn)) {\n            domLib.fn.transition = function (duration) {\n                if (typeof duration !== 'string') {\n                    duration = duration + 'ms';\n                }\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;\n                }\n                return this;\n            };\n        }\n        if (!('outerWidth' in domLib.fn)) {\n            domLib.fn.outerWidth = function (includeMargins) {\n                if (this.length > 0) {\n                    if (includeMargins)\n                        return this[0].offsetWidth + parseFloat(this.css('margin-right')) + parseFloat(this.css('margin-left'));\n                    else\n                        return this[0].offsetWidth;\n                }\n                else return null;\n            };\n        }\n    }\n\n    window.Swiper = Swiper;\n})();\n/*===========================\nSwiper AMD Export\n===========================*/\nif (typeof(module) !== 'undefined')\n{\n    module.exports = window.Swiper;\n}\nelse if (typeof define === 'function' && define.amd) {\n    define([], function () {\n        'use strict';\n        return window.Swiper;\n    });\n}\n//# sourceMappingURL=maps/swiper.jquery.js.map\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.346Z",
        "time": 0.17099999968195334,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.15100000018719584,
          "receive": 0.019999999494757503,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 965
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/js/magnific/jquery.magnific-popup.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:53 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:09 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"a302-5873f96f6cf40-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "12489"
            }
          ],
          "cookies": [],
          "content": {
            "size": 41730,
            "mimeType": "application/javascript",
            "text": "/*! Magnific Popup - v1.1.0 - 2016-02-20\n* http://dimsemenov.com/plugins/magnific-popup/\n* Copyright (c) 2016 Dmitry Semenov; */\n;(function (factory) { \nif (typeof define === 'function' && define.amd) { \n // AMD. Register as an anonymous module. \n define(['jquery'], factory); \n } else if (typeof exports === 'object') { \n // Node/CommonJS \n factory(require('jquery')); \n } else { \n // Browser globals \n factory(window.jQuery || window.Zepto); \n } \n }(function($) { \n\n/*>>core*/\n/**\n * \n * Magnific Popup Core JS file\n * \n */\n\n\n/**\n * Private static constants\n */\nvar CLOSE_EVENT = 'Close',\n\tBEFORE_CLOSE_EVENT = 'BeforeClose',\n\tAFTER_CLOSE_EVENT = 'AfterClose',\n\tBEFORE_APPEND_EVENT = 'BeforeAppend',\n\tMARKUP_PARSE_EVENT = 'MarkupParse',\n\tOPEN_EVENT = 'Open',\n\tCHANGE_EVENT = 'Change',\n\tNS = 'mfp',\n\tEVENT_NS = '.' + NS,\n\tREADY_CLASS = 'mfp-ready',\n\tREMOVING_CLASS = 'mfp-removing',\n\tPREVENT_CLOSE_CLASS = 'mfp-prevent-close';\n\n\n/**\n * Private vars \n */\n/*jshint -W079 */\nvar mfp, // As we have only one instance of MagnificPopup object, we define it locally to not to use 'this'\n\tMagnificPopup = function(){},\n\t_isJQ = !!(window.jQuery),\n\t_prevStatus,\n\t_window = $(window),\n\t_document,\n\t_prevContentType,\n\t_wrapClasses,\n\t_currPopupType;\n\n\n/**\n * Private functions\n */\nvar _mfpOn = function(name, f) {\n\t\tmfp.ev.on(NS + name + EVENT_NS, f);\n\t},\n\t_getEl = function(className, appendTo, html, raw) {\n\t\tvar el = document.createElement('div');\n\t\tel.className = 'mfp-'+className;\n\t\tif(html) {\n\t\t\tel.innerHTML = html;\n\t\t}\n\t\tif(!raw) {\n\t\t\tel = $(el);\n\t\t\tif(appendTo) {\n\t\t\t\tel.appendTo(appendTo);\n\t\t\t}\n\t\t} else if(appendTo) {\n\t\t\tappendTo.appendChild(el);\n\t\t}\n\t\treturn el;\n\t},\n\t_mfpTrigger = function(e, data) {\n\t\tmfp.ev.triggerHandler(NS + e, data);\n\n\t\tif(mfp.st.callbacks) {\n\t\t\t// converts \"mfpEventName\" to \"eventName\" callback and triggers it if it's present\n\t\t\te = e.charAt(0).toLowerCase() + e.slice(1);\n\t\t\tif(mfp.st.callbacks[e]) {\n\t\t\t\tmfp.st.callbacks[e].apply(mfp, $.isArray(data) ? data : [data]);\n\t\t\t}\n\t\t}\n\t},\n\t_getCloseBtn = function(type) {\n\t\tif(type !== _currPopupType || !mfp.currTemplate.closeBtn) {\n\t\t\tmfp.currTemplate.closeBtn = $( mfp.st.closeMarkup.replace('%title%', mfp.st.tClose ) );\n\t\t\t_currPopupType = type;\n\t\t}\n\t\treturn mfp.currTemplate.closeBtn;\n\t},\n\t// Initialize Magnific Popup only when called at least once\n\t_checkInstance = function() {\n\t\tif(!$.magnificPopup.instance) {\n\t\t\t/*jshint -W020 */\n\t\t\tmfp = new MagnificPopup();\n\t\t\tmfp.init();\n\t\t\t$.magnificPopup.instance = mfp;\n\t\t}\n\t},\n\t// CSS transition detection, http://stackoverflow.com/questions/7264899/detect-css-transitions-using-javascript-and-without-modernizr\n\tsupportsTransitions = function() {\n\t\tvar s = document.createElement('p').style, // 's' for style. better to create an element if body yet to exist\n\t\t\tv = ['ms','O','Moz','Webkit']; // 'v' for vendor\n\n\t\tif( s['transition'] !== undefined ) {\n\t\t\treturn true; \n\t\t}\n\t\t\t\n\t\twhile( v.length ) {\n\t\t\tif( v.pop() + 'Transition' in s ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn false;\n\t};\n\n\n\n/**\n * Public functions\n */\nMagnificPopup.prototype = {\n\n\tconstructor: MagnificPopup,\n\n\t/**\n\t * Initializes Magnific Popup plugin. \n\t * This function is triggered only once when $.fn.magnificPopup or $.magnificPopup is executed\n\t */\n\tinit: function() {\n\t\tvar appVersion = navigator.appVersion;\n\t\tmfp.isLowIE = mfp.isIE8 = document.all && !document.addEventListener;\n\t\tmfp.isAndroid = (/android/gi).test(appVersion);\n\t\tmfp.isIOS = (/iphone|ipad|ipod/gi).test(appVersion);\n\t\tmfp.supportsTransition = supportsTransitions();\n\n\t\t// We disable fixed positioned lightbox on devices that don't handle it nicely.\n\t\t// If you know a better way of detecting this - let me know.\n\t\tmfp.probablyMobile = (mfp.isAndroid || mfp.isIOS || /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent) );\n\t\t_document = $(document);\n\n\t\tmfp.popupsCache = {};\n\t},\n\n\t/**\n\t * Opens popup\n\t * @param  data [description]\n\t */\n\topen: function(data) {\n\n\t\tvar i;\n\n\t\tif(data.isObj === false) { \n\t\t\t// convert jQuery collection to array to avoid conflicts later\n\t\t\tmfp.items = data.items.toArray();\n\n\t\t\tmfp.index = 0;\n\t\t\tvar items = data.items,\n\t\t\t\titem;\n\t\t\tfor(i = 0; i < items.length; i++) {\n\t\t\t\titem = items[i];\n\t\t\t\tif(item.parsed) {\n\t\t\t\t\titem = item.el[0];\n\t\t\t\t}\n\t\t\t\tif(item === data.el[0]) {\n\t\t\t\t\tmfp.index = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tmfp.items = $.isArray(data.items) ? data.items : [data.items];\n\t\t\tmfp.index = data.index || 0;\n\t\t}\n\n\t\t// if popup is already opened - we just update the content\n\t\tif(mfp.isOpen) {\n\t\t\tmfp.updateItemHTML();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmfp.types = []; \n\t\t_wrapClasses = '';\n\t\tif(data.mainEl && data.mainEl.length) {\n\t\t\tmfp.ev = data.mainEl.eq(0);\n\t\t} else {\n\t\t\tmfp.ev = _document;\n\t\t}\n\n\t\tif(data.key) {\n\t\t\tif(!mfp.popupsCache[data.key]) {\n\t\t\t\tmfp.popupsCache[data.key] = {};\n\t\t\t}\n\t\t\tmfp.currTemplate = mfp.popupsCache[data.key];\n\t\t} else {\n\t\t\tmfp.currTemplate = {};\n\t\t}\n\n\n\n\t\tmfp.st = $.extend(true, {}, $.magnificPopup.defaults, data ); \n\t\tmfp.fixedContentPos = mfp.st.fixedContentPos === 'auto' ? !mfp.probablyMobile : mfp.st.fixedContentPos;\n\n\t\tif(mfp.st.modal) {\n\t\t\tmfp.st.closeOnContentClick = false;\n\t\t\tmfp.st.closeOnBgClick = false;\n\t\t\tmfp.st.showCloseBtn = false;\n\t\t\tmfp.st.enableEscapeKey = false;\n\t\t}\n\t\t\n\n\t\t// Building markup\n\t\t// main containers are created only once\n\t\tif(!mfp.bgOverlay) {\n\n\t\t\t// Dark overlay\n\t\t\tmfp.bgOverlay = _getEl('bg').on('click'+EVENT_NS, function() {\n\t\t\t\tmfp.close();\n\t\t\t});\n\n\t\t\tmfp.wrap = _getEl('wrap').attr('tabindex', -1).on('click'+EVENT_NS, function(e) {\n\t\t\t\tif(mfp._checkIfClose(e.target)) {\n\t\t\t\t\tmfp.close();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmfp.container = _getEl('container', mfp.wrap);\n\t\t}\n\n\t\tmfp.contentContainer = _getEl('content');\n\t\tif(mfp.st.preloader) {\n\t\t\tmfp.preloader = _getEl('preloader', mfp.container, mfp.st.tLoading);\n\t\t}\n\n\n\t\t// Initializing modules\n\t\tvar modules = $.magnificPopup.modules;\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar n = modules[i];\n\t\t\tn = n.charAt(0).toUpperCase() + n.slice(1);\n\t\t\tmfp['init'+n].call(mfp);\n\t\t}\n\t\t_mfpTrigger('BeforeOpen');\n\n\n\t\tif(mfp.st.showCloseBtn) {\n\t\t\t// Close button\n\t\t\tif(!mfp.st.closeBtnInside) {\n\t\t\t\tmfp.wrap.append( _getCloseBtn() );\n\t\t\t} else {\n\t\t\t\t_mfpOn(MARKUP_PARSE_EVENT, function(e, template, values, item) {\n\t\t\t\t\tvalues.close_replaceWith = _getCloseBtn(item.type);\n\t\t\t\t});\n\t\t\t\t_wrapClasses += ' mfp-close-btn-in';\n\t\t\t}\n\t\t}\n\n\t\tif(mfp.st.alignTop) {\n\t\t\t_wrapClasses += ' mfp-align-top';\n\t\t}\n\n\t\n\n\t\tif(mfp.fixedContentPos) {\n\t\t\tmfp.wrap.css({\n\t\t\t\toverflow: mfp.st.overflowY,\n\t\t\t\toverflowX: 'hidden',\n\t\t\t\toverflowY: mfp.st.overflowY\n\t\t\t});\n\t\t} else {\n\t\t\tmfp.wrap.css({ \n\t\t\t\ttop: _window.scrollTop(),\n\t\t\t\tposition: 'absolute'\n\t\t\t});\n\t\t}\n\t\tif( mfp.st.fixedBgPos === false || (mfp.st.fixedBgPos === 'auto' && !mfp.fixedContentPos) ) {\n\t\t\tmfp.bgOverlay.css({\n\t\t\t\theight: _document.height(),\n\t\t\t\tposition: 'absolute'\n\t\t\t});\n\t\t}\n\n\t\t\n\n\t\tif(mfp.st.enableEscapeKey) {\n\t\t\t// Close on ESC key\n\t\t\t_document.on('keyup' + EVENT_NS, function(e) {\n\t\t\t\tif(e.keyCode === 27) {\n\t\t\t\t\tmfp.close();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t_window.on('resize' + EVENT_NS, function() {\n\t\t\tmfp.updateSize();\n\t\t});\n\n\n\t\tif(!mfp.st.closeOnContentClick) {\n\t\t\t_wrapClasses += ' mfp-auto-cursor';\n\t\t}\n\t\t\n\t\tif(_wrapClasses)\n\t\t\tmfp.wrap.addClass(_wrapClasses);\n\n\n\t\t// this triggers recalculation of layout, so we get it once to not to trigger twice\n\t\tvar windowHeight = mfp.wH = _window.height();\n\n\t\t\n\t\tvar windowStyles = {};\n\n\t\tif( mfp.fixedContentPos ) {\n            if(mfp._hasScrollBar(windowHeight)){\n                var s = mfp._getScrollbarSize();\n                if(s) {\n                    windowStyles.marginRight = s;\n                }\n            }\n        }\n\n\t\tif(mfp.fixedContentPos) {\n\t\t\tif(!mfp.isIE7) {\n\t\t\t\twindowStyles.overflow = 'hidden';\n\t\t\t} else {\n\t\t\t\t// ie7 double-scroll bug\n\t\t\t\t$('body, html').css('overflow', 'hidden');\n\t\t\t}\n\t\t}\n\n\t\t\n\t\t\n\t\tvar classesToadd = mfp.st.mainClass;\n\t\tif(mfp.isIE7) {\n\t\t\tclassesToadd += ' mfp-ie7';\n\t\t}\n\t\tif(classesToadd) {\n\t\t\tmfp._addClassToMFP( classesToadd );\n\t\t}\n\n\t\t// add content\n\t\tmfp.updateItemHTML();\n\n\t\t_mfpTrigger('BuildControls');\n\n\t\t// remove scrollbar, add margin e.t.c\n\t\t$('html').css(windowStyles);\n\t\t\n\t\t// add everything to DOM\n\t\tmfp.bgOverlay.add(mfp.wrap).prependTo( mfp.st.prependTo || $(document.body) );\n\n\t\t// Save last focused element\n\t\tmfp._lastFocusedEl = document.activeElement;\n\t\t\n\t\t// Wait for next cycle to allow CSS transition\n\t\tsetTimeout(function() {\n\t\t\t\n\t\t\tif(mfp.content) {\n\t\t\t\tmfp._addClassToMFP(READY_CLASS);\n\t\t\t\tmfp._setFocus();\n\t\t\t} else {\n\t\t\t\t// if content is not defined (not loaded e.t.c) we add class only for BG\n\t\t\t\tmfp.bgOverlay.addClass(READY_CLASS);\n\t\t\t}\n\t\t\t\n\t\t\t// Trap the focus in popup\n\t\t\t_document.on('focusin' + EVENT_NS, mfp._onFocusIn);\n\n\t\t}, 16);\n\n\t\tmfp.isOpen = true;\n\t\tmfp.updateSize(windowHeight);\n\t\t_mfpTrigger(OPEN_EVENT);\n\n\t\treturn data;\n\t},\n\n\t/**\n\t * Closes the popup\n\t */\n\tclose: function() {\n\t\tif(!mfp.isOpen) return;\n\t\t_mfpTrigger(BEFORE_CLOSE_EVENT);\n\n\t\tmfp.isOpen = false;\n\t\t// for CSS3 animation\n\t\tif(mfp.st.removalDelay && !mfp.isLowIE && mfp.supportsTransition )  {\n\t\t\tmfp._addClassToMFP(REMOVING_CLASS);\n\t\t\tsetTimeout(function() {\n\t\t\t\tmfp._close();\n\t\t\t}, mfp.st.removalDelay);\n\t\t} else {\n\t\t\tmfp._close();\n\t\t}\n\t},\n\n\t/**\n\t * Helper for close() function\n\t */\n\t_close: function() {\n\t\t_mfpTrigger(CLOSE_EVENT);\n\n\t\tvar classesToRemove = REMOVING_CLASS + ' ' + READY_CLASS + ' ';\n\n\t\tmfp.bgOverlay.detach();\n\t\tmfp.wrap.detach();\n\t\tmfp.container.empty();\n\n\t\tif(mfp.st.mainClass) {\n\t\t\tclassesToRemove += mfp.st.mainClass + ' ';\n\t\t}\n\n\t\tmfp._removeClassFromMFP(classesToRemove);\n\n\t\tif(mfp.fixedContentPos) {\n\t\t\tvar windowStyles = {marginRight: ''};\n\t\t\tif(mfp.isIE7) {\n\t\t\t\t$('body, html').css('overflow', '');\n\t\t\t} else {\n\t\t\t\twindowStyles.overflow = '';\n\t\t\t}\n\t\t\t$('html').css(windowStyles);\n\t\t}\n\t\t\n\t\t_document.off('keyup' + EVENT_NS + ' focusin' + EVENT_NS);\n\t\tmfp.ev.off(EVENT_NS);\n\n\t\t// clean up DOM elements that aren't removed\n\t\tmfp.wrap.attr('class', 'mfp-wrap').removeAttr('style');\n\t\tmfp.bgOverlay.attr('class', 'mfp-bg');\n\t\tmfp.container.attr('class', 'mfp-container');\n\n\t\t// remove close button from target element\n\t\tif(mfp.st.showCloseBtn &&\n\t\t(!mfp.st.closeBtnInside || mfp.currTemplate[mfp.currItem.type] === true)) {\n\t\t\tif(mfp.currTemplate.closeBtn)\n\t\t\t\tmfp.currTemplate.closeBtn.detach();\n\t\t}\n\n\n\t\tif(mfp.st.autoFocusLast && mfp._lastFocusedEl) {\n\t\t\t$(mfp._lastFocusedEl).focus(); // put tab focus back\n\t\t}\n\t\tmfp.currItem = null;\t\n\t\tmfp.content = null;\n\t\tmfp.currTemplate = null;\n\t\tmfp.prevHeight = 0;\n\n\t\t_mfpTrigger(AFTER_CLOSE_EVENT);\n\t},\n\t\n\tupdateSize: function(winHeight) {\n\n\t\tif(mfp.isIOS) {\n\t\t\t// fixes iOS nav bars https://github.com/dimsemenov/Magnific-Popup/issues/2\n\t\t\tvar zoomLevel = document.documentElement.clientWidth / window.innerWidth;\n\t\t\tvar height = window.innerHeight * zoomLevel;\n\t\t\tmfp.wrap.css('height', height);\n\t\t\tmfp.wH = height;\n\t\t} else {\n\t\t\tmfp.wH = winHeight || _window.height();\n\t\t}\n\t\t// Fixes #84: popup incorrectly positioned with position:relative on body\n\t\tif(!mfp.fixedContentPos) {\n\t\t\tmfp.wrap.css('height', mfp.wH);\n\t\t}\n\n\t\t_mfpTrigger('Resize');\n\n\t},\n\n\t/**\n\t * Set content of popup based on current index\n\t */\n\tupdateItemHTML: function() {\n\t\tvar item = mfp.items[mfp.index];\n\n\t\t// Detach and perform modifications\n\t\tmfp.contentContainer.detach();\n\n\t\tif(mfp.content)\n\t\t\tmfp.content.detach();\n\n\t\tif(!item.parsed) {\n\t\t\titem = mfp.parseEl( mfp.index );\n\t\t}\n\n\t\tvar type = item.type;\n\n\t\t_mfpTrigger('BeforeChange', [mfp.currItem ? mfp.currItem.type : '', type]);\n\t\t// BeforeChange event works like so:\n\t\t// _mfpOn('BeforeChange', function(e, prevType, newType) { });\n\n\t\tmfp.currItem = item;\n\n\t\tif(!mfp.currTemplate[type]) {\n\t\t\tvar markup = mfp.st[type] ? mfp.st[type].markup : false;\n\n\t\t\t// allows to modify markup\n\t\t\t_mfpTrigger('FirstMarkupParse', markup);\n\n\t\t\tif(markup) {\n\t\t\t\tmfp.currTemplate[type] = $(markup);\n\t\t\t} else {\n\t\t\t\t// if there is no markup found we just define that template is parsed\n\t\t\t\tmfp.currTemplate[type] = true;\n\t\t\t}\n\t\t}\n\n\t\tif(_prevContentType && _prevContentType !== item.type) {\n\t\t\tmfp.container.removeClass('mfp-'+_prevContentType+'-holder');\n\t\t}\n\n\t\tvar newContent = mfp['get' + type.charAt(0).toUpperCase() + type.slice(1)](item, mfp.currTemplate[type]);\n\t\tmfp.appendContent(newContent, type);\n\n\t\titem.preloaded = true;\n\n\t\t_mfpTrigger(CHANGE_EVENT, item);\n\t\t_prevContentType = item.type;\n\n\t\t// Append container back after its content changed\n\t\tmfp.container.prepend(mfp.contentContainer);\n\n\t\t_mfpTrigger('AfterChange');\n\t},\n\n\n\t/**\n\t * Set HTML content of popup\n\t */\n\tappendContent: function(newContent, type) {\n\t\tmfp.content = newContent;\n\n\t\tif(newContent) {\n\t\t\tif(mfp.st.showCloseBtn && mfp.st.closeBtnInside &&\n\t\t\t\tmfp.currTemplate[type] === true) {\n\t\t\t\t// if there is no markup, we just append close button element inside\n\t\t\t\tif(!mfp.content.find('.mfp-close').length) {\n\t\t\t\t\tmfp.content.append(_getCloseBtn());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmfp.content = newContent;\n\t\t\t}\n\t\t} else {\n\t\t\tmfp.content = '';\n\t\t}\n\n\t\t_mfpTrigger(BEFORE_APPEND_EVENT);\n\t\tmfp.container.addClass('mfp-'+type+'-holder');\n\n\t\tmfp.contentContainer.append(mfp.content);\n\t},\n\n\n\t/**\n\t * Creates Magnific Popup data object based on given data\n\t * @param  {int} index Index of item to parse\n\t */\n\tparseEl: function(index) {\n\t\tvar item = mfp.items[index],\n\t\t\ttype;\n\n\t\tif(item.tagName) {\n\t\t\titem = { el: $(item) };\n\t\t} else {\n\t\t\ttype = item.type;\n\t\t\titem = { data: item, src: item.src };\n\t\t}\n\n\t\tif(item.el) {\n\t\t\tvar types = mfp.types;\n\n\t\t\t// check for 'mfp-TYPE' class\n\t\t\tfor(var i = 0; i < types.length; i++) {\n\t\t\t\tif( item.el.hasClass('mfp-'+types[i]) ) {\n\t\t\t\t\ttype = types[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titem.src = item.el.attr('data-mfp-src');\n\t\t\tif(!item.src) {\n\t\t\t\titem.src = item.el.attr('href');\n\t\t\t}\n\t\t}\n\n\t\titem.type = type || mfp.st.type || 'inline';\n\t\titem.index = index;\n\t\titem.parsed = true;\n\t\tmfp.items[index] = item;\n\t\t_mfpTrigger('ElementParse', item);\n\n\t\treturn mfp.items[index];\n\t},\n\n\n\t/**\n\t * Initializes single popup or a group of popups\n\t */\n\taddGroup: function(el, options) {\n\t\tvar eHandler = function(e) {\n\t\t\te.mfpEl = this;\n\t\t\tmfp._openClick(e, el, options);\n\t\t};\n\n\t\tif(!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tvar eName = 'click.magnificPopup';\n\t\toptions.mainEl = el;\n\n\t\tif(options.items) {\n\t\t\toptions.isObj = true;\n\t\t\tel.off(eName).on(eName, eHandler);\n\t\t} else {\n\t\t\toptions.isObj = false;\n\t\t\tif(options.delegate) {\n\t\t\t\tel.off(eName).on(eName, options.delegate , eHandler);\n\t\t\t} else {\n\t\t\t\toptions.items = el;\n\t\t\t\tel.off(eName).on(eName, eHandler);\n\t\t\t}\n\t\t}\n\t},\n\t_openClick: function(e, el, options) {\n\t\tvar midClick = options.midClick !== undefined ? options.midClick : $.magnificPopup.defaults.midClick;\n\n\n\t\tif(!midClick && ( e.which === 2 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar disableOn = options.disableOn !== undefined ? options.disableOn : $.magnificPopup.defaults.disableOn;\n\n\t\tif(disableOn) {\n\t\t\tif($.isFunction(disableOn)) {\n\t\t\t\tif( !disableOn.call(mfp) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else { // else it's number\n\t\t\t\tif( _window.width() < disableOn ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(e.type) {\n\t\t\te.preventDefault();\n\n\t\t\t// This will prevent popup from closing if element is inside and popup is already opened\n\t\t\tif(mfp.isOpen) {\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t}\n\n\t\toptions.el = $(e.mfpEl);\n\t\tif(options.delegate) {\n\t\t\toptions.items = el.find(options.delegate);\n\t\t}\n\t\tmfp.open(options);\n\t},\n\n\n\t/**\n\t * Updates text on preloader\n\t */\n\tupdateStatus: function(status, text) {\n\n\t\tif(mfp.preloader) {\n\t\t\tif(_prevStatus !== status) {\n\t\t\t\tmfp.container.removeClass('mfp-s-'+_prevStatus);\n\t\t\t}\n\n\t\t\tif(!text && status === 'loading') {\n\t\t\t\ttext = mfp.st.tLoading;\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tstatus: status,\n\t\t\t\ttext: text\n\t\t\t};\n\t\t\t// allows to modify status\n\t\t\t_mfpTrigger('UpdateStatus', data);\n\n\t\t\tstatus = data.status;\n\t\t\ttext = data.text;\n\n\t\t\tmfp.preloader.html(text);\n\n\t\t\tmfp.preloader.find('a').on('click', function(e) {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t});\n\n\t\t\tmfp.container.addClass('mfp-s-'+status);\n\t\t\t_prevStatus = status;\n\t\t}\n\t},\n\n\n\t/*\n\t\t\"Private\" helpers that aren't private at all\n\t */\n\t// Check to close popup or not\n\t// \"target\" is an element that was clicked\n\t_checkIfClose: function(target) {\n\n\t\tif($(target).hasClass(PREVENT_CLOSE_CLASS)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar closeOnContent = mfp.st.closeOnContentClick;\n\t\tvar closeOnBg = mfp.st.closeOnBgClick;\n\n\t\tif(closeOnContent && closeOnBg) {\n\t\t\treturn true;\n\t\t} else {\n\n\t\t\t// We close the popup if click is on close button or on preloader. Or if there is no content.\n\t\t\tif(!mfp.content || $(target).hasClass('mfp-close') || (mfp.preloader && target === mfp.preloader[0]) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// if click is outside the content\n\t\t\tif(  (target !== mfp.content[0] && !$.contains(mfp.content[0], target))  ) {\n\t\t\t\tif(closeOnBg) {\n\t\t\t\t\t// last check, if the clicked element is in DOM, (in case it's removed onclick)\n\t\t\t\t\tif( $.contains(document, target) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if(closeOnContent) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t}\n\t\treturn false;\n\t},\n\t_addClassToMFP: function(cName) {\n\t\tmfp.bgOverlay.addClass(cName);\n\t\tmfp.wrap.addClass(cName);\n\t},\n\t_removeClassFromMFP: function(cName) {\n\t\tthis.bgOverlay.removeClass(cName);\n\t\tmfp.wrap.removeClass(cName);\n\t},\n\t_hasScrollBar: function(winHeight) {\n\t\treturn (  (mfp.isIE7 ? _document.height() : document.body.scrollHeight) > (winHeight || _window.height()) );\n\t},\n\t_setFocus: function() {\n\t\t(mfp.st.focus ? mfp.content.find(mfp.st.focus).eq(0) : mfp.wrap).focus();\n\t},\n\t_onFocusIn: function(e) {\n\t\tif( e.target !== mfp.wrap[0] && !$.contains(mfp.wrap[0], e.target) ) {\n\t\t\tmfp._setFocus();\n\t\t\treturn false;\n\t\t}\n\t},\n\t_parseMarkup: function(template, values, item) {\n\t\tvar arr;\n\t\tif(item.data) {\n\t\t\tvalues = $.extend(item.data, values);\n\t\t}\n\t\t_mfpTrigger(MARKUP_PARSE_EVENT, [template, values, item] );\n\n\t\t$.each(values, function(key, value) {\n\t\t\tif(value === undefined || value === false) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tarr = key.split('_');\n\t\t\tif(arr.length > 1) {\n\t\t\t\tvar el = template.find(EVENT_NS + '-'+arr[0]);\n\n\t\t\t\tif(el.length > 0) {\n\t\t\t\t\tvar attr = arr[1];\n\t\t\t\t\tif(attr === 'replaceWith') {\n\t\t\t\t\t\tif(el[0] !== value[0]) {\n\t\t\t\t\t\t\tel.replaceWith(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(attr === 'img') {\n\t\t\t\t\t\tif(el.is('img')) {\n\t\t\t\t\t\t\tel.attr('src', value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tel.replaceWith( $('<img>').attr('src', value).attr('class', el.attr('class')) );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tel.attr(arr[1], value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\ttemplate.find(EVENT_NS + '-'+key).html(value);\n\t\t\t}\n\t\t});\n\t},\n\n\t_getScrollbarSize: function() {\n\t\t// thx David\n\t\tif(mfp.scrollbarSize === undefined) {\n\t\t\tvar scrollDiv = document.createElement(\"div\");\n\t\t\tscrollDiv.style.cssText = 'width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;';\n\t\t\tdocument.body.appendChild(scrollDiv);\n\t\t\tmfp.scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\t\t\tdocument.body.removeChild(scrollDiv);\n\t\t}\n\t\treturn mfp.scrollbarSize;\n\t}\n\n}; /* MagnificPopup core prototype end */\n\n\n\n\n/**\n * Public static functions\n */\n$.magnificPopup = {\n\tinstance: null,\n\tproto: MagnificPopup.prototype,\n\tmodules: [],\n\n\topen: function(options, index) {\n\t\t_checkInstance();\n\n\t\tif(!options) {\n\t\t\toptions = {};\n\t\t} else {\n\t\t\toptions = $.extend(true, {}, options);\n\t\t}\n\n\t\toptions.isObj = true;\n\t\toptions.index = index || 0;\n\t\treturn this.instance.open(options);\n\t},\n\n\tclose: function() {\n\t\treturn $.magnificPopup.instance && $.magnificPopup.instance.close();\n\t},\n\n\tregisterModule: function(name, module) {\n\t\tif(module.options) {\n\t\t\t$.magnificPopup.defaults[name] = module.options;\n\t\t}\n\t\t$.extend(this.proto, module.proto);\n\t\tthis.modules.push(name);\n\t},\n\n\tdefaults: {\n\n\t\t// Info about options is in docs:\n\t\t// http://dimsemenov.com/plugins/magnific-popup/documentation.html#options\n\n\t\tdisableOn: 0,\n\n\t\tkey: null,\n\n\t\tmidClick: false,\n\n\t\tmainClass: '',\n\n\t\tpreloader: true,\n\n\t\tfocus: '', // CSS selector of input to focus after popup is opened\n\n\t\tcloseOnContentClick: false,\n\n\t\tcloseOnBgClick: true,\n\n\t\tcloseBtnInside: true,\n\n\t\tshowCloseBtn: true,\n\n\t\tenableEscapeKey: true,\n\n\t\tmodal: false,\n\n\t\talignTop: false,\n\n\t\tremovalDelay: 0,\n\n\t\tprependTo: null,\n\n\t\tfixedContentPos: 'auto',\n\n\t\tfixedBgPos: 'auto',\n\n\t\toverflowY: 'auto',\n\n\t\tcloseMarkup: '<button title=\"%title%\" type=\"button\" class=\"mfp-close\">&#215;</button>',\n\n\t\ttClose: 'Close (Esc)',\n\n\t\ttLoading: 'Loading...',\n\n\t\tautoFocusLast: true\n\n\t}\n};\n\n\n\n$.fn.magnificPopup = function(options) {\n\t_checkInstance();\n\n\tvar jqEl = $(this);\n\n\t// We call some API method of first param is a string\n\tif (typeof options === \"string\" ) {\n\n\t\tif(options === 'open') {\n\t\t\tvar items,\n\t\t\t\titemOpts = _isJQ ? jqEl.data('magnificPopup') : jqEl[0].magnificPopup,\n\t\t\t\tindex = parseInt(arguments[1], 10) || 0;\n\n\t\t\tif(itemOpts.items) {\n\t\t\t\titems = itemOpts.items[index];\n\t\t\t} else {\n\t\t\t\titems = jqEl;\n\t\t\t\tif(itemOpts.delegate) {\n\t\t\t\t\titems = items.find(itemOpts.delegate);\n\t\t\t\t}\n\t\t\t\titems = items.eq( index );\n\t\t\t}\n\t\t\tmfp._openClick({mfpEl:items}, jqEl, itemOpts);\n\t\t} else {\n\t\t\tif(mfp.isOpen)\n\t\t\t\tmfp[options].apply(mfp, Array.prototype.slice.call(arguments, 1));\n\t\t}\n\n\t} else {\n\t\t// clone options obj\n\t\toptions = $.extend(true, {}, options);\n\n\t\t/*\n\t\t * As Zepto doesn't support .data() method for objects\n\t\t * and it works only in normal browsers\n\t\t * we assign \"options\" object directly to the DOM element. FTW!\n\t\t */\n\t\tif(_isJQ) {\n\t\t\tjqEl.data('magnificPopup', options);\n\t\t} else {\n\t\t\tjqEl[0].magnificPopup = options;\n\t\t}\n\n\t\tmfp.addGroup(jqEl, options);\n\n\t}\n\treturn jqEl;\n};\n\n/*>>core*/\n\n/*>>inline*/\n\nvar INLINE_NS = 'inline',\n\t_hiddenClass,\n\t_inlinePlaceholder,\n\t_lastInlineElement,\n\t_putInlineElementsBack = function() {\n\t\tif(_lastInlineElement) {\n\t\t\t_inlinePlaceholder.after( _lastInlineElement.addClass(_hiddenClass) ).detach();\n\t\t\t_lastInlineElement = null;\n\t\t}\n\t};\n\n$.magnificPopup.registerModule(INLINE_NS, {\n\toptions: {\n\t\thiddenClass: 'hide', // will be appended with `mfp-` prefix\n\t\tmarkup: '',\n\t\ttNotFound: 'Content not found'\n\t},\n\tproto: {\n\n\t\tinitInline: function() {\n\t\t\tmfp.types.push(INLINE_NS);\n\n\t\t\t_mfpOn(CLOSE_EVENT+'.'+INLINE_NS, function() {\n\t\t\t\t_putInlineElementsBack();\n\t\t\t});\n\t\t},\n\n\t\tgetInline: function(item, template) {\n\n\t\t\t_putInlineElementsBack();\n\n\t\t\tif(item.src) {\n\t\t\t\tvar inlineSt = mfp.st.inline,\n\t\t\t\t\tel = $(item.src);\n\n\t\t\t\tif(el.length) {\n\n\t\t\t\t\t// If target element has parent - we replace it with placeholder and put it back after popup is closed\n\t\t\t\t\tvar parent = el[0].parentNode;\n\t\t\t\t\tif(parent && parent.tagName) {\n\t\t\t\t\t\tif(!_inlinePlaceholder) {\n\t\t\t\t\t\t\t_hiddenClass = inlineSt.hiddenClass;\n\t\t\t\t\t\t\t_inlinePlaceholder = _getEl(_hiddenClass);\n\t\t\t\t\t\t\t_hiddenClass = 'mfp-'+_hiddenClass;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// replace target inline element with placeholder\n\t\t\t\t\t\t_lastInlineElement = el.after(_inlinePlaceholder).detach().removeClass(_hiddenClass);\n\t\t\t\t\t}\n\n\t\t\t\t\tmfp.updateStatus('ready');\n\t\t\t\t} else {\n\t\t\t\t\tmfp.updateStatus('error', inlineSt.tNotFound);\n\t\t\t\t\tel = $('<div>');\n\t\t\t\t}\n\n\t\t\t\titem.inlineElement = el;\n\t\t\t\treturn el;\n\t\t\t}\n\n\t\t\tmfp.updateStatus('ready');\n\t\t\tmfp._parseMarkup(template, {}, item);\n\t\t\treturn template;\n\t\t}\n\t}\n});\n\n/*>>inline*/\n\n/*>>ajax*/\nvar AJAX_NS = 'ajax',\n\t_ajaxCur,\n\t_removeAjaxCursor = function() {\n\t\tif(_ajaxCur) {\n\t\t\t$(document.body).removeClass(_ajaxCur);\n\t\t}\n\t},\n\t_destroyAjaxRequest = function() {\n\t\t_removeAjaxCursor();\n\t\tif(mfp.req) {\n\t\t\tmfp.req.abort();\n\t\t}\n\t};\n\n$.magnificPopup.registerModule(AJAX_NS, {\n\n\toptions: {\n\t\tsettings: null,\n\t\tcursor: 'mfp-ajax-cur',\n\t\ttError: '<a href=\"%url%\">The content</a> could not be loaded.'\n\t},\n\n\tproto: {\n\t\tinitAjax: function() {\n\t\t\tmfp.types.push(AJAX_NS);\n\t\t\t_ajaxCur = mfp.st.ajax.cursor;\n\n\t\t\t_mfpOn(CLOSE_EVENT+'.'+AJAX_NS, _destroyAjaxRequest);\n\t\t\t_mfpOn('BeforeChange.' + AJAX_NS, _destroyAjaxRequest);\n\t\t},\n\t\tgetAjax: function(item) {\n\n\t\t\tif(_ajaxCur) {\n\t\t\t\t$(document.body).addClass(_ajaxCur);\n\t\t\t}\n\n\t\t\tmfp.updateStatus('loading');\n\n\t\t\tvar opts = $.extend({\n\t\t\t\turl: item.src,\n\t\t\t\tsuccess: function(data, textStatus, jqXHR) {\n\t\t\t\t\tvar temp = {\n\t\t\t\t\t\tdata:data,\n\t\t\t\t\t\txhr:jqXHR\n\t\t\t\t\t};\n\n\t\t\t\t\t_mfpTrigger('ParseAjax', temp);\n\n\t\t\t\t\tmfp.appendContent( $(temp.data), AJAX_NS );\n\n\t\t\t\t\titem.finished = true;\n\n\t\t\t\t\t_removeAjaxCursor();\n\n\t\t\t\t\tmfp._setFocus();\n\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tmfp.wrap.addClass(READY_CLASS);\n\t\t\t\t\t}, 16);\n\n\t\t\t\t\tmfp.updateStatus('ready');\n\n\t\t\t\t\t_mfpTrigger('AjaxContentAdded');\n\t\t\t\t},\n\t\t\t\terror: function() {\n\t\t\t\t\t_removeAjaxCursor();\n\t\t\t\t\titem.finished = item.loadError = true;\n\t\t\t\t\tmfp.updateStatus('error', mfp.st.ajax.tError.replace('%url%', item.src));\n\t\t\t\t}\n\t\t\t}, mfp.st.ajax.settings);\n\n\t\t\tmfp.req = $.ajax(opts);\n\n\t\t\treturn '';\n\t\t}\n\t}\n});\n\n/*>>ajax*/\n\n/*>>image*/\nvar _imgInterval,\n\t_getTitle = function(item) {\n\t\tif(item.data && item.data.title !== undefined)\n\t\t\treturn item.data.title;\n\n\t\tvar src = mfp.st.image.titleSrc;\n\n\t\tif(src) {\n\t\t\tif($.isFunction(src)) {\n\t\t\t\treturn src.call(mfp, item);\n\t\t\t} else if(item.el) {\n\t\t\t\treturn item.el.attr(src) || '';\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t};\n\n$.magnificPopup.registerModule('image', {\n\n\toptions: {\n\t\tmarkup: '<div class=\"mfp-figure\">'+\n\t\t\t\t\t'<div class=\"mfp-close\"></div>'+\n\t\t\t\t\t'<figure>'+\n\t\t\t\t\t\t'<div class=\"mfp-img\"></div>'+\n\t\t\t\t\t\t'<figcaption>'+\n\t\t\t\t\t\t\t'<div class=\"mfp-bottom-bar\">'+\n\t\t\t\t\t\t\t\t'<div class=\"mfp-title\"></div>'+\n\t\t\t\t\t\t\t\t'<div class=\"mfp-counter\"></div>'+\n\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t'</figcaption>'+\n\t\t\t\t\t'</figure>'+\n\t\t\t\t'</div>',\n\t\tcursor: 'mfp-zoom-out-cur',\n\t\ttitleSrc: 'title',\n\t\tverticalFit: true,\n\t\ttError: '<a href=\"%url%\">The image</a> could not be loaded.'\n\t},\n\n\tproto: {\n\t\tinitImage: function() {\n\t\t\tvar imgSt = mfp.st.image,\n\t\t\t\tns = '.image';\n\n\t\t\tmfp.types.push('image');\n\n\t\t\t_mfpOn(OPEN_EVENT+ns, function() {\n\t\t\t\tif(mfp.currItem.type === 'image' && imgSt.cursor) {\n\t\t\t\t\t$(document.body).addClass(imgSt.cursor);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_mfpOn(CLOSE_EVENT+ns, function() {\n\t\t\t\tif(imgSt.cursor) {\n\t\t\t\t\t$(document.body).removeClass(imgSt.cursor);\n\t\t\t\t}\n\t\t\t\t_window.off('resize' + EVENT_NS);\n\t\t\t});\n\n\t\t\t_mfpOn('Resize'+ns, mfp.resizeImage);\n\t\t\tif(mfp.isLowIE) {\n\t\t\t\t_mfpOn('AfterChange', mfp.resizeImage);\n\t\t\t}\n\t\t},\n\t\tresizeImage: function() {\n\t\t\tvar item = mfp.currItem;\n\t\t\tif(!item || !item.img) return;\n\n\t\t\tif(mfp.st.image.verticalFit) {\n\t\t\t\tvar decr = 0;\n\t\t\t\t// fix box-sizing in ie7/8\n\t\t\t\tif(mfp.isLowIE) {\n\t\t\t\t\tdecr = parseInt(item.img.css('padding-top'), 10) + parseInt(item.img.css('padding-bottom'),10);\n\t\t\t\t}\n\t\t\t\titem.img.css('max-height', mfp.wH-decr);\n\t\t\t}\n\t\t},\n\t\t_onImageHasSize: function(item) {\n\t\t\tif(item.img) {\n\n\t\t\t\titem.hasSize = true;\n\n\t\t\t\tif(_imgInterval) {\n\t\t\t\t\tclearInterval(_imgInterval);\n\t\t\t\t}\n\n\t\t\t\titem.isCheckingImgSize = false;\n\n\t\t\t\t_mfpTrigger('ImageHasSize', item);\n\n\t\t\t\tif(item.imgHidden) {\n\t\t\t\t\tif(mfp.content)\n\t\t\t\t\t\tmfp.content.removeClass('mfp-loading');\n\n\t\t\t\t\titem.imgHidden = false;\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Function that loops until the image has size to display elements that rely on it asap\n\t\t */\n\t\tfindImageSize: function(item) {\n\n\t\t\tvar counter = 0,\n\t\t\t\timg = item.img[0],\n\t\t\t\tmfpSetInterval = function(delay) {\n\n\t\t\t\t\tif(_imgInterval) {\n\t\t\t\t\t\tclearInterval(_imgInterval);\n\t\t\t\t\t}\n\t\t\t\t\t// decelerating interval that checks for size of an image\n\t\t\t\t\t_imgInterval = setInterval(function() {\n\t\t\t\t\t\tif(img.naturalWidth > 0) {\n\t\t\t\t\t\t\tmfp._onImageHasSize(item);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(counter > 200) {\n\t\t\t\t\t\t\tclearInterval(_imgInterval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\tif(counter === 3) {\n\t\t\t\t\t\t\tmfpSetInterval(10);\n\t\t\t\t\t\t} else if(counter === 40) {\n\t\t\t\t\t\t\tmfpSetInterval(50);\n\t\t\t\t\t\t} else if(counter === 100) {\n\t\t\t\t\t\t\tmfpSetInterval(500);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, delay);\n\t\t\t\t};\n\n\t\t\tmfpSetInterval(1);\n\t\t},\n\n\t\tgetImage: function(item, template) {\n\n\t\t\tvar guard = 0,\n\n\t\t\t\t// image load complete handler\n\t\t\t\tonLoadComplete = function() {\n\t\t\t\t\tif(item) {\n\t\t\t\t\t\tif (item.img[0].complete) {\n\t\t\t\t\t\t\titem.img.off('.mfploader');\n\n\t\t\t\t\t\t\tif(item === mfp.currItem){\n\t\t\t\t\t\t\t\tmfp._onImageHasSize(item);\n\n\t\t\t\t\t\t\t\tmfp.updateStatus('ready');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\titem.hasSize = true;\n\t\t\t\t\t\t\titem.loaded = true;\n\n\t\t\t\t\t\t\t_mfpTrigger('ImageLoadComplete');\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if image complete check fails 200 times (20 sec), we assume that there was an error.\n\t\t\t\t\t\t\tguard++;\n\t\t\t\t\t\t\tif(guard < 200) {\n\t\t\t\t\t\t\t\tsetTimeout(onLoadComplete,100);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tonLoadError();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// image error handler\n\t\t\t\tonLoadError = function() {\n\t\t\t\t\tif(item) {\n\t\t\t\t\t\titem.img.off('.mfploader');\n\t\t\t\t\t\tif(item === mfp.currItem){\n\t\t\t\t\t\t\tmfp._onImageHasSize(item);\n\t\t\t\t\t\t\tmfp.updateStatus('error', imgSt.tError.replace('%url%', item.src) );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\titem.hasSize = true;\n\t\t\t\t\t\titem.loaded = true;\n\t\t\t\t\t\titem.loadError = true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\timgSt = mfp.st.image;\n\n\n\t\t\tvar el = template.find('.mfp-img');\n\t\t\tif(el.length) {\n\t\t\t\tvar img = document.createElement('img');\n\t\t\t\timg.className = 'mfp-img';\n\t\t\t\tif(item.el && item.el.find('img').length) {\n\t\t\t\t\timg.alt = item.el.find('img').attr('alt');\n\t\t\t\t}\n\t\t\t\titem.img = $(img).on('load.mfploader', onLoadComplete).on('error.mfploader', onLoadError);\n\t\t\t\timg.src = item.src;\n\n\t\t\t\t// without clone() \"error\" event is not firing when IMG is replaced by new IMG\n\t\t\t\t// TODO: find a way to avoid such cloning\n\t\t\t\tif(el.is('img')) {\n\t\t\t\t\titem.img = item.img.clone();\n\t\t\t\t}\n\n\t\t\t\timg = item.img[0];\n\t\t\t\tif(img.naturalWidth > 0) {\n\t\t\t\t\titem.hasSize = true;\n\t\t\t\t} else if(!img.width) {\n\t\t\t\t\titem.hasSize = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmfp._parseMarkup(template, {\n\t\t\t\ttitle: _getTitle(item),\n\t\t\t\timg_replaceWith: item.img\n\t\t\t}, item);\n\n\t\t\tmfp.resizeImage();\n\n\t\t\tif(item.hasSize) {\n\t\t\t\tif(_imgInterval) clearInterval(_imgInterval);\n\n\t\t\t\tif(item.loadError) {\n\t\t\t\t\ttemplate.addClass('mfp-loading');\n\t\t\t\t\tmfp.updateStatus('error', imgSt.tError.replace('%url%', item.src) );\n\t\t\t\t} else {\n\t\t\t\t\ttemplate.removeClass('mfp-loading');\n\t\t\t\t\tmfp.updateStatus('ready');\n\t\t\t\t}\n\t\t\t\treturn template;\n\t\t\t}\n\n\t\t\tmfp.updateStatus('loading');\n\t\t\titem.loading = true;\n\n\t\t\tif(!item.hasSize) {\n\t\t\t\titem.imgHidden = true;\n\t\t\t\ttemplate.addClass('mfp-loading');\n\t\t\t\tmfp.findImageSize(item);\n\t\t\t}\n\n\t\t\treturn template;\n\t\t}\n\t}\n});\n\n/*>>image*/\n\n/*>>zoom*/\nvar hasMozTransform,\n\tgetHasMozTransform = function() {\n\t\tif(hasMozTransform === undefined) {\n\t\t\thasMozTransform = document.createElement('p').style.MozTransform !== undefined;\n\t\t}\n\t\treturn hasMozTransform;\n\t};\n\n$.magnificPopup.registerModule('zoom', {\n\n\toptions: {\n\t\tenabled: false,\n\t\teasing: 'ease-in-out',\n\t\tduration: 300,\n\t\topener: function(element) {\n\t\t\treturn element.is('img') ? element : element.find('img');\n\t\t}\n\t},\n\n\tproto: {\n\n\t\tinitZoom: function() {\n\t\t\tvar zoomSt = mfp.st.zoom,\n\t\t\t\tns = '.zoom',\n\t\t\t\timage;\n\n\t\t\tif(!zoomSt.enabled || !mfp.supportsTransition) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar duration = zoomSt.duration,\n\t\t\t\tgetElToAnimate = function(image) {\n\t\t\t\t\tvar newImg = image.clone().removeAttr('style').removeAttr('class').addClass('mfp-animated-image'),\n\t\t\t\t\t\ttransition = 'all '+(zoomSt.duration/1000)+'s ' + zoomSt.easing,\n\t\t\t\t\t\tcssObj = {\n\t\t\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\t\t\tzIndex: 9999,\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t'-webkit-backface-visibility': 'hidden'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tt = 'transition';\n\n\t\t\t\t\tcssObj['-webkit-'+t] = cssObj['-moz-'+t] = cssObj['-o-'+t] = cssObj[t] = transition;\n\n\t\t\t\t\tnewImg.css(cssObj);\n\t\t\t\t\treturn newImg;\n\t\t\t\t},\n\t\t\t\tshowMainContent = function() {\n\t\t\t\t\tmfp.content.css('visibility', 'visible');\n\t\t\t\t},\n\t\t\t\topenTimeout,\n\t\t\t\tanimatedImg;\n\n\t\t\t_mfpOn('BuildControls'+ns, function() {\n\t\t\t\tif(mfp._allowZoom()) {\n\n\t\t\t\t\tclearTimeout(openTimeout);\n\t\t\t\t\tmfp.content.css('visibility', 'hidden');\n\n\t\t\t\t\t// Basically, all code below does is clones existing image, puts in on top of the current one and animated it\n\n\t\t\t\t\timage = mfp._getItemToZoom();\n\n\t\t\t\t\tif(!image) {\n\t\t\t\t\t\tshowMainContent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tanimatedImg = getElToAnimate(image);\n\n\t\t\t\t\tanimatedImg.css( mfp._getOffset() );\n\n\t\t\t\t\tmfp.wrap.append(animatedImg);\n\n\t\t\t\t\topenTimeout = setTimeout(function() {\n\t\t\t\t\t\tanimatedImg.css( mfp._getOffset( true ) );\n\t\t\t\t\t\topenTimeout = setTimeout(function() {\n\n\t\t\t\t\t\t\tshowMainContent();\n\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\tanimatedImg.remove();\n\t\t\t\t\t\t\t\timage = animatedImg = null;\n\t\t\t\t\t\t\t\t_mfpTrigger('ZoomAnimationEnded');\n\t\t\t\t\t\t\t}, 16); // avoid blink when switching images\n\n\t\t\t\t\t\t}, duration); // this timeout equals animation duration\n\n\t\t\t\t\t}, 16); // by adding this timeout we avoid short glitch at the beginning of animation\n\n\n\t\t\t\t\t// Lots of timeouts...\n\t\t\t\t}\n\t\t\t});\n\t\t\t_mfpOn(BEFORE_CLOSE_EVENT+ns, function() {\n\t\t\t\tif(mfp._allowZoom()) {\n\n\t\t\t\t\tclearTimeout(openTimeout);\n\n\t\t\t\t\tmfp.st.removalDelay = duration;\n\n\t\t\t\t\tif(!image) {\n\t\t\t\t\t\timage = mfp._getItemToZoom();\n\t\t\t\t\t\tif(!image) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tanimatedImg = getElToAnimate(image);\n\t\t\t\t\t}\n\n\t\t\t\t\tanimatedImg.css( mfp._getOffset(true) );\n\t\t\t\t\tmfp.wrap.append(animatedImg);\n\t\t\t\t\tmfp.content.css('visibility', 'hidden');\n\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tanimatedImg.css( mfp._getOffset() );\n\t\t\t\t\t}, 16);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t_mfpOn(CLOSE_EVENT+ns, function() {\n\t\t\t\tif(mfp._allowZoom()) {\n\t\t\t\t\tshowMainContent();\n\t\t\t\t\tif(animatedImg) {\n\t\t\t\t\t\tanimatedImg.remove();\n\t\t\t\t\t}\n\t\t\t\t\timage = null;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_allowZoom: function() {\n\t\t\treturn mfp.currItem.type === 'image';\n\t\t},\n\n\t\t_getItemToZoom: function() {\n\t\t\tif(mfp.currItem.hasSize) {\n\t\t\t\treturn mfp.currItem.img;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\t// Get element postion relative to viewport\n\t\t_getOffset: function(isLarge) {\n\t\t\tvar el;\n\t\t\tif(isLarge) {\n\t\t\t\tel = mfp.currItem.img;\n\t\t\t} else {\n\t\t\t\tel = mfp.st.zoom.opener(mfp.currItem.el || mfp.currItem);\n\t\t\t}\n\n\t\t\tvar offset = el.offset();\n\t\t\tvar paddingTop = parseInt(el.css('padding-top'),10);\n\t\t\tvar paddingBottom = parseInt(el.css('padding-bottom'),10);\n\t\t\toffset.top -= ( $(window).scrollTop() - paddingTop );\n\n\n\t\t\t/*\n\n\t\t\tAnimating left + top + width/height looks glitchy in Firefox, but perfect in Chrome. And vice-versa.\n\n\t\t\t */\n\t\t\tvar obj = {\n\t\t\t\twidth: el.width(),\n\t\t\t\t// fix Zepto height+padding issue\n\t\t\t\theight: (_isJQ ? el.innerHeight() : el[0].offsetHeight) - paddingBottom - paddingTop\n\t\t\t};\n\n\t\t\t// I hate to do this, but there is no another option\n\t\t\tif( getHasMozTransform() ) {\n\t\t\t\tobj['-moz-transform'] = obj['transform'] = 'translate(' + offset.left + 'px,' + offset.top + 'px)';\n\t\t\t} else {\n\t\t\t\tobj.left = offset.left;\n\t\t\t\tobj.top = offset.top;\n\t\t\t}\n\t\t\treturn obj;\n\t\t}\n\n\t}\n});\n\n\n\n/*>>zoom*/\n\n/*>>iframe*/\n\nvar IFRAME_NS = 'iframe',\n\t_emptyPage = '//about:blank',\n\n\t_fixIframeBugs = function(isShowing) {\n\t\tif(mfp.currTemplate[IFRAME_NS]) {\n\t\t\tvar el = mfp.currTemplate[IFRAME_NS].find('iframe');\n\t\t\tif(el.length) {\n\t\t\t\t// reset src after the popup is closed to avoid \"video keeps playing after popup is closed\" bug\n\t\t\t\tif(!isShowing) {\n\t\t\t\t\tel[0].src = _emptyPage;\n\t\t\t\t}\n\n\t\t\t\t// IE8 black screen bug fix\n\t\t\t\tif(mfp.isIE8) {\n\t\t\t\t\tel.css('display', isShowing ? 'block' : 'none');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n$.magnificPopup.registerModule(IFRAME_NS, {\n\n\toptions: {\n\t\tmarkup: '<div class=\"mfp-iframe-scaler\">'+\n\t\t\t\t\t'<div class=\"mfp-close\"></div>'+\n\t\t\t\t\t'<iframe class=\"mfp-iframe\" src=\"//about:blank\" frameborder=\"0\" allowfullscreen></iframe>'+\n\t\t\t\t'</div>',\n\n\t\tsrcAction: 'iframe_src',\n\n\t\t// we don't care and support only one default type of URL by default\n\t\tpatterns: {\n\t\t\tyoutube: {\n\t\t\t\tindex: 'youtube.com',\n\t\t\t\tid: 'v=',\n\t\t\t\tsrc: '//www.youtube.com/embed/%id%?autoplay=1'\n\t\t\t},\n\t\t\tvimeo: {\n\t\t\t\tindex: 'vimeo.com/',\n\t\t\t\tid: '/',\n\t\t\t\tsrc: '//player.vimeo.com/video/%id%?autoplay=1'\n\t\t\t},\n\t\t\tgmaps: {\n\t\t\t\tindex: '//maps.google.',\n\t\t\t\tsrc: '%id%&output=embed'\n\t\t\t}\n\t\t}\n\t},\n\n\tproto: {\n\t\tinitIframe: function() {\n\t\t\tmfp.types.push(IFRAME_NS);\n\n\t\t\t_mfpOn('BeforeChange', function(e, prevType, newType) {\n\t\t\t\tif(prevType !== newType) {\n\t\t\t\t\tif(prevType === IFRAME_NS) {\n\t\t\t\t\t\t_fixIframeBugs(); // iframe if removed\n\t\t\t\t\t} else if(newType === IFRAME_NS) {\n\t\t\t\t\t\t_fixIframeBugs(true); // iframe is showing\n\t\t\t\t\t}\n\t\t\t\t}// else {\n\t\t\t\t\t// iframe source is switched, don't do anything\n\t\t\t\t//}\n\t\t\t});\n\n\t\t\t_mfpOn(CLOSE_EVENT + '.' + IFRAME_NS, function() {\n\t\t\t\t_fixIframeBugs();\n\t\t\t});\n\t\t},\n\n\t\tgetIframe: function(item, template) {\n\t\t\tvar embedSrc = item.src;\n\t\t\tvar iframeSt = mfp.st.iframe;\n\n\t\t\t$.each(iframeSt.patterns, function() {\n\t\t\t\tif(embedSrc.indexOf( this.index ) > -1) {\n\t\t\t\t\tif(this.id) {\n\t\t\t\t\t\tif(typeof this.id === 'string') {\n\t\t\t\t\t\t\tembedSrc = embedSrc.substr(embedSrc.lastIndexOf(this.id)+this.id.length, embedSrc.length);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tembedSrc = this.id.call( this, embedSrc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tembedSrc = this.src.replace('%id%', embedSrc );\n\t\t\t\t\treturn false; // break;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar dataObj = {};\n\t\t\tif(iframeSt.srcAction) {\n\t\t\t\tdataObj[iframeSt.srcAction] = embedSrc;\n\t\t\t}\n\t\t\tmfp._parseMarkup(template, dataObj, item);\n\n\t\t\tmfp.updateStatus('ready');\n\n\t\t\treturn template;\n\t\t}\n\t}\n});\n\n\n\n/*>>iframe*/\n\n/*>>gallery*/\n/**\n * Get looped index depending on number of slides\n */\nvar _getLoopedId = function(index) {\n\t\tvar numSlides = mfp.items.length;\n\t\tif(index > numSlides - 1) {\n\t\t\treturn index - numSlides;\n\t\t} else  if(index < 0) {\n\t\t\treturn numSlides + index;\n\t\t}\n\t\treturn index;\n\t},\n\t_replaceCurrTotal = function(text, curr, total) {\n\t\treturn text.replace(/%curr%/gi, curr + 1).replace(/%total%/gi, total);\n\t};\n\n$.magnificPopup.registerModule('gallery', {\n\n\toptions: {\n\t\tenabled: false,\n\t\tarrowMarkup: '<button title=\"%title%\" type=\"button\" class=\"mfp-arrow mfp-arrow-%dir%\"></button>',\n\t\tpreload: [0,2],\n\t\tnavigateByImgClick: true,\n\t\tarrows: true,\n\n\t\ttPrev: 'Previous (Left arrow key)',\n\t\ttNext: 'Next (Right arrow key)',\n\t\ttCounter: '%curr% of %total%'\n\t},\n\n\tproto: {\n\t\tinitGallery: function() {\n\n\t\t\tvar gSt = mfp.st.gallery,\n\t\t\t\tns = '.mfp-gallery';\n\n\t\t\tmfp.direction = true; // true - next, false - prev\n\n\t\t\tif(!gSt || !gSt.enabled ) return false;\n\n\t\t\t_wrapClasses += ' mfp-gallery';\n\n\t\t\t_mfpOn(OPEN_EVENT+ns, function() {\n\n\t\t\t\tif(gSt.navigateByImgClick) {\n\t\t\t\t\tmfp.wrap.on('click'+ns, '.mfp-img', function() {\n\t\t\t\t\t\tif(mfp.items.length > 1) {\n\t\t\t\t\t\t\tmfp.next();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t_document.on('keydown'+ns, function(e) {\n\t\t\t\t\tif (e.keyCode === 37) {\n\t\t\t\t\t\tmfp.prev();\n\t\t\t\t\t} else if (e.keyCode === 39) {\n\t\t\t\t\t\tmfp.next();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t_mfpOn('UpdateStatus'+ns, function(e, data) {\n\t\t\t\tif(data.text) {\n\t\t\t\t\tdata.text = _replaceCurrTotal(data.text, mfp.currItem.index, mfp.items.length);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_mfpOn(MARKUP_PARSE_EVENT+ns, function(e, element, values, item) {\n\t\t\t\tvar l = mfp.items.length;\n\t\t\t\tvalues.counter = l > 1 ? _replaceCurrTotal(gSt.tCounter, item.index, l) : '';\n\t\t\t});\n\n\t\t\t_mfpOn('BuildControls' + ns, function() {\n\t\t\t\tif(mfp.items.length > 1 && gSt.arrows && !mfp.arrowLeft) {\n\t\t\t\t\tvar markup = gSt.arrowMarkup,\n\t\t\t\t\t\tarrowLeft = mfp.arrowLeft = $( markup.replace(/%title%/gi, gSt.tPrev).replace(/%dir%/gi, 'left') ).addClass(PREVENT_CLOSE_CLASS),\n\t\t\t\t\t\tarrowRight = mfp.arrowRight = $( markup.replace(/%title%/gi, gSt.tNext).replace(/%dir%/gi, 'right') ).addClass(PREVENT_CLOSE_CLASS);\n\n\t\t\t\t\tarrowLeft.click(function() {\n\t\t\t\t\t\tmfp.prev();\n\t\t\t\t\t});\n\t\t\t\t\tarrowRight.click(function() {\n\t\t\t\t\t\tmfp.next();\n\t\t\t\t\t});\n\n\t\t\t\t\tmfp.container.append(arrowLeft.add(arrowRight));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_mfpOn(CHANGE_EVENT+ns, function() {\n\t\t\t\tif(mfp._preloadTimeout) clearTimeout(mfp._preloadTimeout);\n\n\t\t\t\tmfp._preloadTimeout = setTimeout(function() {\n\t\t\t\t\tmfp.preloadNearbyImages();\n\t\t\t\t\tmfp._preloadTimeout = null;\n\t\t\t\t}, 16);\n\t\t\t});\n\n\n\t\t\t_mfpOn(CLOSE_EVENT+ns, function() {\n\t\t\t\t_document.off(ns);\n\t\t\t\tmfp.wrap.off('click'+ns);\n\t\t\t\tmfp.arrowRight = mfp.arrowLeft = null;\n\t\t\t});\n\n\t\t},\n\t\tnext: function() {\n\t\t\tmfp.direction = true;\n\t\t\tmfp.index = _getLoopedId(mfp.index + 1);\n\t\t\tmfp.updateItemHTML();\n\t\t},\n\t\tprev: function() {\n\t\t\tmfp.direction = false;\n\t\t\tmfp.index = _getLoopedId(mfp.index - 1);\n\t\t\tmfp.updateItemHTML();\n\t\t},\n\t\tgoTo: function(newIndex) {\n\t\t\tmfp.direction = (newIndex >= mfp.index);\n\t\t\tmfp.index = newIndex;\n\t\t\tmfp.updateItemHTML();\n\t\t},\n\t\tpreloadNearbyImages: function() {\n\t\t\tvar p = mfp.st.gallery.preload,\n\t\t\t\tpreloadBefore = Math.min(p[0], mfp.items.length),\n\t\t\t\tpreloadAfter = Math.min(p[1], mfp.items.length),\n\t\t\t\ti;\n\n\t\t\tfor(i = 1; i <= (mfp.direction ? preloadAfter : preloadBefore); i++) {\n\t\t\t\tmfp._preloadItem(mfp.index+i);\n\t\t\t}\n\t\t\tfor(i = 1; i <= (mfp.direction ? preloadBefore : preloadAfter); i++) {\n\t\t\t\tmfp._preloadItem(mfp.index-i);\n\t\t\t}\n\t\t},\n\t\t_preloadItem: function(index) {\n\t\t\tindex = _getLoopedId(index);\n\n\t\t\tif(mfp.items[index].preloaded) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar item = mfp.items[index];\n\t\t\tif(!item.parsed) {\n\t\t\t\titem = mfp.parseEl( index );\n\t\t\t}\n\n\t\t\t_mfpTrigger('LazyLoad', item);\n\n\t\t\tif(item.type === 'image') {\n\t\t\t\titem.img = $('<img class=\"mfp-img\" />').on('load.mfploader', function() {\n\t\t\t\t\titem.hasSize = true;\n\t\t\t\t}).on('error.mfploader', function() {\n\t\t\t\t\titem.hasSize = true;\n\t\t\t\t\titem.loadError = true;\n\t\t\t\t\t_mfpTrigger('LazyLoadError', item);\n\t\t\t\t}).attr('src', item.src);\n\t\t\t}\n\n\n\t\t\titem.preloaded = true;\n\t\t}\n\t}\n});\n\n/*>>gallery*/\n\n/*>>retina*/\n\nvar RETINA_NS = 'retina';\n\n$.magnificPopup.registerModule(RETINA_NS, {\n\toptions: {\n\t\treplaceSrc: function(item) {\n\t\t\treturn item.src.replace(/\\.\\w+$/, function(m) { return '@2x' + m; });\n\t\t},\n\t\tratio: 1 // Function or number.  Set to 1 to disable.\n\t},\n\tproto: {\n\t\tinitRetina: function() {\n\t\t\tif(window.devicePixelRatio > 1) {\n\n\t\t\t\tvar st = mfp.st.retina,\n\t\t\t\t\tratio = st.ratio;\n\n\t\t\t\tratio = !isNaN(ratio) ? ratio : ratio();\n\n\t\t\t\tif(ratio > 1) {\n\t\t\t\t\t_mfpOn('ImageHasSize' + '.' + RETINA_NS, function(e, item) {\n\t\t\t\t\t\titem.img.css({\n\t\t\t\t\t\t\t'max-width': item.img[0].naturalWidth / ratio,\n\t\t\t\t\t\t\t'width': '100%'\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t_mfpOn('ElementParse' + '.' + RETINA_NS, function(e, item) {\n\t\t\t\t\t\titem.src = st.replaceSrc(item, ratio);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n});\n\n/*>>retina*/\n _checkInstance(); }));"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.346Z",
        "time": 0.15499999426538125,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.1359999951091595,
          "receive": 0.018999999156221747,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 966
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/js/trx_addons.utils.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:53 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:09 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"4edb-5873f96f6cf40-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "5982"
            }
          ],
          "cookies": [],
          "content": {
            "size": 20187,
            "mimeType": "application/javascript",
            "text": "/**\n * JS utilities\n *\n * @package WordPress\n * @subpackage ThemeREX Addons\n * @since v1.0\n */\n\n/* global jQuery:false */\n/* global TRX_ADDONS_STORAGE:false */\n\n(function() {\n\n\t\"use strict\";\n\t\n\t/* Cookies manipulations\n\t---------------------------------------------------------------- */\n\t\n\twindow.trx_addons_get_cookie = function(name) {\n\t\tvar defa = arguments[1]!=undefined ? arguments[1] : null;\n\t\tvar start = document.cookie.indexOf(name + '=');\n\t\tvar len = start + name.length + 1;\n\t\tif ((!start) && (name != document.cookie.substring(0, name.length))) {\n\t\t\treturn defa;\n\t\t}\n\t\tif (start == -1)\n\t\t\treturn defa;\n\t\tvar end = document.cookie.indexOf(';', len);\n\t\tif (end == -1)\n\t\t\tend = document.cookie.length;\n\t\treturn unescape(document.cookie.substring(len, end));\n\t};\n\t\n\t\n\twindow.trx_addons_set_cookie = function(name, value, expires, path, domain, secure) {\n\t\tvar expires = arguments[2]!=undefined ? arguments[2] : 0;\n\t\tvar path    = arguments[3]!=undefined ? arguments[3] : '/';\n\t\tvar domain  = arguments[4]!=undefined ? arguments[4] : '';\n\t\tvar secure  = arguments[5]!=undefined ? arguments[5] : '';\n\t\tvar today = new Date();\n\t\ttoday.setTime(today.getTime());\n\t\tif (expires) {\n\t\t\texpires = expires * 1000 * 60 * 60 * 24;\n\t\t}\n\t\tvar expires_date = new Date(today.getTime() + (expires));\n\t\tdocument.cookie = name + '='\n\t\t\t\t+ escape(value)\n\t\t\t\t+ ((expires) ? ';expires=' + expires_date.toGMTString() : '')\n\t\t\t\t+ ((path)    ? ';path=' + path : '')\n\t\t\t\t+ ((domain)  ? ';domain=' + domain : '')\n\t\t\t\t+ ((secure)  ? ';secure' : '');\n\t};\n\t\n\t\n\twindow.trx_addons_del_cookie = function(name, path, domain) {\n\t\tvar path   = arguments[1]!=undefined ? arguments[1] : '/';\n\t\tvar domain = arguments[2]!=undefined ? arguments[2] : '';\n\t\tif (trx_addons_get_cookie(name))\n\t\t\tdocument.cookie = name + '=' + ((path) ? ';path=' + path : '')\n\t\t\t\t\t+ ((domain) ? ';domain=' + domain : '')\n\t\t\t\t\t+ ';expires=Thu, 01-Jan-1970 00:00:01 GMT';\n\t};\n\t\n\t\n\t\n\t/* ListBox and ComboBox manipulations\n\t---------------------------------------------------------------- */\n\t\n\twindow.trx_addons_clear_listbox = function(box) {\n\t\tfor (var i=box.options.length-1; i>=0; i--)\n\t\t\tbox.options[i] = null;\n\t};\n\t\n\twindow.trx_addons_add_listbox_item = function(box, val, text) {\n\t\tvar item = new Option();\n\t\titem.value = val;\n\t\titem.text = text;\n\t\tbox.options.add(item);\n\t};\n\t\n\twindow.trx_addons_del_listbox_item_by_value = function(box, val) {\n\t\tfor (var i=0; i<box.options.length; i++) {\n\t\t\tif (box.options[i].value == val) {\n\t\t\t\tbox.options[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\t\n\twindow.trx_addons_del_listbox_item_by_text = function(box, txt) {\n\t\tfor (var i=0; i<box.options.length; i++) {\n\t\t\tif (box.options[i].text == txt) {\n\t\t\t\tbox.options[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\t\n\twindow.trx_addons_find_listbox_item_by_value = function(box, val) {\n\t\tvar idx = -1;\n\t\tfor (var i=0; i<box.options.length; i++) {\n\t\t\tif (box.options[i].value == val) {\n\t\t\t\tidx = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t};\n\t\n\twindow.trx_addons_find_listbox_item_by_text = function(box, txt) {\n\t\tvar idx = -1;\n\t\tfor (var i=0; i<box.options.length; i++) {\n\t\t\tif (box.options[i].text == txt) {\n\t\t\t\tidx = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t};\n\t\n\twindow.trx_addons_select_listbox_item_by_value = function(box, val) {\n\t\tfor (var i = 0; i < box.options.length; i++) {\n\t\t\tbox.options[i].selected = (val == box.options[i].value);\n\t\t}\n\t};\n\t\n\twindow.trx_addons_select_listbox_item_by_text = function(box, txt) {\n\t\tfor (var i = 0; i < box.options.length; i++) {\n\t\t\tbox.options[i].selected = (txt == box.options[i].text);\n\t\t}\n\t};\n\t\n\twindow.trx_addons_get_listbox_values = function(box) {\n\t\tvar delim = arguments[1] ? arguments[1] : ',';\n\t\tvar str = '';\n\t\tfor (var i=0; i<box.options.length; i++) {\n\t\t\tstr += (str ? delim : '') + box.options[i].value;\n\t\t}\n\t\treturn str;\n\t};\n\t\n\twindow.trx_addons_get_listbox_texts = function(box) {\n\t\tvar delim = arguments[1] ? arguments[1] : ',';\n\t\tvar str = '';\n\t\tfor (var i=0; i<box.options.length; i++) {\n\t\t\tstr += (str ? delim : '') + box.options[i].text;\n\t\t}\n\t\treturn str;\n\t};\n\t\n\twindow.trx_addons_sort_listbox = function(box)  {\n\t\tvar temp_opts = new Array();\n\t\tvar temp = new Option();\n\t\tfor(var i=0; i<box.options.length; i++)  {\n\t\t\ttemp_opts[i] = box.options[i].clone();\n\t\t}\n\t\tfor(var x=0; x<temp_opts.length-1; x++)  {\n\t\t\tfor(var y=(x+1); y<temp_opts.length; y++)  {\n\t\t\t\tif(temp_opts[x].text > temp_opts[y].text)  {\n\t\t\t\t\ttemp = temp_opts[x];\n\t\t\t\t\ttemp_opts[x] = temp_opts[y];\n\t\t\t\t\ttemp_opts[y] = temp;\n\t\t\t\t}  \n\t\t\t}  \n\t\t}\n\t\tfor(var i=0; i<box.options.length; i++)  {\n\t\t\tbox.options[i] = temp_opts[i].clone();\n\t\t}\n\t};\n\t\n\twindow.trx_addons_get_listbox_selected_index = function(box) {\n\t\tfor (var i = 0; i < box.options.length; i++) {\n\t\t\tif (box.options[i].selected)\n\t\t\t\treturn i;\n\t\t}\n\t\treturn -1;\n\t};\n\t\n\twindow.trx_addons_get_listbox_selected_value = function(box) {\n\t\tfor (var i = 0; i < box.options.length; i++) {\n\t\t\tif (box.options[i].selected) {\n\t\t\t\treturn box.options[i].value;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\t\n\twindow.trx_addons_get_listbox_selected_text = function(box) {\n\t\tfor (var i = 0; i < box.options.length; i++) {\n\t\t\tif (box.options[i].selected) {\n\t\t\t\treturn box.options[i].text;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\t\n\twindow.trx_addons_get_listbox_selected_option = function(box) {\n\t\tfor (var i = 0; i < box.options.length; i++) {\n\t\t\tif (box.options[i].selected) {\n\t\t\t\treturn box.options[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\t\n\t\n\t\n\t/* Radio buttons manipulations\n\t---------------------------------------------------------------- */\n\t\n\twindow.trx_addons_get_radio_value = function(radioGroupObj) {\n\t\tfor (var i=0; i < radioGroupObj.length; i++)\n\t\t\tif (radioGroupObj[i].checked) return radioGroupObj[i].value;\n\t\treturn null;\n\t};\n\t\n\twindow.trx_addons_set_radio_checked_by_num = function(radioGroupObj, num) {\n\t\tfor (var i=0; i < radioGroupObj.length; i++)\n\t\t\tif (radioGroupObj[i].checked && i!=num) radioGroupObj[i].checked=false;\n\t\t\telse if (i==num) radioGroupObj[i].checked=true;\n\t};\n\t\n\twindow.trx_addons_set_radio_checked_by_value = function(radioGroupObj, val) {\n\t\tfor (var i=0; i < radioGroupObj.length; i++)\n\t\t\tif (radioGroupObj[i].checked && radioGroupObj[i].value!=val) radioGroupObj[i].checked=false;\n\t\t\telse if (radioGroupObj[i].value==val) radioGroupObj[i].checked=true;\n\t};\n\t\n\t\n\t\n\t/* Form validation\n\t---------------------------------------------------------------- */\n\t\n\t/*\n\t// Usage example:\n\tvar error = trx_addons_form_validate(jQuery(form_selector), {\t// -------- Options ---------\n\t\terror_message_show: true,\t\t\t\t\t\t\t\t\t// Display or not error message\n\t\terror_message_time: 5000,\t\t\t\t\t\t\t\t\t// Time to display error message\n\t\terror_message_class: 'trx_addons_message_box_error',\t\t// Class, appended to error message block\n\t\terror_message_text: 'Global error text',\t\t\t\t\t// Global error message text (if not specify message in the checked field)\n\t\terror_fields_class: 'trx_addons_field_error',\t\t\t\t// Class, appended to error fields\n\t\texit_after_first_error: false,\t\t\t\t\t\t\t\t// Cancel validation and exit after first error\n\t\trules: [\n\t\t\t{\n\t\t\t\tfield: 'author',\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Checking field name\n\t\t\t\tmin_length: { value: 1,\t message: 'The author name can\\'t be empty' },\t\t\t// Min character count (0 - don't check), message - if error occurs\n\t\t\t\tmax_length: { value: 60, message: 'Too long author name'}\t\t\t\t\t\t// Max character count (0 - don't check), message - if error occurs\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'email',\n\t\t\t\tmin_length: { value: 7,\t message: 'Too short (or empty) email address' },\n\t\t\t\tmax_length: { value: 60, message: 'Too long email address'},\n\t\t\t\tmask: { value: '^([a-z0-9_\\\\-]+\\\\.)*[a-z0-9_\\\\-]+@[a-z0-9_\\\\-]+(\\\\.[a-z0-9_\\\\-]+)*\\\\.[a-z]{2,6}$', message: 'Invalid email address'}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'comment',\n\t\t\t\tmin_length: { value: 1,\t message: 'The comment text can\\'t be empty' },\n\t\t\t\tmax_length: { value: 200, message: 'Too long comment'}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'pwd1',\n\t\t\t\tmin_length: { value: 5,\t message: 'The password can\\'t be less then 5 characters' },\n\t\t\t\tmax_length: { value: 20, message: 'Too long password'}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'pwd2',\n\t\t\t\tequal_to: { value: 'pwd1',\t message: 'The passwords in both fields must be equals' }\n\t\t\t}\n\t\t]\n\t});\n\t*/\n\t\n\twindow.trx_addons_form_validate = function(form, opt) {\n\t\t// Default options\n\t\tif (typeof(opt.error_message_show)=='undefined')\t\topt.error_message_show = true;\n\t\tif (typeof(opt.error_message_time)=='undefined')\t\topt.error_message_time = 5000;\n\t\tif (typeof(opt.error_message_class)=='undefined')\t\topt.error_message_class = 'trx_addons_message_box_error';\n\t\tif (typeof(opt.error_message_text)=='undefined')\t\topt.error_message_text = 'Incorrect data in the fields!';\n\t\tif (typeof(opt.error_fields_class)=='undefined')\t\topt.error_fields_class = 'trx_addons_field_error';\n\t\tif (typeof(opt.exit_after_first_error)=='undefined')\topt.exit_after_first_error = false;\n\t\t// Validate fields\n\t\tvar error_msg = '';\n\t\tform.find(\":input\").each(function() {\n\t\t\tif (error_msg!='' && opt.exit_after_first_error) return;\n\t\t\tfor (var i = 0; i < opt.rules.length; i++) {\n\t\t\t\tif (jQuery(this).attr(\"name\") == opt.rules[i].field) {\n\t\t\t\t\tvar val = jQuery(this).val();\n\t\t\t\t\tvar error = false;\n\t\t\t\t\tif (typeof(opt.rules[i].min_length) == 'object') {\n\t\t\t\t\t\tif (opt.rules[i].min_length.value > 0 && val.length < opt.rules[i].min_length.value) {\n\t\t\t\t\t\t\tif (error_msg=='') jQuery(this).get(0).focus();\n\t\t\t\t\t\t\terror_msg += '<p class=\"trx_addons_error_item\">' + (typeof(opt.rules[i].min_length.message)!='undefined' ? opt.rules[i].min_length.message : opt.error_message_text ) + '</p>';\n\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((!error || !opt.exit_after_first_error) && typeof(opt.rules[i].max_length) == 'object') {\n\t\t\t\t\t\tif (opt.rules[i].max_length.value > 0 && val.length > opt.rules[i].max_length.value) {\n\t\t\t\t\t\t\tif (error_msg=='') jQuery(this).get(0).focus();\n\t\t\t\t\t\t\terror_msg += '<p class=\"trx_addons_error_item\">' + (typeof(opt.rules[i].max_length.message)!='undefined' ? opt.rules[i].max_length.message : opt.error_message_text ) + '</p>';\n\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((!error || !opt.exit_after_first_error) && typeof(opt.rules[i].mask) == 'object') {\n\t\t\t\t\t\tif (opt.rules[i].mask.value != '') {\n\t\t\t\t\t\t\tvar regexp = new RegExp(opt.rules[i].mask.value);\n\t\t\t\t\t\t\tif (!regexp.test(val)) {\n\t\t\t\t\t\t\t\tif (error_msg=='') jQuery(this).get(0).focus();\n\t\t\t\t\t\t\t\terror_msg += '<p class=\"trx_addons_error_item\">' + (typeof(opt.rules[i].mask.message)!='undefined' ? opt.rules[i].mask.message : opt.error_message_text ) + '</p>';\n\t\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((!error || !opt.exit_after_first_error) && typeof(opt.rules[i].state) == 'object') {\n\t\t\t\t\t\tif (opt.rules[i].state.value=='checked' && !jQuery(this).get(0).checked) {\n\t\t\t\t\t\t\tif (error_msg=='') jQuery(this).get(0).focus();\n\t\t\t\t\t\t\terror_msg += '<p class=\"trx_addons_error_item\">' + (typeof(opt.rules[i].state.message)!='undefined' ? opt.rules[i].state.message : opt.error_message_text ) + '</p>';\n\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((!error || !opt.exit_after_first_error) && typeof(opt.rules[i].equal_to) == 'object') {\n\t\t\t\t\t\tif (opt.rules[i].equal_to.value != '' && val!=jQuery(jQuery(this).get(0).form[opt.rules[i].equal_to.value]).val()) {\n\t\t\t\t\t\t\tif (error_msg=='') jQuery(this).get(0).focus();\n\t\t\t\t\t\t\terror_msg += '<p class=\"trx_addons_error_item\">' + (typeof(opt.rules[i].equal_to.message)!='undefined' ? opt.rules[i].equal_to.message : opt.error_message_text ) + '</p>';\n\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.error_fields_class != '') jQuery(this).toggleClass(opt.error_fields_class, error);\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t});\n\t\tif (error_msg!='' && opt.error_message_show) {\n\t\t\tvar error_message_box = form.find(\".trx_addons_message_box\");\n\t\t\tif (error_message_box.length == 0) error_message_box = form.parent().find(\".trx_addons_message_box\");\n\t\t\tif (error_message_box.length == 0) {\n\t\t\t\tform.append('<div class=\"trx_addons_message_box\"></div>');\n\t\t\t\terror_message_box = form.find(\".trx_addons_message_box\");\n\t\t\t}\n\t\t\tif (opt.error_message_class) error_message_box.toggleClass(opt.error_message_class, true);\n\t\t\terror_message_box.html(error_msg).fadeIn();\n\t\t\tsetTimeout(function() { error_message_box.fadeOut(); }, opt.error_message_time);\n\t\t}\n\t\treturn error_msg!='';\n\t};\n\t\n\t\n\t\n\t\n\t/* Document manipulations\n\t---------------------------------------------------------------- */\n\t\n\t// Animated scroll to selected id\n\twindow.trx_addons_document_animate_to = function(id, callback) {\n\t\tvar oft = !isNaN(id) ? Number(id) : 0;\n\t\tif (isNaN(id)) {\n\t\t\tif (id.indexOf('#')==-1) id = '#' + id;\n\t\t\tvar obj = jQuery(id).eq(0);\n\t\t\tif (obj.length == 0) return;\n\t\t\toft = obj.offset().top;\n\t\t}\n\t\tvar st  = jQuery(window).scrollTop();\n\t\tvar speed = Math.min(1200, Math.max(300, Math.round(Math.abs(oft-st) / jQuery(window).height() * 300)));\n\t\tjQuery('body,html').stop(true).animate( {scrollTop: oft - jQuery('#wpadminbar').height() + 1}, speed, 'linear', callback);\n\t};\n\t\n\t// Change browser address without reload page\n\twindow.trx_addons_document_set_location = function(curLoc){\n\t\tif (history.pushState===undefined || navigator.userAgent.match(/MSIE\\s[6-9]/i) != null) return;\n\t\ttry {\n\t\t\thistory.pushState(null, null, curLoc);\n\t\t\treturn;\n\t\t} catch(e) {}\n\t\tlocation.href = curLoc;\n\t};\n\t\n\t// Add/Change arguments to the url address\n\twindow.trx_addons_add_to_url = function(loc, prm) {\n\t\tvar ignore_empty = arguments[2] !== undefined ? arguments[2] : true;\n\t\tvar q = loc.indexOf('?');\n\t\tvar attr = {};\n\t\tif (q > 0) {\n\t\t\tvar qq = loc.substr(q+1).split('&');\n\t\t\tvar parts = '';\n\t\t\tfor (var i=0; i<qq.length; i++) {\n\t\t\t\tvar parts = qq[i].split('=');\n\t\t\t\tattr[parts[0]] = parts.length>1 ? parts[1] : ''; \n\t\t\t}\n\t\t}\n\t\tfor (var p in prm) {\n\t\t\tattr[p] = prm[p];\n\t\t}\n\t\tloc = (q > 0 ? loc.substr(0, q) : loc) + '?';\n\t\tvar i = 0;\n\t\tfor (p in attr) {\n\t\t\tif (ignore_empty && attr[p]=='') continue;\n\t\t\tloc += (i++ > 0 ? '&' : '') + p + '=' + attr[p];\n\t\t}\n\t\treturn loc;\n\t};\n\t\n\t// Check if url is page-inner (local) link\n\twindow.trx_addons_is_local_link = function(url) {\n\t\tvar rez = url!==undefined;\n\t\tif (rez) {\n\t\t\tvar url_pos = url.indexOf('#');\n\t\t\tif (url_pos == 0 && url.length == 1)\n\t\t\t\trez = false;\n\t\t\telse {\n\t\t\t\tif (url_pos < 0) url_pos = url.length;\n\t\t\t\tvar loc = window.location.href;\n\t\t\t\tvar loc_pos = loc.indexOf('#');\n\t\t\t\tif (loc_pos > 0) loc = loc.substring(0, loc_pos);\n\t\t\t\trez = url_pos==0;\n\t\t\t\tif (!rez) rez = loc == url.substring(0, url_pos);\n\t\t\t}\n\t\t}\n\t\treturn rez;\n\t};\n\t\n\t\n\t/* Browsers detection\n\t---------------------------------------------------------------- */\n\t\n\twindow.trx_addons_browser_is_mobile = function() {\n\t\tvar check = false;\n\t\t(function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od|ad)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\n\t\treturn check;\n\t};\n\t\n\twindow.trx_addons_browser_is_ios = function() {\n\t\treturn navigator.userAgent.match(/iPad|iPhone|iPod/i) != null || navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i)?true:false;\n\t};\n\twindow.trx_addons_is_retina = function() {\n\t\tvar mediaQuery = '(-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-resolution: 1.5dppx)';\n\t\treturn (window.devicePixelRatio > 1) || (window.matchMedia && window.matchMedia(mediaQuery).matches);\n\t};\n\t\n\t\n\t\n\t/* File functions\n\t---------------------------------------------------------------- */\n\t\n\twindow.trx_addons_get_file_name = function(path) {\n\t\tpath = path.replace(/\\\\/g, '/');\n\t\tvar pos = path.lastIndexOf('/');\n\t\tif (pos >= 0)\n\t\t\tpath = path.substr(pos+1);\n\t\treturn path;\n\t};\n\t\n\twindow.trx_addons_get_file_ext = function(path) {\n\t\tvar pos = path.lastIndexOf('.');\n\t\tpath = pos >= 0 ? path.substr(pos+1) : '';\n\t\treturn path;\n\t};\n\t\n\t\n\t\n\t/* Image functions\n\t---------------------------------------------------------------- */\n\t\n\t// Return true, if all images in the specified container are loaded\n\twindow.trx_addons_check_images_complete = function(cont) {\n\t\tvar complete = true;\n\t\tcont.find('img').each(function() {\n\t\t\tif (!complete) return;\n\t\t\tif (!jQuery(this).get(0).complete) complete = false;\n\t\t});\n\t\treturn complete;\n\t};\n\t\n\t\n\t\n\t/* Strings\n\t---------------------------------------------------------------- */\n\twindow.trx_addons_replicate = function(str, num) {\n\t\tvar rez = '';\n\t\tfor (var i=0; i<num; i++) {\n\t\t\trez += str;\n\t\t}\n\t\treturn rez;\n\t};\n\t\n\t\n\t\n\t/* Utils\n\t---------------------------------------------------------------- */\n\t\n\t// Generates a storable representation of a value\n\twindow.trx_addons_serialize = function(mixed_val) {\n\t\tvar obj_to_array = arguments.length==1 || argument[1]===true;\n\t\n\t\tswitch ( typeof(mixed_val) ) {\n\t\n\t\t\tcase \"number\":\n\t\t\t\tif ( isNaN(mixed_val) || !isFinite(mixed_val) )\n\t\t\t\t\treturn false;\n\t\t\t\telse\n\t\t\t\t\treturn (Math.floor(mixed_val) == mixed_val ? \"i\" : \"d\") + \":\" + mixed_val + \";\";\n\t\n\t\t\tcase \"string\":\n\t\t\t\treturn \"s:\" + mixed_val.length + \":\\\"\" + mixed_val + \"\\\";\";\n\t\n\t\t\tcase \"boolean\":\n\t\t\t\treturn \"b:\" + (mixed_val ? \"1\" : \"0\") + \";\";\n\t\n\t\t\tcase \"object\":\n\t\t\t\tif (mixed_val == null)\n\t\t\t\t\treturn \"N;\";\n\t\t\t\telse if (mixed_val instanceof Array) {\n\t\t\t\t\tvar idxobj = { idx: -1 };\n\t\t\t\t\tvar map = [];\n\t\t\t\t\tfor (var i=0; i<mixed_val.length; i++) {\n\t\t\t\t\t\tidxobj.idx++;\n\t\t\t\t\t\tvar ser = trx_addons_serialize(mixed_val[i]);\n\t\t\t\t\t\tif (ser)\n\t\t\t\t\t\t\tmap.push(trx_addons_serialize(idxobj.idx) + ser);\n\t\t\t\t\t}                                      \n\t\t\t\t\treturn \"a:\" + mixed_val.length + \":{\" + map.join(\"\") + \"}\";\n\t\t\t\t} else {\n\t\t\t\t\tvar class_name = trx_addons_get_class(mixed_val);\n\t\t\t\t\tif (class_name == undefined)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tvar props = new Array();\n\t\t\t\t\tfor (var prop in mixed_val) {\n\t\t\t\t\t\tvar ser = trx_addons_serialize(mixed_val[prop]);\n\t\t\t\t\t\tif (ser)\n\t\t\t\t\t\t\tprops.push(trx_addons_serialize(prop) + ser);\n\t\t\t\t\t}\n\t\t\t\t\tif (obj_to_array)\n\t\t\t\t\t\treturn \"a:\" + props.length + \":{\" + props.join(\"\") + \"}\";\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"O:\" + class_name.length + \":\\\"\" + class_name + \"\\\":\" + props.length + \":{\" + props.join(\"\") + \"}\";\n\t\t\t\t}\n\t\n\t\t\tcase \"undefined\":\n\t\t\t\treturn \"N;\";\n\t\t}\n\t\treturn false;\n\t};\n\t\n\t// Returns the name of the class of an object\n\twindow.trx_addons_get_class = function(obj) {\n\t\tif (obj instanceof Object && !(obj instanceof Array) && !(obj instanceof Function) && obj.constructor) {\n\t\t\tvar arr = obj.constructor.toString().match(/function\\s*(\\w+)/);\n\t\t\tif (arr && arr.length == 2) return arr[1];\n\t\t}\n\t\treturn false;\n\t};\n\n})();"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.347Z",
        "time": 0.16200000391108915,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.12600000627571717,
          "receive": 0.03599999763537198,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 972
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/js/trx_addons.front.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:53 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:09 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"5efd-5873f96f6cf40-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "5941"
            }
          ],
          "cookies": [],
          "content": {
            "size": 24317,
            "mimeType": "application/javascript",
            "text": "/**\n * Init scripts\n *\n * @package WordPress\n * @subpackage ThemeREX Addons\n * @since v1.0\n */\n\n/* global jQuery:false */\n/* global TRX_ADDONS_STORAGE:false */\n\njQuery(document).ready(function() {\n\n\t\"use strict\";\n\n\tvar vc_init_counter = 0;\n\tvar vc_resize = false;\n\n\ttrx_addons_init_actions();\n\t\n\t// Show preloader\n\tjQuery(window).on('beforeunload', function() {\n\t\tif (jQuery.browser && !jQuery.browser.safari) jQuery('#page_preloader').css({display: 'block', opacity: 0}).animate({opacity:0.8}, 300);\n\t});\n\t\n\t\n\t// Init actions\n\tfunction trx_addons_init_actions() {\n\t\tif (TRX_ADDONS_STORAGE['vc_edit_mode'] > 0 && jQuery('.vc_empty-placeholder').length==0 && vc_init_counter++ < 30) {\n\t\t\tsetTimeout(trx_addons_init_actions, 200);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Hide preloader\n\t\tjQuery('#page_preloader').animate({opacity:0}, 800, function() {\n\t\t\t\t\t\t\t\t\tjQuery(this).css( {display: 'none'} );\n\t\t\t\t\t\t\t\t\t});\n\t\n\t\t// Check for Retina display\n\t\tif (trx_addons_is_retina()) {\n\t\t\ttrx_addons_set_cookie('trx_addons_is_retina', 1, 365);\n\t\t}\n\t\n\t\t// Add ready actions to the hidden elements actions\n\t\tjQuery(document).on('action.init_hidden_elements', trx_addons_ready_actions);\n\t\n\t\t// Add resize on VC action vc-full-width-row\n\t\tjQuery(document).on('vc-full-width-row', function(e, el) {\n\t\t\tjQuery(document).trigger('action.resize_vc_row_start', [el]);\n\t\t\tjQuery(document).trigger('action.resize_vc_row_end', [el]);\n\t\t});\n\t\tjQuery(document).on('action.resize_vc_row_end', function(e, el) {\n\t\t\tvc_resize = true;\n\t\t\ttrx_addons_resize_actions();\n\t\t});\n\t\n\t\t// Resize handlers\n\t\tjQuery(window).resize(function() {\n\t\t\tif (!vc_resize) trx_addons_resize_actions();\n\t\t});\n\t\n\t\t// Scroll handlers\n\t\tjQuery(window).scroll(function() {\n\t\t\ttrx_addons_scroll_actions();\n\t\t});\n\t\n\t\t// First call to init core actions\n\t\ttrx_addons_ready_actions();\n\t\tsetTimeout(function() {\t\t// Wait for VC init\n\t\t\tif (!vc_resize) trx_addons_resize_actions();\n\t\t\ttrx_addons_scroll_actions();\n\t\t}, 1);\n\t\t\n\t\t// Inject our code in the VC function wpb_prepare_tab_content()\n\t\t// to init our elements on the new VC tabs, tour and accordion activation\n\t\ttypeof window.wpb_prepare_tab_content == \"function\"\n\t\t\t&& typeof window.wpb_prepare_tab_content_old == \"undefined\"\n\t\t\t&& (window.wpb_prepare_tab_content_old = window.wpb_prepare_tab_content)\n\t\t\t&& (window.wpb_prepare_tab_content = function(e, ui) {\n\t\t\t\t// Call ThemeREX Addons actions\n\t\t\t\tif (typeof ui.newPanel !== 'undefined' && ui.newPanel.length > 0) {\n\t\t\t\t\tjQuery(document).trigger('action.init_hidden_elements', [ui.newPanel]);\n\t\t\t\t} else if (typeof ui.panel !== 'undefined' && ui.panel.length > 0) {\n\t\t\t\t\tjQuery(document).trigger('action.init_hidden_elements', [ui.panel]);\n\t\t\t\t}\n\t\t\t\t// Call old VC handler\n\t\t\t\twindow.wpb_prepare_tab_content_old(e, ui);\n\t\t\t});\n\t\t// Inject our code in the VC function vc_accordionActivate()\n\t\t// to init our elements on the old VC accordion activation\n\t\ttypeof window.vc_accordionActivate == \"function\"\n\t\t\t&& typeof window.vc_accordionActivate_old == \"undefined\"\n\t\t\t&& (window.vc_accordionActivate_old = window.vc_accordionActivate)\n\t\t\t&& (window.vc_accordionActivate = function(e, ui) {\n\t\t\t\t// Call ThemeREX Addons actions\n\t\t\t\tif (typeof ui.newPanel !== 'undefined' && ui.newPanel.length > 0) {\n\t\t\t\t\tjQuery(document).trigger('action.init_hidden_elements', [ui.newPanel]);\n\t\t\t\t} else if (typeof ui.panel !== 'undefined' && ui.panel.length > 0) {\n\t\t\t\t\tjQuery(document).trigger('action.init_hidden_elements', [ui.panel]);\n\t\t\t\t}\n\t\t\t\t// Call old VC handler\n\t\t\t\twindow.vc_accordionActivate_old(e, ui);\n\t\t\t});\n\t}\n\t\n\t\n\t\n\t// Page first load actions\n\t//==============================================\n\tfunction trx_addons_ready_actions(e, container) {\n\t\n\t\tif (arguments.length < 2) var container = jQuery('body');\n\t\n\t\t// Animate to the page-inner links\n\t\t//----------------------------------------------\n\t\tif (TRX_ADDONS_STORAGE['animate_inner_links'] > 0 && !container.hasClass('animate_to_inited')) {\n\t\t\tcontainer.addClass('animate_to_inited')\n\t\t\t\t.on('click', 'a', function(e) {\n\t\t\t\t\tvar link_obj = jQuery(this);\n\t\t\t\t\tvar link_parent = link_obj.parent();\n\t\t\t\t\tif (link_parent.parent().hasClass('trx_addons_tabs_titles')\t// trx_addons_tabs\n\t\t\t\t\t\t|| link_parent.hasClass('vc_tta-tab') \t\t\t// new VC tabs, old VC tabs, new VC tour\n\t\t\t\t\t\t|| link_obj.hasClass('ui-tabs-anchor') \t\t\t// old VC tour\n\t\t\t\t\t\t|| link_parent.hasClass('vc_tta-panel-title')\t// new VC accordion\n\t\t\t\t\t\t|| link_parent.hasClass('wpb_accordion_header') // old VC accordion\n\t\t\t\t\t\t) return;\n\t\t\t\t\tvar href = link_obj.attr('href');\n\t\t\t\t\tif (trx_addons_is_local_link(href)) {\n\t\t\t\t\t\tvar pos = href.indexOf('#');\n\t\t\t\t\t\thref = pos < 0 ? 0 : href.substr(pos);\n\t\t\t\t\t\ttrx_addons_document_animate_to(href);\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\n\t\t// Tabs\n\t\t//------------------------------------\n\t\tif (container.find('.trx_addons_tabs:not(.inited)').length > 0 && jQuery.ui && jQuery.ui.tabs) {\n\t\t\tcontainer.find('.trx_addons_tabs:not(.inited)').each(function () {\n\t\t\t\t// Get initially opened tab\n\t\t\t\tvar init = jQuery(this).data('active');\n\t\t\t\tif (isNaN(init)) {\n\t\t\t\t\tinit = 0;\n\t\t\t\t\tvar active = jQuery(this).find('> ul > li[data-active=\"true\"]').eq(0);\n\t\t\t\t\tif (active.length > 0) {\n\t\t\t\t\t\tinit = active.index();\n\t\t\t\t\t\tif (isNaN(init) || init < 0) init = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinit = Math.max(0, init);\n\t\t\t\t}\n\t\t\t\t// Get disabled tabs\n\t\t\t\tvar disabled = [];\n\t\t\t\tjQuery(this).find('> ul > li[data-disabled=\"true\"]').each(function() {\n\t\t\t\t\tdisabled.push(jQuery(this).index());\n\t\t\t\t});\n\t\t\t\t// Init tabs\n\t\t\t\tjQuery(this).addClass('inited').tabs({\n\t\t\t\t\tactive: init,\n\t\t\t\t\tdisabled: disabled,\n\t\t\t\t\tshow: {\n\t\t\t\t\t\teffect: 'fadeIn',\n\t\t\t\t\t\tduration: 300\n\t\t\t\t\t},\n\t\t\t\t\thide: {\n\t\t\t\t\t\teffect: 'fadeOut',\n\t\t\t\t\t\tduration: 300\n\t\t\t\t\t},\n\t\t\t\t\tcreate: function( event, ui ) {\n\t\t\t\t\t\tif (ui.panel.length > 0) jQuery(document).trigger('action.init_hidden_elements', [ui.panel]);\n\t\t\t\t\t},\n\t\t\t\t\tactivate: function( event, ui ) {\n\t\t\t\t\t\tif (ui.newPanel.length > 0) jQuery(document).trigger('action.init_hidden_elements', [ui.newPanel]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\n\t\n\t\t// Accordion\n\t\t//------------------------------------\n\t\tif (container.find('.trx_addons_accordion:not(.inited)').length > 0 && jQuery.ui && jQuery.ui.accordion) {\n\t\t\tcontainer.find('.trx_addons_accordion:not(.inited)').each(function () {\n\t\t\t\t// Get headers selector\n\t\t\t\tvar accordion = jQuery(this);\n\t\t\t\tvar headers = accordion.data('headers');\n\t\t\t\tif (headers===undefined) headers = 'h5';\n\t\t\t\t// Get height style\n\t\t\t\tvar height_style = accordion.data('height-style');\n\t\t\t\tif (height_style===undefined) height_style = 'content';\n\t\t\t\t// Get initially opened tab\n\t\t\t\tvar init = accordion.data('active');\n\t\t\t\tvar active = false;\n\t\t\t\tif (isNaN(init)) {\n\t\t\t\t\tinit = 0;\n\t\t\t\t\tvar active = accordion.find(headers+'[data-active=\"true\"]').eq(0);\n\t\t\t\t\tif (active.length > 0) {\n\t\t\t\t\t\twhile (!active.parent().hasClass('trx_addons_accordion')) {\n\t\t\t\t\t\t\tactive = active.parent();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinit = active.index();\n\t\t\t\t\t\tif (isNaN(init) || init < 0) init = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinit = Math.max(0, init);\n\t\t\t\t}\n\t\t\t\t// Init accordion\n\t\t\t\taccordion.addClass('inited').accordion({\n\t\t\t\t\tactive: init,\n\t\t\t\t\theader: headers,\n\t\t\t\t\theightStyle: height_style,\n\t\t\t\t\tcreate: function( event, ui ) {\n\t\t\t\t\t\tif (ui.panel.length > 0) {\n\t\t\t\t\t\t\tjQuery(document).trigger('action.init_hidden_elements', [ui.panel]);\n\t\t\t\t\t\t} else if (active !== false && active.length > 0) {\n\t\t\t\t\t\t\t// If headers and panels wrapped into div\n\t\t\t\t\t\t\tactive.find('>'+headers).trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tactivate: function( event, ui ) {\n\t\t\t\t\t\tif (ui.newPanel.length > 0) jQuery(document).trigger('action.init_hidden_elements', [ui.newPanel]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\n\t\n\t\t// Sliders\n\t\t//----------------------------------------------\n\t\tjQuery(document).trigger('action.init_sliders', [container]);\n\t\n\t\n\t\t// Shortcodes\n\t\t//----------------------------------------------\n\t\tjQuery(document).trigger('action.init_shortcodes', [container]);\n\t\n\t\n\t\t// Video player\n\t\t//----------------------------------------------\n\t\tif (container.find('.trx_addons_video_player.with_cover .video_hover:not(.inited)').length > 0) {\n\t\t\tcontainer.find('.trx_addons_video_player.with_cover .video_hover:not(.inited)')\n\t\t\t\t.addClass('inited')\n\t\t\t\t.on('click', function(e) {\n\n\t\t\t\t\tjQuery(this).parents('.trx_addons_video_player')\n\t\t\t\t\t\t.addClass('video_play')\n\t\t\t\t\t\t.find('.video_embed').html(jQuery(this).data('video'));\n\t\n\t\t\t\t\t// If video in the slide\n\t\t\t\t\tvar slider = jQuery(this).parents('.slider_swiper');\n\t\t\t\t\tif (slider.length > 0) {\n\t\t\t\t\t\tvar id = slider.attr('id');\n\t\t\t\t\t\tTRX_ADDONS_STORAGE['swipers'][id].stopAutoplay();\n\t\t\t\t\t\t// If slider have controller - stop it too\n\t\t\t\t\t\tid = slider.data('controller');\n\t\t\t\t\t\tif (id && TRX_ADDONS_STORAGE['swipers'][id+'_swiper'])\n\t\t\t\t\t\t\tTRX_ADDONS_STORAGE['swipers'][id+'_swiper'].stopAutoplay();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tjQuery(window).trigger('resize');\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t}\n\t\n\t\n\t\t// Popups\n\t\t//----------------------------------------------\n\t\tif (TRX_ADDONS_STORAGE['popup_engine'] == 'pretty') {\n\t\t\t// Display lightbox on click on the image\n\t\t\tcontainer.find(\"a[href$='jpg']:not(.inited),a[href$='jpeg']:not(.inited),a[href$='png']:not(.inited),a[href$='gif']:not(.inited)\").attr('rel', 'prettyPhoto[slideshow]');\n\t\t\tvar images = container.find(\"a[rel*='prettyPhoto']:not(.inited):not(.esgbox):not([data-rel*='pretty']):not([rel*='magnific']):not([data-rel*='magnific'])\").addClass('inited');\n\t\t\ttry {\n\t\t\t\timages.prettyPhoto({\n\t\t\t\t\tsocial_tools: '',\n\t\t\t\t\ttheme: 'facebook',\n\t\t\t\t\tdeeplinking: false\n\t\t\t\t});\n\t\t\t} catch (e) {};\n\t\t} else if (TRX_ADDONS_STORAGE['popup_engine']=='magnific') {\n\t\t\t// Display lightbox on click on the image\n\t\t\tcontainer.find(\"a[href$='jpg']:not(.inited),a[href$='jpeg']:not(.inited),a[href$='png']:not(.inited),a[href$='gif']:not(.inited)\").attr('rel', 'magnific');\n\t\t\tvar images = container.find(\"a[rel*='magnific']:not(.inited):not(.esgbox):not(.prettyphoto):not([rel*='pretty']):not([data-rel*='pretty'])\").addClass('inited');\n\t\t\ttry {\n\t\t\t\timages.magnificPopup({\n\t\t\t\t\ttype: 'image',\n\t\t\t\t\tmainClass: 'mfp-img-mobile',\n\t\t\t\t\tcloseOnContentClick: true,\n\t\t\t\t\tcloseBtnInside: true,\n\t\t\t\t\tfixedContentPos: true,\n\t\t\t\t\tmidClick: true,\n\t\t\t\t\t//removalDelay: 500, \n\t\t\t\t\tpreloader: true,\n\t\t\t\t\ttLoading: TRX_ADDONS_STORAGE['msg_magnific_loading'],\n\t\t\t\t\tgallery:{\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t},\n\t\t\t\t\timage: {\n\t\t\t\t\t\ttError: TRX_ADDONS_STORAGE['msg_magnific_error'],\n\t\t\t\t\t\tverticalFit: true\n\t\t\t\t\t},\n\t\t\t\t\tzoom: {\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\tduration: 300,\n\t\t\t\t\t\teasing: 'ease-in-out',\n\t\t\t\t\t\topener: function(openerElement) {\n\t\t\t\t\t\t\t// openerElement is the element on which popup was initialized, in this case its <a> tag\n\t\t\t\t\t\t\t// you don't need to add \"opener\" option if this code matches your needs, it's defailt one.\n\t\t\t\t\t\t\tif (!openerElement.is('img')) {\n\t\t\t\t\t\t\t\tif (openerElement.parents('.trx_addons_hover').find('img').length > 0)\n\t\t\t\t\t\t\t\t\topenerElement = openerElement.parents('.trx_addons_hover').find('img');\n\t\t\t\t\t\t\t\telse if (openerElement.find('img').length > 0)\n\t\t\t\t\t\t\t\t\t openerElement = openerElement.find('img');\n\t\t\t\t\t\t\t\telse if (openerElement.siblings('img').length > 0)\n\t\t\t\t\t\t\t\t\t openerElement = openerElement.siblings('img');\n\t\t\t\t\t\t\t\telse if (openerElement.parent().parent().find('img').length > 0)\n\t\t\t\t\t\t\t\t\t openerElement = openerElement.parent().parent().find('img');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn openerElement; \n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\tbeforeClose: function(){\n\t\t\t\t\t\t\tjQuery('.mfp-figure figcaption').hide();\n\t\t\t\t\t\t\tjQuery('.mfp-figure .mfp-arrow').hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (e) {};\n\t\n\t\t\t// Display lightbox on click on the popup link\n\t\t\tcontainer.find(\".trx_addons_popup_link:not(.inited)\").addClass('inited').magnificPopup({\n\t\t\t\ttype: 'inline',\n\t\t\t\tfocus: 'input',\n\t\t\t\tcloseBtnInside: true,\n\t\t\t\tcallbacks: {\n\t\t\t\t\t// Will fire when this exact popup is opened\n\t\t\t\t\t// this - is Magnific Popup object\n\t\t\t\t\topen: function () {\n\t\t\t\t\t\tjQuery(document).trigger('action.init_hidden_elements', [jQuery(this.content)]);\n\t\t\t\t\t\t// If popup contain embedded video\n\t\t\t\t\t\tvar frame = jQuery(this.content).find('.video_frame');\n\t\t\t\t\t\tif (frame.length > 0) {\n\t\t\t\t\t\t\tvar iframe = frame.find('> iframe');\n\t\t\t\t\t\t\t// Store frame content to the data-param or restore it when popup open again (second time)\n\t\t\t\t\t\t\tif (iframe.length > 0)\n\t\t\t\t\t\t\t\tframe.data('video-embed', frame.html());\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tframe.html(frame.data('video-embed'));\n\t\t\t\t\t\t\t// Add autoplay to the embedded video\n\t\t\t\t\t\t\tframe.find('> iframe').each(function () {\n\t\t\t\t\t\t\t\tvar src = jQuery(this).attr('src');\n\t\t\t\t\t\t\t\tif (src.indexOf('youtube')>=0 || src.indexOf('vimeo')>=0) {\n\t\t\t\t\t\t\t\t\tjQuery(this).attr('src', trx_addons_add_to_url(src, {'autoplay': 1}));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tclose: function () {\n\t\t\t\t\t\t// Remove video\n\t\t\t\t\t\tjQuery(this.content).find('.video_frame').empty();\n\t\t\t\t\t},\n\t\t\t\t\t// resize event triggers only when height is changed or layout forced\n\t\t\t\t\tresize: function () {\n\t\t\t\t\t\ttrx_addons_resize_actions();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\n\t\n\t\t// Likes counter\n\t\t//---------------------------------------------\n\t\tif (container.find('.post_counters_likes:not(.inited),.comment_counters_likes:not(.inited)').length > 0) {\n\t\t\tcontainer.find('.post_counters_likes:not(.inited),.comment_counters_likes:not(.inited)')\n\t\t\t\t.addClass('inited')\n\t\t\t\t.on('click', function(e) {\n\t\t\t\t\tvar button = jQuery(this);\n\t\t\t\t\tvar inc = button.hasClass('enabled') ? 1 : -1;\n\t\t\t\t\tvar post_id = button.hasClass('post_counters_likes') ? button.data('postid') :  button.data('commentid');\n\t\t\t\t\tvar cookie_likes = trx_addons_get_cookie(button.hasClass('post_counters_likes') ? 'trx_addons_likes' : 'trx_addons_comment_likes');\n\t\t\t\t\tif (cookie_likes === undefined || cookie_likes===null) cookie_likes = '';\n\t\t\t\t\tjQuery.post(TRX_ADDONS_STORAGE['ajax_url'], {\n\t\t\t\t\t\taction: button.hasClass('post_counters_likes') ? 'post_counter' : 'comment_counter',\n\t\t\t\t\t\tnonce: TRX_ADDONS_STORAGE['ajax_nonce'],\n\t\t\t\t\t\tpost_id: post_id,\n\t\t\t\t\t\tlikes: inc\n\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\tvar rez = {};\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\trez = JSON.parse(response);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\trez = { error: TRX_ADDONS_STORAGE['msg_ajax_error'] };\n\t\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rez.error === '') {\n\t\t\t\t\t\t\tvar counter = rez.counter;\n\t\t\t\t\t\t\tif (inc == 1) {\n\t\t\t\t\t\t\t\tvar title = button.data('title-dislike');\n\t\t\t\t\t\t\t\tbutton.removeClass('enabled trx_addons_icon-heart-empty').addClass('disabled trx_addons_icon-heart');\n\t\t\t\t\t\t\t\tcookie_likes += (cookie_likes.substr(-1)!=',' ? ',' : '') + post_id + ',';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar title = button.data('title-like');\n\t\t\t\t\t\t\t\tbutton.removeClass('disabled trx_addons_icon-heart').addClass('enabled trx_addons_icon-heart-empty');\n\t\t\t\t\t\t\t\tcookie_likes = cookie_likes.replace(','+post_id+',', ',');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbutton.data('likes', counter).attr('title', title).find(button.hasClass('post_counters_likes') ? '.post_counters_number' : '.comment_counters_number').html(counter);\n\t\t\t\t\t\t\ttrx_addons_set_cookie(button.hasClass('post_counters_likes') ? 'trx_addons_likes' : 'trx_addons_comment_likes', cookie_likes, 365);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\talert(TRX_ADDONS_STORAGE['msg_error_like']);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t}\n\t\n\t\n\t\t// Socials share\n\t\t//----------------------------------------------\n\t\tif (container.find('.socials_share .socials_caption:not(.inited)').length > 0) {\n\t\t\tcontainer.find('.socials_share .socials_caption:not(.inited)').each(function() {\n\t\t\t\tjQuery(this).addClass('inited').on('click', function(e) {\n\t\t\t\t\tjQuery(this).siblings('.social_items').fadeToggle();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tif (container.find('.socials_share .social_items:not(.inited)').length > 0) {\n\t\t\tcontainer.find('.socials_share .social_items:not(.inited)').each(function() {\n\t\t\t\tjQuery(this).addClass('inited').on('click', '.social_item_popup > a.social_icons', function(e) {\n\t\t\t\t\tvar url = jQuery(this).data('link');\n\t\t\t\t\twindow.open(url, '_blank', 'scrollbars=0, resizable=1, menubar=0, left=100, top=100, width=480, height=400, toolbar=0, status=0');\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t\n\t\t\n\t\t// Widgets decoration\n\t\t//----------------------------------------------\n\t\n\t\t// Decorate nested lists in widgets and side panels\n\t\tcontainer.find('.widget ul > li').each(function() {\n\t\t\tif (jQuery(this).find('ul').length > 0) {\n\t\t\t\tjQuery(this).addClass('has_children');\n\t\t\t}\n\t\t});\n\t\n\t\t// Archive widget decoration\n\t\tcontainer.find('.widget_archive a:not(.inited)').addClass('inited').each(function() {\n\t\t\tvar val = jQuery(this).html().split(' ');\n\t\t\tif (val.length > 1) {\n\t\t\t\tval[val.length-1] = '<span>' + val[val.length-1] + '</span>';\n\t\t\t\tjQuery(this).html(val.join(' '))\n\t\t\t}\n\t\t});\n\t\n\t\n\t\t// Menu\n\t\t//----------------------------------------------\n\t\n\t\t// Prepare menus (if menu cache is used)\n\t\tif (!TRX_ADDONS_STORAGE['menu_cache'] || TRX_ADDONS_STORAGE['menu_cache'].length == 0) {\n\t\t\tjQuery('.sc_layouts_menu_nav').each(function() {\n\t\t\t\tif (jQuery(this).find('.current-menu-item').length == 0 || jQuery('body').hasClass('blog_template')) {\n\t\t\t\t\tif (TRX_ADDONS_STORAGE['menu_cache'] === undefined) TRX_ADDONS_STORAGE['menu_cache'] = [];\n\t\t\t\t\tvar id = jQuery(this).attr('id');\n\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\tid = ('sc_layouts_menu_nav_' + Math.random()).replace('.', '');\n\t\t\t\t\t\tjQuery(this).attr('id', id);\n\t\t\t\t\t}\n\t\t\t\t\tTRX_ADDONS_STORAGE['menu_cache'].push('#'+id);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (TRX_ADDONS_STORAGE['menu_cache'] && TRX_ADDONS_STORAGE['menu_cache'].length > 0) {\n\t\t\t// Mark the current menu item and its parent items in the cached menus\n\t\t\tvar href = window.location.href;\n\t\t\tfor (var menu in TRX_ADDONS_STORAGE['menu_cache']) {\n\t\t\t\tmenu = jQuery(TRX_ADDONS_STORAGE['menu_cache'][menu]+':not(.prepared)');\n\t\t\t\tif (menu.length==0) continue;\n\t\t\t\tmenu.addClass('prepared');\n\t\t\t\tmenu.find('li').removeClass('current-menu-ancestor current-menu-parent current-menu-item current_page_item');\n\t\t\t\tmenu.find('a[href=\"'+href+'\"]').each(function(idx) {\n\t\t\t\t\tvar li = jQuery(this).parent();\n\t\t\t\t\tli.addClass('current-menu-item');\n\t\t\t\t\tif (li.hasClass('menu-item-object-page')) li.addClass('current_page_item');\n\t\t\t\t\tvar cnt = 0;\n\t\t\t\t\twhile ((li = li.parents('li')).length > 0) {\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\tli.addClass('current-menu-ancestor'+(cnt==1 ? ' current-menu-parent' : ''));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\n\t\n\t\t// Other settings\n\t\t//------------------------------------\n\t\n\t\t// Scroll to top button\n\t\tcontainer.find('.trx_addons_scroll_to_top:not(.inited)').addClass('inited').on('click', function(e) {\n\t\t\tjQuery('html,body').animate({\n\t\t\t\tscrollTop: 0\n\t\t\t}, 'slow');\n\t\t\te.preventDefault();\n\t\t\treturn false;\n\t\t});\n\t\n\t\t// Call plugins specific action (if exists)\n\t\t//----------------------------------------------\n\t\tjQuery(document).trigger('action.ready_trx_addons');\n\t\t\n\t} //end ready\n\t\n\n\t// Increment post views counter via AJAX\n\tif (TRX_ADDONS_STORAGE['ajax_views']) {\n\t\tjQuery(document).on('action.ready_trx_addons', function() {\n\t\t\tif (!TRX_ADDONS_STORAGE['post_views_counter_inited']) {\n\t\t\t\tTRX_ADDONS_STORAGE['post_views_counter_inited'] = true;\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tjQuery.post(TRX_ADDONS_STORAGE['ajax_url'], {\n\t\t\t\t\t\taction: 'post_counter',\n\t\t\t\t\t\tnonce: TRX_ADDONS_STORAGE['ajax_nonce'],\n\t\t\t\t\t\tpost_id: TRX_ADDONS_STORAGE['post_id'],\n\t\t\t\t\t\tviews: 1\n\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\tvar rez = {};\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\trez = JSON.parse(response);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\trez = { error: TRX_ADDONS_STORAGE['ajax_error'] };\n\t\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rez.error === '') {\n\t\t\t\t\t\t\tjQuery('.post_counters_single .post_counters_views .post_counters_number,.sc_layouts_title_meta .post_counters_views .post_counters_number').html(rez.counter);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, 10);\n\t\t\t}\n\t\t});\n\t}\n\n\n\t\n\t// Scroll actions\n\t//==============================================\n\t\n\t// Do actions when page scrolled\n\tfunction trx_addons_scroll_actions() {\n\n\t\tvar scroll_offset = jQuery(window).scrollTop();\n\t\tvar scroll_to_top_button = jQuery('.trx_addons_scroll_to_top');\n\t\tvar adminbar_height = Math.max(0, jQuery('#wpadminbar').height());\n\t\n\t\t// Scroll to top button show/hide\n\t\tif (scroll_to_top_button.length > 0) {\n\t\t\tif (scroll_offset > 100)\n\t\t\t\tscroll_to_top_button.addClass('show');\n\t\t\telse\n\t\t\t\tscroll_to_top_button.removeClass('show');\n\t\t}\n\t\n\t\t// Scroll actions for animated elements\n\t\tjQuery('[data-animation^=\"animated\"]:not(.animated)').each(function() {\n\t\t\tif (jQuery(this).offset().top < scroll_offset + jQuery(window).height())\n\t\t\t\tjQuery(this).addClass(jQuery(this).data('animation'));\n\t\t});\n\t\n\t\t// Call theme/plugins specific action (if exists)\n\t\t//----------------------------------------------\n\t\tjQuery(document).trigger('action.scroll_trx_addons');\n\t}\n\t\n\t\n\t\n\t// Resize actions\n\t//==============================================\n\t\n\t// Do actions when page scrolled\n\tfunction trx_addons_resize_actions(cont) {\n\t\ttrx_addons_resize_video(cont);\n\t\n\t\t// Call theme/plugins specific action (if exists)\n\t\t//----------------------------------------------\n\t\tjQuery(document).trigger('action.resize_trx_addons', [cont]);\n\t}\n\t\n\t\n\t\n\t// Fit video frames to document width\n\tfunction trx_addons_resize_video(cont) {\n\t\tif (cont===undefined) cont = jQuery('body');\n\t\tcont.find('video').each(function() {\n\t\t\tvar video = jQuery(this).eq(0);\n\t\t\tvar ratio = (video.data('ratio')!=undefined ? video.data('ratio').split(':') : [16,9]);\n\t\t\tratio = ratio.length!=2 || ratio[0]==0 || ratio[1]==0 ? 16/9 : ratio[0]/ratio[1];\n\t\t\tvar mejs_cont = video.parents('.mejs-video');\n\t\t\tvar w_attr = video.data('width');\n\t\t\tvar h_attr = video.data('height');\n\t\t\tif (!w_attr || !h_attr) {\n\t\t\t\tw_attr = video.attr('width');\n\t\t\t\th_attr = video.attr('height');\n\t\t\t\tif (!w_attr || !h_attr) return;\n\t\t\t\tvideo.data({'width': w_attr, 'height': h_attr});\n\t\t\t}\n\t\t\tvar percent = (''+w_attr).substr(-1)=='%';\n\t\t\tw_attr = parseInt(w_attr);\n\t\t\th_attr = parseInt(h_attr);\n\t\t\tvar w_real = Math.round(mejs_cont.length > 0 ? Math.min(percent ? 10000 : w_attr, mejs_cont.parents('div,article').width()) : video.width()),\n\t\t\t\th_real = Math.round(percent ? w_real/ratio : w_real/w_attr*h_attr);\n\t\t\tif (parseInt(video.attr('data-last-width'))==w_real) return;\n\t\t\tif (mejs_cont.length > 0 && mejs) {\n\t\t\t\ttrx_addons_set_mejs_player_dimensions(video, w_real, h_real);\n\t\t\t}\n\t\t\tif (percent) {\n\t\t\t\tvideo.height(h_real);\n\t\t\t} else {\n\t\t\t\tvideo.attr({'width': w_real, 'height': h_real}).css({'width': w_real+'px', 'height': h_real+'px'});\n\t\t\t}\n\t\t\tvideo.attr('data-last-width', w_real);\n\t\t});\n\t\tcont.find('.video_frame iframe').each(function() {\n\t\t\tvar iframe = jQuery(this).eq(0);\n\t\t\tif (iframe.attr('src').indexOf('soundcloud')>0) return;\n\t\t\tvar ratio = (iframe.data('ratio')!=undefined \n\t\t\t\t\t\t\t? iframe.data('ratio').split(':') \n\t\t\t\t\t\t\t: (iframe.parent().data('ratio')!=undefined \n\t\t\t\t\t\t\t\t? iframe.parent().data('ratio').split(':') \n\t\t\t\t\t\t\t\t: (iframe.find('[data-ratio]').length>0 \n\t\t\t\t\t\t\t\t\t? iframe.find('[data-ratio]').data('ratio').split(':') \n\t\t\t\t\t\t\t\t\t: [16,9]\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\tratio = ratio.length!=2 || ratio[0]==0 || ratio[1]==0 ? 16/9 : ratio[0]/ratio[1];\n\t\t\tvar w_attr = iframe.attr('width');\n\t\t\tvar h_attr = iframe.attr('height');\n\t\t\tif (!w_attr || !h_attr) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar percent = (''+w_attr).substr(-1)=='%';\n\t\t\tw_attr = parseInt(w_attr);\n\t\t\th_attr = parseInt(h_attr);\n\t\t\tvar pw = iframe.parent().width(),\n\t\t\t\tph = iframe.parent().height(),\n\t\t\t\tw_real = pw,\n\t\t\t\th_real = Math.round(percent ? w_real/ratio : w_real/w_attr*h_attr);\n\t\t\tif (iframe.parent().css('position') == 'absolute' && h_real > ph) {\n\t\t\t\th_real = ph;\n\t\t\t\tw_real = Math.round(percent ? h_real*ratio : h_real*w_attr/h_attr)\n\t\t\t}\n\t\t\tif (parseInt(iframe.attr('data-last-width'))==w_real) return;\n\t\t\tiframe.css({'width': w_real+'px', 'height': h_real+'px'});\n\t\t\tiframe.attr('data-last-width', w_real);\n\t\t});\n\t}\n\t\n\t\n\t// Set Media Elements player dimensions\n\tfunction trx_addons_set_mejs_player_dimensions(video, w, h) {\n\t\tif (mejs) {\n\t\t\tfor (var pl in mejs.players) {\n\t\t\t\tif (mejs.players[pl].media.src == video.attr('src')) {\n\t\t\t\t\tif (mejs.players[pl].media.setVideoSize) {\n\t\t\t\t\t\tmejs.players[pl].media.setVideoSize(w, h);\n\t\t\t\t\t}\n\t\t\t\t\tmejs.players[pl].setPlayerSize(w, h);\n\t\t\t\t\tmejs.players[pl].setControlsSize();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n});"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.347Z",
        "time": 0.1649999976507388,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.13000000035390258,
          "receive": 0.03499999729683623,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 973
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/cpt/layouts/layouts.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:53 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:09 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"87f-5873f96f6cf40-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "760"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2175,
            "mimeType": "application/javascript",
            "text": "/* global jQuery:false */\n/* global TRX_ADDONS_STORAGE:false */\n\njQuery(document).on('action.ready_trx_addons', function() {\n\t\"use strict\";\n\n\tvar rows = jQuery('.sc_layouts_row_fixed');\n\t\n\t// If page contain fixed rows\n\tif (rows.length > 0) {\n\t\t\n\t\t// Add placeholders before each row\n\t\trows.each(function() {\n\t\t\tif (!jQuery(this).next().hasClass('sc_layouts_row_fixed_placeholder'))\n\t\t\t\tjQuery(this).after('<div class=\"sc_layouts_row_fixed_placeholder\" style=\"background-color:'+jQuery(this).css('background-color')+';\"></div>');\n\t\t});\n\n\t\tjQuery(document).on('action.scroll_trx_addons', function() {\n\t\t\ttrx_addons_cpt_layouts_fix_rows(rows, false);\n\t\t});\n\t\tjQuery(document).on('action.resize_trx_addons', function() {\n\t\t\ttrx_addons_cpt_layouts_fix_rows(rows, true);\n\t\t});\n\t}\n\n\tfunction trx_addons_cpt_layouts_fix_rows(rows, resize) {\n\t\t\n\t\tif (jQuery(window).width() <= 800) {\n\t\t\trows.removeClass('sc_layouts_row_fixed_on').css({'top': 'auto'});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar scroll_offset = jQuery(window).scrollTop();\n\t\tvar admin_bar = jQuery('#wpadminbar');\n\t\tvar rows_offset = Math.max(0, admin_bar.length > 0 && admin_bar.css('position')=='fixed' ? admin_bar.height() : 0);\n\t\n\t\trows.each(function() {\n\t\t\t\n\t\t\tvar placeholder = jQuery(this).next();\n\t\t\tvar offset = parseInt(jQuery(this).hasClass('sc_layouts_row_fixed_on') ? placeholder.offset().top : jQuery(this).offset().top);\n\t\t\tif (isNaN(offset)) offset = 0;\n\n\t\t\t// Fix/unfix row\n\t\t\tif (scroll_offset + rows_offset <= offset) {\n\t\t\t\tif (jQuery(this).hasClass('sc_layouts_row_fixed_on')) {\n\t\t\t\t\tjQuery(this).removeClass('sc_layouts_row_fixed_on').css({'top': 'auto'});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar h = jQuery(this).outerHeight();\n\t\t\t\tif (!jQuery(this).hasClass('sc_layouts_row_fixed_on')) {\n\t\t\t\t\tif (rows_offset + h < jQuery(window).height() * 0.33) {\n\t\t\t\t\t\tplaceholder.height(h);\n\t\t\t\t\t\tjQuery(this).addClass('sc_layouts_row_fixed_on').css({'top': rows_offset+'px'});\n\t\t\t\t\t\th = jQuery(this).outerHeight();\n\t\t\t\t\t}\n\t\t\t\t} else if (resize && jQuery(this).hasClass('sc_layouts_row_fixed_on') && jQuery(this).offset().top != rows_offset) {\n\t\t\t\t\tjQuery(this).css({'top': rows_offset+'px'});\n\t\t\t\t}\n\t\t\t\trows_offset += h;\n\t\t\t}\n\t\t});\n\t}\n});"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.347Z",
        "time": 0.1520000005257316,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.13300000136950985,
          "receive": 0.018999999156221747,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 974
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/widgets/slider/slider.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:53 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:09 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"36cd-5873f96f6cf40-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "3418"
            }
          ],
          "cookies": [],
          "content": {
            "size": 14029,
            "mimeType": "application/javascript",
            "text": "/**\n * Init and resize sliders\n *\n * @package WordPress\n * @subpackage ThemeREX Addons\n * @since v1.1\n */\n\n/* global jQuery:false */\n/* global TRX_ADDONS_STORAGE:false */\n\n(function() {\n\n\t\"use strict\";\n\t\n\tjQuery(document).on('action.init_sliders', trx_addons_init_sliders);\n\tjQuery(document).on('action.init_hidden_elements', trx_addons_init_hidden_sliders);\n\t\n\t// Init sliders with engine=swiper\n\tfunction trx_addons_init_sliders(e, container) {\n\t\n\t\t// Create Swiper Controllers\n\t\tif (container.find('.sc_slider_controller:not(.inited)').length > 0) {\n\t\t\tcontainer.find('.sc_slider_controller:not(.inited)')\n\t\t\t\t.each(function () {\n\t\t\t\t\tvar controller = jQuery(this).addClass('inited');\n\t\t\t\t\tvar slider_id = controller.data('slider-id');\n\t\t\t\t\tif (!slider_id) return;\n\t\t\t\t\t\n\t\t\t\t\tvar controller_id = controller.attr('id');\n\t\t\t\t\tif (controller_id == undefined) {\n\t\t\t\t\t\tcontroller_id = 'sc_slider_controller_'+Math.random();\n\t\t\t\t\t\tcontroller_id = controller_id.replace('.', '');\n\t\t\t\t\t\tcontroller.attr('id', controller_id);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tjQuery('#'+slider_id+' .slider_swiper').attr('data-controller', controller_id);\n\t\n\t\t\t\t\tvar controller_style = controller.data('style');\n\t\t\t\t\tvar controller_effect = controller.data('effect');\n\t\t\t\t\tvar controller_direction = controller.data('direction');\n\t\t\t\t\tvar controller_interval = controller.data('interval');\n\t\t\t\t\tvar controller_height = controller.data('height');\n\t\t\t\t\tvar controller_per_view = controller.data('slides-per-view');\n\t\t\t\t\tvar controller_space = controller.data('slides-space');\n\t\t\t\t\tvar controller_controls = controller.data('controls');\n\t\n\t\t\t\t\tvar controller_html = '';\n\t\t\t\t\tjQuery('#'+slider_id+' .swiper-slide')\n\t\t\t\t\t\t.each(function (idx) {\n\t\t\t\t\t\t\tvar slide = jQuery(this);\n\t\t\t\t\t\t\tvar image = slide.data('image');\n\t\t\t\t\t\t\tvar title = slide.data('title');\n\t\t\t\t\t\t\tvar cats = slide.data('cats');\n\t\t\t\t\t\t\tvar date = slide.data('date');\n\t\t\t\t\t\t\tcontroller_html += '<div class=\"swiper-slide\"'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ ' style=\"'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ (image !== undefined ? 'background-image: url('+image+');' : '')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\"'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<div class=\"sc_slider_controller_info\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<span class=\"sc_slider_controller_info_number\">'+(idx < 9 ? '0' : '')+(idx+1)+'</span>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<span class=\"sc_slider_controller_info_title\">'+title+'</span>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '</div>'\n\t\t\t\t\t\t\t\t\t\t\t\t+ '</div>';\n\t\t\t\t\t\t});\n\t\t\t\t\tcontroller.html('<div id=\"'+controller_id+'_outer\"'\n\t\t\t\t\t\t\t\t\t\t+ ' class=\"slider_swiper_outer slider_style_controller'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ ' slider_outer_' + (controller_controls == 1 ? 'controls slider_outer_controls_side' : 'nocontrols')\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ ' slider_outer_nopagination'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ ' slider_outer_' + (controller_per_view==1 ? 'one' : 'multi')\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ ' slider_outer_direction_' + (controller_direction=='vertical' ? 'vertical' : 'horizontal')\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\"'\n\t\t\t\t\t\t\t\t\t\t+ '>'\n\t\t\t\t\t\t\t\t\t\t\t+ '<div id=\"'+controller_id+'_swiper\"'\n\t\t\t\t\t\t\t\t\t\t\t\t+' class=\"slider_swiper swiper-slider-container'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ ' slider_' + (controller_controls == 1 ? 'controls slider_controls_side' : 'nocontrols')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ ' slider_nopagination'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ ' slider_notitles'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ ' slider_noresize'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ ' slider_' + (controller_per_view==1 ? 'one' : 'multi')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ ' slider_direction_' + (controller_direction=='vertical' ? 'vertical' : 'horizontal')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\"'\n\t\t\t\t\t\t\t\t\t\t\t\t+ ' data-slides-min-width=\"100\"'\n\t\t\t\t\t\t\t\t\t\t\t\t+ ' data-controlled-slider=\"'+slider_id+'\"'\n\t\t\t\t\t\t\t\t\t\t\t\t+ ' data-direction=\"' + (controller_direction=='vertical' ? 'vertical' : 'horizontal') + '\"'\n\t\t\t\t\t\t\t\t\t\t\t\t+ (controller_effect !== undefined ? ' data-effect=\"' + controller_effect + '\"' : '')\n\t\t\t\t\t\t\t\t\t\t\t\t+ (controller_interval !== undefined ? ' data-interval=\"' + controller_interval + '\"' : '')\n\t\t\t\t\t\t\t\t\t\t\t\t+ (controller_per_view !== undefined ? ' data-slides-per-view=\"' + controller_per_view + '\"' : '')\n\t\t\t\t\t\t\t\t\t\t\t\t+ (controller_space !== undefined ? ' data-slides-space=\"' + controller_space + '\"' : '')\n\t\t\t\t\t\t\t\t\t\t\t\t+ (controller_height !== undefined ? ' style=\"height:'+controller_height+'\"' : '')\n\t\t\t\t\t\t\t\t\t\t\t+ '>'\n\t\t\t\t\t\t\t\t\t\t\t\t+ '<div class=\"swiper-wrapper\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ controller_html\n\t\t\t\t\t\t\t\t\t\t\t\t+ '</div>'\n\t\t\t\t\t\t\t\t\t\t\t+ '</div>'\n\t\t\t\t\t\t\t\t\t\t\t+ (controller_controls == 1\n\t\t\t\t\t\t\t\t\t\t\t\t? '<div class=\"slider_controls_wrap\"><a class=\"slider_prev swiper-button-prev\" href=\"#\"></a><a class=\"slider_next swiper-button-next\" href=\"#\"></a></div>'\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t+ '</div>'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t}\n\n\n\t\t// Create Swiper Controls\n\t\tif (container.find('.sc_slider_controls:not(.inited)').length > 0) {\n\t\t\tcontainer.find('.sc_slider_controls:not(.inited)')\n\t\t\t\t.each(function () {\n\t\t\t\t\tvar controls = jQuery(this).addClass('inited');\n\t\t\t\t\tvar slider_id = controls.data('slider-id');\n\t\t\t\t\tif (!slider_id) return;\n\t\t\t\t\tslider_id += '_swiper';\n\t\t\t\t\tif (jQuery('#'+slider_id).length==0) return;\n\t\t\t\t\tcontrols.on('click', 'a', function(e) {\n\t\t\t\t\t\tif (jQuery(this).hasClass('slider_next'))\n\t\t\t\t\t\t\tTRX_ADDONS_STORAGE['swipers'][slider_id].slideNext();\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tTRX_ADDONS_STORAGE['swipers'][slider_id].slidePrev();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\t\t\t\n\t\n\t\t// Swiper Slider\n\t\tif (container.find('.slider_swiper:not(.inited)').length > 0) {\n\t\t\tcontainer.find('.slider_swiper:not(.inited)')\n\t\t\t\t.each(function () {\n\t\n\t\t\t\t\t// If slider inside the invisible block - exit\n\t\t\t\t\tif (jQuery(this).parents('div:hidden,article:hidden').length > 0)\n\t\t\t\t\t\treturn;\n\t\t\t\t\t\n\t\t\t\t\t// Check attr id for slider. If not exists - generate it\n\t\t\t\t\tvar slider = jQuery(this);\n\t\t\t\t\tvar id = slider.attr('id');\n\t\t\t\t\tif (id == undefined) {\n\t\t\t\t\t\tid = 'swiper_'+Math.random();\n\t\t\t\t\t\tid = id.replace('.', '');\n\t\t\t\t\t\tslider.attr('id', id);\n\t\t\t\t\t}\n\t\t\t\t\tvar cont = slider.parent().hasClass('slider_swiper_outer') ? slider.parent().attr('id', id+'_outer') : slider;\n\t\t\t\t\tvar cont_id = cont.attr('id');\n\t\n\t\t\t\t\t// If this slider is controller for the other slider\n\t\t\t\t\tvar is_controller = slider.parents('.sc_slider_controller').length > 0;\n\t\t\t\t\tvar controller_id = slider.data('controller');\n\t\t\t\t\t\n\t\t\t\t\t// Enum all slides\n\t\t\t\t\tslider.find('.swiper-slide').each(function(idx) {\n\t\t\t\t\t\tjQuery(this).attr('data-slide-number', idx);\n\t\t\t\t\t});\n\t\n\t\t\t\t\t// Show slider, but make it invisible\n\t\t\t\t\tslider.css({\n\t\t\t\t\t\t'display': 'block',\n\t\t\t\t\t\t'opacity': 0\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.addClass(id)\n\t\t\t\t\t\t.addClass('inited')\n\t\t\t\t\t\t.data('settings', {mode: 'horizontal'});\t\t// VC hook\n\t\t\t\t\t\t\n\t\t\t\t\t// Direction of slides change\n\t\t\t\t\tvar direction = slider.data('direction');\n\t\t\t\t\tif (direction != 'vertical') direction = 'horizontal';\n\t\n\t\t\t\t\t// Min width of the slides in swiper (used for validate slides_per_view on small screen)\n\t\t\t\t\tvar smw = slider.data('slides-min-width');\n\t\t\t\t\tif (smw == undefined) {\n\t\t\t\t\t\tsmw = 180;\n\t\t\t\t\t\tslider.attr('data-slides-min-width', smw);\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Validate Slides per view on small screen\n\t\t\t\t\tvar spv = slider.data('slides-per-view');\n\t\t\t\t\tif (spv == undefined) {\n\t\t\t\t\t\tspv = 1;\n\t\t\t\t\t\tslider.attr('data-slides-per-view', spv);\n\t\t\t\t\t}\n\t\t\t\t\tvar width = slider.width();\n\t\t\t\t\tif (width == 0) width = slider.parent().width();\n\t\t\t\t\tif (direction == 'horizontal') {\n\t\t\t\t\t\tif (width / spv < smw) spv = Math.max(1, Math.floor(width / smw));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Space between slides\n\t\t\t\t\tvar space = slider.data('slides-space');\n\t\t\t\t\tif (space == undefined) space = 0;\n\t\t\t\t\t\n\t\t\t\t\t// Autoplay interval\n\t\t\t\t\tvar interval = slider.data('interval');\n\t\t\t\t\tif (interval === undefined) interval = Math.round(5000 * (1 + Math.random()));\n\t\t\t\t\tif (isNaN(interval)) interval = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (TRX_ADDONS_STORAGE['swipers'] === undefined) TRX_ADDONS_STORAGE['swipers'] = {};\n\t\n\t\t\t\t\tTRX_ADDONS_STORAGE['swipers'][id] = new Swiper('.'+id, {\n\t\t\t\t\t\tdirection: direction,\n\t\t\t\t\t\tcalculateHeight: !slider.hasClass('slider_height_fixed'),\n\t\t\t\t\t\tresizeReInit: true,\n\t\t\t\t\t\tautoResize: true,\n\t\t\t\t\t\teffect: slider.data('effect') ? slider.data('effect') : 'slide',\n\t\t\t\t\t\tpagination: slider.hasClass('slider_pagination') ? '#'+cont_id+' .slider_pagination_wrap' : false,\n\t\t\t\t\t\tpaginationClickable: slider.hasClass('slider_pagination') ? '#'+cont_id+' .slider_pagination_wrap' : false,\n\t\t\t\t\t\tpaginationType: slider.hasClass('slider_pagination') && slider.data('pagination') ? slider.data('pagination') : 'bullets',\n\t\t\t\t\t\tnextButton: slider.hasClass('slider_controls') ? '#'+cont_id+' .slider_next' : false,\n\t\t\t\t\t\tprevButton: slider.hasClass('slider_controls') ? '#'+cont_id+' .slider_prev' : false,\n\t\t\t\t\t\tautoplay: slider.hasClass('slider_noautoplay') || interval==0\t? false : parseInt(interval),\n\t\t\t\t\t\tautoplayDisableOnInteraction: true,\n\t\t\t\t\t\tinitialSlide: 0,\n\t\t\t\t\t\tslidesPerView: spv,\n\t\t\t\t\t\tloopedSlides: spv,\n\t\t\t\t\t\tspaceBetween: space,\n\t\t\t\t\t\tspeed: 600,\n\t\t\t\t\t\tcenteredSlides: false,\t//is_controller,\n\t\t\t\t\t\tloop: true,\t\t\t\t//!is_controller\n\t\t\t\t\t\tgrabCursor: !is_controller,\n\t\t\t\t\t\tslideToClickedSlide: is_controller,\n\t\t\t\t\t\ttouchRatio: is_controller ? 0.2 : 1,\n\t\t\t\t\t\tonSlideChangeStart: function (swiper) {\n\t\t\t\t\t\t\t// Change outside title\n\t\t\t\t\t\t\tcont.find('.slider_titles_outside_wrap .active').removeClass('active').fadeOut();\n\t\t\t\t\t\t\t// Update controller or controlled slider\n\t\t\t\t\t\t\tvar controlled_slider = jQuery('#'+slider.data(is_controller ? 'controlled-slider' : 'controller')+' .slider_swiper');\n\t\t\t\t\t\t\tvar controlled_id = controlled_slider.attr('id');\n\t\t\t\t\t\t\tif (TRX_ADDONS_STORAGE['swipers'][controlled_id] && jQuery('#'+controlled_id).attr('data-busy')!=1) {\n\t\t\t\t\t\t\t\tslider.attr('data-busy', 1);\n\t\t\t\t\t\t\t\tsetTimeout(function() { slider.attr('data-busy', 0); }, 300);\n\t\t\t\t\t\t\t\tvar slide_number = jQuery(swiper.slides[swiper.activeIndex]).data('slide-number');\n\t\t\t\t\t\t\t\tvar slide_idx = controlled_slider.find('[data-slide-number=\"'+slide_number+'\"]').index();\n\t\t\t\t\t\t\t\tTRX_ADDONS_STORAGE['swipers'][controlled_id].slideTo(slide_idx);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSlideChangeEnd: function (swiper) {\n\t\t\t\t\t\t\t// Change outside title\n\t\t\t\t\t\t\tvar titles = cont.find('.slider_titles_outside_wrap .slide_info');\n\t\t\t\t\t\t\tif (titles.length==0) return;\n\t\t\t\t\t\t\t//titles.eq((swiper.activeIndex-1)%titles.length).addClass('active').fadeIn();\n\t\t\t\t\t\t\ttitles.eq(jQuery(swiper.slides[swiper.activeIndex]).data('slide-number')).addClass('active').fadeIn(300);\n\t\t\t\t\t\t\t// Remove video\n\t\t\t\t\t\t\tcont.find('.trx_addons_video_player.with_cover.video_play').removeClass('video_play').find('.video_embed').empty();\n\t\t\t\t\t\t\t// Unlock slider/controller\n\t\t\t\t\t\t\tslider.attr('data-busy', 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tslider.attr('data-busy', 1).animate({'opacity':1}, 'fast');\n\t\t\t\t\tsetTimeout(function() { \n\t\t\t\t\t\tslider.attr('data-busy', 0); \n\t\t\t\t\t\tvar controller = controller_id ? jQuery('#'+controller_id) : false;\n\t\t\t\t\t\tif (controller && controller.length > 0 && controller.hasClass('sc_slider_controller_vertical') && controller.hasClass('sc_slider_controller_height_auto')) {\n\t\t\t\t\t\t\tvar paddings = parseFloat(controller.css('paddingTop'));\n\t\t\t\t\t\t\tif (isNaN(paddings)) paddings = 0;\n\t\t\t\t\t\t\tcontroller.find('.slider_swiper').height(slider.height() - 2*paddings);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 300);\n\t\t\t\t});\n\t\t}\n\t}\n\t\n\t\n\t// Init previously hidden sliders with engine=swiper\n\tfunction trx_addons_init_hidden_sliders(e, container) {\n\t\t// Init sliders in this container\n\t\ttrx_addons_init_sliders(e, container);\n\t\t// Check slides per view on current window size\n\t\ttrx_addons_resize_sliders(e, container);\n\t}\n\t\n\t// Sliders: Resize\n\tjQuery(document).on('action.resize_trx_addons', trx_addons_resize_sliders);\n\tfunction trx_addons_resize_sliders(e, container) {\n\t\tif (container === undefined) container = jQuery('body');\n\t\tcontainer.find('.slider_swiper.inited').each(function() {\n\n\t\t\t// If slider in the hidden block - don't resize it\n\t\t\tvar slider = jQuery(this);\n\t\t\tif (slider.parents('div:hidden,article:hidden').length > 0) return;\n\n\t\t\tvar id = slider.attr('id');\n\t\n\t\t\tvar last_width = slider.data('last-width');\n\t\t\tif (isNaN(last_width)) last_width = 0;\n\t\t\tif (last_width==0 || last_width!=slider_width) {\n\t\t\t\tslider.data('last-width', slider_width);\n\t\t\t\t// Change slides_per_view\n\t\t\t\tvar spv = slider.data('slides-per-view');\n\t\t\t\tvar direction = slider.data('direction');\n\t\t\t\tif (direction != 'vertical') direction = 'horizontal';\n\t\t\t\tif (TRX_ADDONS_STORAGE['swipers'][id].params.slidesPerView != 'auto') {\n\t\t\t\t\tif (direction=='horizontal') {\n\t\t\t\t\t\tvar smw = slider.data('slides-min-width');\n\t\t\t\t\t\tif (slider_width / spv < smw) spv = Math.max(1, Math.floor(slider_width / smw));\n\t\t\t\t\t\tif (TRX_ADDONS_STORAGE['swipers'][id].params.slidesPerView != spv) {\n\t\t\t\t\t\t\tTRX_ADDONS_STORAGE['swipers'][id].params.slidesPerView = spv;\n\t\t\t\t\t\t\tTRX_ADDONS_STORAGE['swipers'][id].params.loopedSlides = spv;\n\t\t\t\t\t\t\t//TRX_ADDONS_STORAGE['swipers'][id].reInit();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tTRX_ADDONS_STORAGE['swipers'][id].onResize();\n\t\t\t\t}\n\t\t\t\t// Change slider height\n\t\t\t\tif ( !slider.hasClass('slider_noresize') || slider.height()==0 ) {\n\t\t\t\t\tvar slider_width = slider.width();\n\t\t\t\t\tvar slide = slider.find('.swiper-slide').eq(0);\n\t\t\t\t\tvar slide_width = slide.width();\n\t\t\t\t\tvar slide_height = slide.height();\n\t\t\t\t\tvar ratio = slider.data('ratio');\n\t\t\t\t\tif (ratio===undefined || (''+ratio).indexOf(':')<1) {\n\t\t\t\t\t\tratio = slide_height > 0 ? slide_width+':'+slide_height : \"16:9\";\n\t\t\t\t\t\tslider.attr('data-ratio', ratio);\n\t\t\t\t\t}\n\t\t\t\t\tratio = ratio.split(':');\n\t\t\t\t\tvar ratio_x = !isNaN(ratio[0]) ? Number(ratio[0]) : 16;\n\t\t\t\t\tvar ratio_y = !isNaN(ratio[1]) ? Number(ratio[1]) : 9;\n\t\t\t\t\tslider.height( Math.floor((spv==1 ? slider_width : slide_width)/ratio_x*ratio_y) );\n\t\t\t\t\tvar controller_id = slider.data('controller');\n\t\t\t\t\tvar controller = controller_id ? jQuery('#'+controller_id) : false;\n\t\t\t\t\tif (controller && controller.length > 0 && controller.hasClass('sc_slider_controller_vertical') && controller.hasClass('sc_slider_controller_height_auto')) {\n\t\t\t\t\t\tvar paddings = parseFloat(controller.css('paddingTop'));\n\t\t\t\t\t\tif (isNaN(paddings)) paddings = 0;\n\t\t\t\t\t\tcontroller.find('.slider_swiper').height(slider.height() - 2*paddings);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n})();"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.347Z",
        "time": 0.16399999731220305,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.12599999899975955,
          "receive": 0.037999998312443495,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 975
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/shortcodes/form/form.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:09 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"ac4-5873f96f6cf40-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "1004"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2756,
            "mimeType": "application/javascript",
            "text": "/**\n * Shortcode Contact form\n *\n * @package WordPress\n * @subpackage ThemeREX Addons\n * @since v1.2\n */\n\n/* global jQuery:false */\n/* global TRX_ADDONS_STORAGE:false */\n\njQuery(document).on('action.init_shortcodes', function(e, container) {\n\n\t\"use strict\";\n\t\n\t// Contact form validate and submit\n\tif (container.find('.sc_form_form:not(.inited)').length > 0) {\n\t\tcontainer.find('.sc_form_form:not(.inited)')\n\t\t\t.addClass('inited')\n\t\t\t.submit(function(e) {\n\t\t\t\tsc_form_validate(jQuery(this));\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t});\n\t}\n\n\t// Mark field as 'filled'\n\tjQuery('[class*=\"sc_input_hover_\"] input, [class*=\"sc_input_hover_\"] textarea').each(function() {\n\t\tsc_form_mark_filled(jQuery(this));\n\t});\n\tjQuery('[class*=\"sc_input_hover_\"] input, [class*=\"sc_input_hover_\"] textarea').on('blur change', function() {\n\t\tsc_form_mark_filled(jQuery(this));\n\t});\n\tjQuery('input, textarea, select').on('change', function() {\n\t\tjQuery(this).removeClass('trx_addons_field_error');\n\t});\n\n\t\n\t// Mark fields\n\tfunction sc_form_mark_filled(field) {\n\t\tif (field.val()!='')\n\t\t\tfield.addClass('filled');\n\t\telse\n\t\t\tfield.removeClass('filled');\n\t}\n\t\n\t// Validate form\n\tfunction sc_form_validate(form){\n\t\tvar url = form.attr('action');\n\t\tif (url == '') return false;\n\t\tform.find('input').removeClass('trx_addons_error_field');\n\t\tvar error = trx_addons_form_validate(form, {\n\t\t\t\trules: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfield: \"name\",\n\t\t\t\t\t\tmin_length: { value: 1,\t message: TRX_ADDONS_STORAGE['msg_field_name_empty'] },\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tfield: \"email\",\n\t\t\t\t\t\tmin_length: { value: 1,\t message: TRX_ADDONS_STORAGE['msg_field_email_empty'] },\n\t\t\t\t\t\tmask: { value: TRX_ADDONS_STORAGE['email_mask'], message: TRX_ADDONS_STORAGE['msg_field_email_not_valid'] }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tfield: \"message\",\n\t\t\t\t\t\tmin_length: { value: 1,  message: TRX_ADDONS_STORAGE['msg_field_text_empty'] },\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t\n\t\tif (!error && url!='#') {\n\t\t\tjQuery.post(url, {\n\t\t\t\taction: \"send_sc_form\",\n\t\t\t\tnonce: TRX_ADDONS_STORAGE['ajax_nonce'],\n\t\t\t\tdata: form.serialize()\n\t\t\t}).done(function(response) {\n\t\t\t\tvar rez = {};\n\t\t\t\ttry {\n\t\t\t\t\trez = JSON.parse(response);\n\t\t\t\t} catch(e) {\n\t\t\t\t\trez = { error: TRX_ADDONS_STORAGE['msg_ajax_error'] };\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t}\n\t\t\t\tvar result = form.find(\".trx_addons_message_box\").toggleClass(\"trx_addons_message_box_error\", false).toggleClass(\"trx_addons_message_box_success\", false);\n\t\t\t\tif (rez.error === '') {\n\t\t\t\t\tform.get(0).reset();\n\t\t\t\t\tresult.addClass(\"trx_addons_message_box_success\").html(TRX_ADDONS_STORAGE['msg_send_complete']);\n\t\t\t\t} else {\n\t\t\t\t\tresult.addClass(\"trx_addons_message_box_error\").html(TRX_ADDONS_STORAGE['msg_send_error'] + ' ' + rez.error);\n\t\t\t\t}\n\t\t\t\tresult.fadeIn().delay(3000).fadeOut();\n\t\t\t});\n\t\t}\n\t\treturn !error;\n\t}\n});"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.348Z",
        "time": 0.20400000357767567,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.1810000030673109,
          "receive": 0.02300000051036477,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 976
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/themes/aquapro/js/superfish.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Fri, 03 Mar 2017 22:59:18 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"1b49-549db7ed35d80-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "2294"
            }
          ],
          "cookies": [],
          "content": {
            "size": 6985,
            "mimeType": "application/javascript",
            "text": "/*\n * jQuery Superfish Menu Plugin - v1.7.4\n * Copyright (c) 2013 Joel Birch\n *\n * Dual licensed under the MIT and GPL licenses:\n *\thttp://www.opensource.org/licenses/mit-license.php\n *\thttp://www.gnu.org/licenses/gpl.html\n */\n\n;(function ($) {\n\t\"use strict\";\n\n\tvar methods = (function () {\n\t\t// private properties and methods go here\n\t\tvar c = {\n\t\t\t\tbcClass: 'sf-breadcrumb',\n\t\t\t\tmenuClass: 'sf-js-enabled',\n\t\t\t\tanchorClass: 'sf-with-ul',\n\t\t\t\tmenuArrowClass: 'sf-arrows'\n\t\t\t},\n\t\t\tios = (function () {\n\t\t\t\tvar ios = /iPhone|iPad|iPod/i.test(navigator.userAgent);\n\t\t\t\tif (ios) {\n\t\t\t\t\t// iOS clicks only bubble as far as body children\n\t\t\t\t\t$(window).load(function () {\n\t\t\t\t\t\t$('body').children().on('click', $.noop);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn ios;\n\t\t\t})(),\n\t\t\twp7 = (function () {\n\t\t\t\tvar style = document.documentElement.style;\n\t\t\t\treturn ('behavior' in style && 'fill' in style && /iemobile/i.test(navigator.userAgent));\n\t\t\t})(),\n\t\t\ttoggleMenuClasses = function ($menu, o) {\n\t\t\t\tvar classes = c.menuClass;\n\t\t\t\tif (o.cssArrows) {\n\t\t\t\t\tclasses += ' ' + c.menuArrowClass;\n\t\t\t\t}\n\t\t\t\t$menu.toggleClass(classes);\n\t\t\t},\n\t\t\tsetPathToCurrent = function ($menu, o) {\n\t\t\t\treturn $menu.find('li.' + o.pathClass).slice(0, o.pathLevels)\n\t\t\t\t\t.addClass(o.hoverClass + ' ' + c.bcClass)\n\t\t\t\t\t\t.filter(function () {\n\t\t\t\t\t\t\treturn ($(this).children(o.popUpSelector).hide().show().length);\n\t\t\t\t\t\t}).removeClass(o.pathClass);\n\t\t\t},\n\t\t\ttoggleAnchorClass = function ($li) {\n\t\t\t\t$li.children('a').toggleClass(c.anchorClass);\n\t\t\t},\n\t\t\ttoggleTouchAction = function ($menu) {\n\t\t\t\tvar touchAction = $menu.css('ms-touch-action');\n\t\t\t\ttouchAction = (touchAction === 'pan-y') ? 'auto' : 'pan-y';\n\t\t\t\t$menu.css('ms-touch-action', touchAction);\n\t\t\t},\n\t\t\tapplyHandlers = function ($menu, o) {\n\t\t\t\tvar targets = 'li:has(' + o.popUpSelector + ')';\n\t\t\t\tif ($.fn.hoverIntent && !o.disableHI) {\n\t\t\t\t\t$menu.hoverIntent(over, out, targets);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$menu\n\t\t\t\t\t\t.on('mouseenter.superfish', targets, over)\n\t\t\t\t\t\t.on('mouseleave.superfish', targets, out);\n\t\t\t\t}\n\t\t\t\tvar touchevent = 'MSPointerDown.superfish';\n\t\t\t\tif (!ios) {\n\t\t\t\t\ttouchevent += ' touchend.superfish';\n\t\t\t\t}\n\t\t\t\tif (wp7) {\n\t\t\t\t\ttouchevent += ' mousedown.superfish';\n\t\t\t\t}\n\t\t\t\t$menu\n\t\t\t\t\t.on('focusin.superfish', 'li', over)\n\t\t\t\t\t.on('focusout.superfish', 'li', out)\n\t\t\t\t\t.on(touchevent, 'a', o, touchHandler);\n\t\t\t},\n\t\t\ttouchHandler = function (e) {\n\t\t\t\tvar $this = $(this),\n\t\t\t\t\t$ul = $this.siblings(e.data.popUpSelector);\n\n\t\t\t\tif ($ul.length > 0 && $ul.is(':hidden')) {\n\t\t\t\t\t$this.one('click.superfish', false);\n\t\t\t\t\tif (e.type === 'MSPointerDown') {\n\t\t\t\t\t\t$this.trigger('focus');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$.proxy(over, $this.parent('li'))();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tover = function () {\n\t\t\t\tvar $this = $(this),\n\t\t\t\t\to = getOptions($this);\n\t\t\t\tclearTimeout(o.sfTimer);\n\t\t\t\t$this.siblings().superfish('hide').end().superfish('show');\n\t\t\t},\n\t\t\tout = function () {\n\t\t\t\tvar $this = $(this),\n\t\t\t\t\to = getOptions($this);\n\t\t\t\tif (ios) {\n\t\t\t\t\t$.proxy(close, $this, o)();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tclearTimeout(o.sfTimer);\n\t\t\t\t\to.sfTimer = setTimeout($.proxy(close, $this, o), o.delay);\n\t\t\t\t}\n\t\t\t},\n\t\t\tclose = function (o) {\n\t\t\t\to.retainPath = ($.inArray(this[0], o.$path) > -1);\n\t\t\t\tthis.superfish('hide');\n\n\t\t\t\tif (!this.parents('.' + o.hoverClass).length) {\n\t\t\t\t\to.onIdle.call(getMenu(this));\n\t\t\t\t\tif (o.$path.length) {\n\t\t\t\t\t\t$.proxy(over, o.$path)();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetMenu = function ($el) {\n\t\t\t\treturn $el.closest('.' + c.menuClass);\n\t\t\t},\n\t\t\tgetOptions = function ($el) {\n\t\t\t\treturn getMenu($el).data('sf-options');\n\t\t\t};\n\n\t\treturn {\n\t\t\t// public methods\n\t\t\thide: function (instant) {\n\t\t\t\tif (this.length) {\n\t\t\t\t\tvar $this = this,\n\t\t\t\t\t\to = getOptions($this);\n\t\t\t\t\tif (!o) {\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\t\tvar not = (o.retainPath === true) ? o.$path : '',\n\t\t\t\t\t\t$ul = $this.find('li.' + o.hoverClass).add(this).not(not).removeClass(o.hoverClass).children(o.popUpSelector),\n\t\t\t\t\t\tspeed = o.speedOut;\n\n\t\t\t\t\tif (instant) {\n\t\t\t\t\t\t$ul.show();\n\t\t\t\t\t\tspeed = 0;\n\t\t\t\t\t}\n\t\t\t\t\to.retainPath = false;\n\t\t\t\t\to.onBeforeHide.call($ul);\n\t\t\t\t\t$ul.stop(true, true).animate(o.animationOut, speed, function () {\n\t\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\t\to.onHide.call($this);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tshow: function () {\n\t\t\t\tvar o = getOptions(this);\n\t\t\t\tif (!o) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tvar $this = this.addClass(o.hoverClass),\n\t\t\t\t\t$ul = $this.children(o.popUpSelector);\n\n\t\t\t\to.onBeforeShow.call($ul);\n\t\t\t\t$ul.stop(true, true).animate(o.animation, o.speed, function () {\n\t\t\t\t\to.onShow.call($ul);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdestroy: function () {\n\t\t\t\treturn this.each(function () {\n\t\t\t\t\tvar $this = $(this),\n\t\t\t\t\t\to = $this.data('sf-options'),\n\t\t\t\t\t\t$hasPopUp;\n\t\t\t\t\tif (!o) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t$hasPopUp = $this.find(o.popUpSelector).parent('li');\n\t\t\t\t\tclearTimeout(o.sfTimer);\n\t\t\t\t\ttoggleMenuClasses($this, o);\n\t\t\t\t\ttoggleAnchorClass($hasPopUp);\n\t\t\t\t\ttoggleTouchAction($this);\n\t\t\t\t\t// remove event handlers\n\t\t\t\t\t$this.off('.superfish').off('.hoverIntent');\n\t\t\t\t\t// clear animation's inline display style\n\t\t\t\t\t$hasPopUp.children(o.popUpSelector).attr('style', function (i, style) {\n\t\t\t\t\t\treturn style.replace(/display[^;]+;?/g, '');\n\t\t\t\t\t});\n\t\t\t\t\t// reset 'current' path classes\n\t\t\t\t\to.$path.removeClass(o.hoverClass + ' ' + c.bcClass).addClass(o.pathClass);\n\t\t\t\t\t$this.find('.' + o.hoverClass).removeClass(o.hoverClass);\n\t\t\t\t\to.onDestroy.call($this);\n\t\t\t\t\t$this.removeData('sf-options');\n\t\t\t\t});\n\t\t\t},\n\t\t\tinit: function (op) {\n\t\t\t\treturn this.each(function () {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\tif ($this.data('sf-options')) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tvar o = $.extend({}, $.fn.superfish.defaults, op),\n\t\t\t\t\t\t$hasPopUp = $this.find(o.popUpSelector).parent('li');\n\t\t\t\t\to.$path = setPathToCurrent($this, o);\n\n\t\t\t\t\t$this.data('sf-options', o);\n\n\t\t\t\t\ttoggleMenuClasses($this, o);\n\t\t\t\t\ttoggleAnchorClass($hasPopUp);\n\t\t\t\t\ttoggleTouchAction($this);\n\t\t\t\t\tapplyHandlers($this, o);\n\n\t\t\t\t\t$hasPopUp.not('.' + c.bcClass).superfish('hide', true);\n\n\t\t\t\t\to.onInit.call(this);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t})();\n\n\t$.fn.superfish = function (method, args) {\n\t\tif (methods[method]) {\n\t\t\treturn methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t}\n\t\telse if (typeof method === 'object' || ! method) {\n\t\t\treturn methods.init.apply(this, arguments);\n\t\t}\n\t\telse {\n\t\t\treturn $.error('Method ' +  method + ' does not exist on jQuery.fn.superfish');\n\t\t}\n\t};\n\n\t$.fn.superfish.defaults = {\n\t\tpopUpSelector: 'ul,.sf-mega', // within menu context\n\t\thoverClass: 'sfHover',\n\t\tpathClass: 'overrideThisToUse',\n\t\tpathLevels: 1,\n\t\tdelay: 800,\n\t\tanimation: {opacity: 'show'},\n\t\tanimationOut: {opacity: 'hide'},\n\t\tspeed: 'normal',\n\t\tspeedOut: 'fast',\n\t\tcssArrows: true,\n\t\tdisableHI: false,\n\t\tonInit: $.noop,\n\t\tonBeforeShow: $.noop,\n\t\tonShow: $.noop,\n\t\tonBeforeHide: $.noop,\n\t\tonHide: $.noop,\n\t\tonIdle: $.noop,\n\t\tonDestroy: $.noop\n\t};\n\n\t// soon to be deprecated\n\t$.fn.extend({\n\t\thideSuperfishUl: methods.hide,\n\t\tshowSuperfishUl: methods.show\n\t});\n\n})(jQuery);\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.348Z",
        "time": 0.2610000010463409,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.21399999968707561,
          "receive": 0.0470000013592653,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 977
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/themes/aquapro/js/_utils.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Fri, 03 Mar 2017 22:59:18 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"a590-549db7ed35d80-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "11909"
            }
          ],
          "cookies": [],
          "content": {
            "size": 42384,
            "mimeType": "application/javascript",
            "text": "/**\n * Javascript utilities\n *\n * @package WordPress\n * @subpackage AQUAPRO\n * @since AQUAPRO 1.0\n */\n\n/* global jQuery:false */\n/* global AQUAPRO_STORAGE:false */\n\n/* Global variables manipulations\n---------------------------------------------------------------- */\n\n(function(){\n\t\"use strict\";\n\n\t// Global variables storage\n\tif (typeof AQUAPRO_STORAGE == 'undefined') window.AQUAPRO_STORAGE = {};\n\t\n\t// Get global variable\n\twindow.aquapro_storage_get = function(var_name) {\n\t\treturn aquapro_isset(AQUAPRO_STORAGE[var_name]) ? AQUAPRO_STORAGE[var_name] : '';\n\t};\n\t\n\t// Set global variable\n\twindow.aquapro_storage_set = function(var_name, value) {\n\t\tAQUAPRO_STORAGE[var_name] = value;\n\t};\n\t\n\t// Inc/Dec global variable with specified value\n\twindow.aquapro_storage_inc = function(var_name) {\n\t\tvar value = arguments[1]===undefined ? 1 : arguments[1];\n\t\tAQUAPRO_STORAGE[var_name] += value;\n\t};\n\t\n\t// Concatenate global variable with specified value\n\twindow.aquapro_storage_concat = function(var_name, value) {\n\t\tAQUAPRO_STORAGE[var_name] += ''+value;\n\t};\n\t\n\t// Get global array element\n\twindow.aquapro_storage_get_array = function(var_name, key) {\n\t\treturn aquapro_isset(AQUAPRO_STORAGE[var_name][key]) ? AQUAPRO_STORAGE[var_name][key] : '';\n\t};\n\t\n\t// Set global array element\n\twindow.aquapro_storage_set_array = function(var_name, key, value) {\n\t\tif (!aquapro_isset(AQUAPRO_STORAGE[var_name])) AQUAPRO_STORAGE[var_name] = {};\n\t\tAQUAPRO_STORAGE[var_name][key] = value;\n\t};\n\t\n\t// Inc/Dec global array element with specified value\n\twindow.aquapro_storage_inc_array = function(var_name, key) {\n\t\tvar value = arguments[2]===undefined ? 1 : arguments[2];\n\t\tAQUAPRO_STORAGE[var_name][key] += value;\n\t};\n\t\n\t// Concatenate global array element with specified value\n\twindow.aquapro_storage_concat_array = function(var_name, key, value) {\n\t\tAQUAPRO_STORAGE[var_name][key] += ''+value;\n\t};\n\t\n\t\n\t\n\t/* PHP-style functions\n\t---------------------------------------------------------------- */\n\twindow.aquapro_isset = function(obj) {\n\t\treturn typeof(obj) != 'undefined';\n\t};\n\t\n\twindow.aquapro_empty = function(obj) {\n\t\treturn typeof(obj) == 'undefined' || (typeof(obj)=='object' && obj == null) || (typeof(obj)=='array' && obj.length == 0) || (typeof(obj)=='string' && aquapro_alltrim(obj)=='') || obj===0;\n\t};\n\t\n\twindow.aquapro_is_array = function(obj)  {\n\t\treturn typeof(obj)=='array';\n\t};\n\t\n\twindow.aquapro_is_object = function(obj)  {\n\t\treturn typeof(obj)=='object';\n\t};\n\t\n\twindow.aquapro_clone_object = function(obj) {\n\t\tif (obj == null || typeof(obj) != 'object') {\n\t\t\treturn obj;\n\t\t}\n\t\tvar temp = {};\n\t\tfor (var key in obj) {\n\t\t\ttemp[key] = aquapro_clone_object(obj[key]);\n\t\t}\n\t\treturn temp;\n\t};\n\t\n\twindow.aquapro_merge_objects = function(obj1, obj2)  {\n\t\tfor (var i in obj2) obj1[i] = obj2[i];\n\t\treturn obj1;\n\t};\n\t\n\t// Generates a storable representation of a value\n\twindow.aquapro_serialize = function(mixed_val) {\n\t\tvar obj_to_array = arguments.length==1 || argument[1]===true;\n\t\n\t\tswitch (typeof(mixed_val)) {\n\t\n\t\t\tcase \"number\":\n\t\t\t\tif (isNaN(mixed_val) || !isFinite(mixed_val))\n\t\t\t\t\treturn false;\n\t\t\t\telse\n\t\t\t\t\treturn (Math.floor(mixed_val) == mixed_val ? \"i\" : \"d\") + \":\" + mixed_val + \";\";\n\t\n\t\t\tcase \"string\":\n\t\t\t\treturn \"s:\" + mixed_val.length + \":\\\"\" + mixed_val + \"\\\";\";\n\t\n\t\t\tcase \"boolean\":\n\t\t\t\treturn \"b:\" + (mixed_val ? \"1\" : \"0\") + \";\";\n\t\n\t\t\tcase \"object\":\n\t\t\t\tif (mixed_val == null)\n\t\t\t\t\treturn \"N;\";\n\t\t\t\telse if (mixed_val instanceof Array) {\n\t\t\t\t\tvar idxobj = { idx: -1 };\n\t\t\t\t\tvar map = [];\n\t\t\t\t\tfor (var i=0; i<mixed_val.length; i++) {\n\t\t\t\t\t\tidxobj.idx++;\n\t\t\t\t\t\tvar ser = aquapro_serialize(mixed_val[i]);\n\t\t\t\t\t\tif (ser)\n\t\t\t\t\t\t\tmap.push(aquapro_serialize(idxobj.idx) + ser);\n\t\t\t\t\t}                                      \n\t\t\t\t\treturn \"a:\" + mixed_val.length + \":{\" + map.join(\"\") + \"}\";\n\t\t\t\t} else {\n\t\t\t\t\tvar class_name = aquapro_get_class(mixed_val);\n\t\t\t\t\tif (class_name == undefined)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tvar props = new Array();\n\t\t\t\t\tfor (var prop in mixed_val) {\n\t\t\t\t\t\tvar ser = aquapro_serialize(mixed_val[prop]);\n\t\t\t\t\t\tif (ser)\n\t\t\t\t\t\t\tprops.push(aquapro_serialize(prop) + ser);\n\t\t\t\t\t}\n\t\t\t\t\tif (obj_to_array)\n\t\t\t\t\t\treturn \"a:\" + props.length + \":{\" + props.join(\"\") + \"}\";\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"O:\" + class_name.length + \":\\\"\" + class_name + \"\\\":\" + props.length + \":{\" + props.join(\"\") + \"}\";\n\t\t\t\t}\n\t\n\t\t\tcase \"undefined\":\n\t\t\t\treturn \"N;\";\n\t\t}\n\t\treturn false;\n\t};\n\t\n\t// Returns the name of the class of an object\n\twindow.aquapro_get_class = function(obj) {\n\t\tif (obj instanceof Object && !(obj instanceof Array) && !(obj instanceof Function) && obj.constructor) {\n\t\t\tvar arr = obj.constructor.toString().match(/function\\s*(\\w+)/);\n\t\t\tif (arr && arr.length == 2) return arr[1];\n\t\t}\n\t\treturn false;\n\t};\n\t\n\t\n\t/* String functions\n\t---------------------------------------------------------------- */\n\t\n\twindow.aquapro_in_list = function(str, list) {\n\t\tvar delim = arguments[2]!==undefined ? arguments[2] : '|';\n\t\tvar icase = arguments[3]!==undefined ? arguments[3] : true;\n\t\tvar retval = false;\n\t\tif (icase) {\n\t\t\tif (typeof(str)=='string') str = str.toLowerCase();\n\t\t\tlist = list.toLowerCase();\n\t\t}\n\t\tvar parts = list.split(delim);\n\t\tfor (var i=0; i<parts.length; i++) {\n\t\t\tif (parts[i]==str) {\n\t\t\t\tretval=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn retval;\n\t};\n\t\n\twindow.aquapro_alltrim = function(str) {\n\t\tvar dir = arguments[1]!==undefined ? arguments[1] : 'a';\n\t\tvar rez = '';\n\t\tvar i, start = 0, end = str.length-1;\n\t\tif (dir=='a' || dir=='l') {\n\t\t\tfor (i=0; i<str.length; i++) {\n\t\t\t\tif (str.substr(i,1)!=' ') {\n\t\t\t\t\tstart = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (dir=='a' || dir=='r') {\n\t\t\tfor (i=str.length-1; i>=0; i--) {\n\t\t\t\tif (str.substr(i,1)!=' ') {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn str.substring(start, end+1);\n\t};\n\t\n\twindow.aquapro_ltrim = function(str) {\n\t\treturn aquapro_alltrim(str, 'l');\n\t};\n\t\n\twindow.aquapro_rtrim = function(str) {\n\t\treturn aquapro_alltrim(str, 'r');\n\t};\n\t\n\twindow.aquapro_padl = function(str, len) {\n\t\tvar ch = arguments[2]!==undefined ? arguments[2] : ' ';\n\t\tvar rez = str.substr(0,len);\n\t\tif (rez.length < len) {\n\t\t\tfor (var i=0; i<len-str.length; i++)\n\t\t\t\trez += ch;\n\t\t}\n\t\treturn rez;\n\t};\n\t\n\twindow.aquapro_padr = function(str, len) {\n\t\tvar ch = arguments[2]!==undefined ? arguments[2] : ' ';\n\t\tvar rez = str.substr(0,len);\n\t\tif (rez.length < len) {\n\t\t\tfor (var i=0; i<len-str.length; i++)\n\t\t\t\trez = ch + rez;\n\t\t}\n\t\treturn rez;\n\t};\n\t\n\twindow.aquapro_padc = function(str, len) {\n\t\tvar ch = arguments[2]!==undefined ? arguments[2] : ' ';\n\t\tvar rez = str.substr(0,len);\n\t\tif (rez.length < len) {\n\t\t\tfor (var i=0; i<Math.floor((len-str.length)/2); i++)\n\t\t\t\trez = ch + rez + ch;\n\t\t}\n\t\treturn rez+(rez.length<len ? ch : '');\n\t};\n\t\n\twindow.aquapro_replicate = function(str, num) {\n\t\tvar rez = '';\n\t\tfor (var i=0; i<num; i++) {\n\t\t\trez += str;\n\t\t}\n\t\treturn rez;\n\t};\n\t\n\twindow.aquapro_prepare_macros = function(str) {\n\t\treturn str\n\t\t\t.replace(/\\{\\{/g, \"<i>\")\n\t\t\t.replace(/\\}\\}/g, \"</i>\")\n\t\t\t.replace(/\\[\\[/g, \"<b>\")\n\t\t\t.replace(/\\]\\]/g, \"</b>\")\n\t\t\t.replace(/\\|\\|/g, \"<br>\");\n\t};\n\t\n\t\n\t\n\t/* Numbers functions\n\t---------------------------------------------------------------- */\n\t\n\t// Round number to specified precision. \n\t// For example: num=1.12345, prec=2,  rounded=1.12\n\t//              num=12345,   prec=-2, rounded=12300\n\twindow.aquapro_round_number = function(num) {\n\t\tvar precision = arguments[1]!==undefined ? arguments[1] : 0;\n\t\tvar p = Math.pow(10, precision);\n\t\treturn Math.round(num*p)/p;\n\t};\n\t\n\t// Clear number from any characters and append it with 0 to desired precision\n\t// For example: num=test1.12dd, prec=3, cleared=1.120\n\twindow.aquapro_clear_number = function(num) {\n\t\tvar precision = arguments[1]!==undefined ? arguments[1] : 0;\n\t\tvar defa = arguments[2]!==undefined ? arguments[2] : 0;\n\t\tvar res = '';\n\t\tvar decimals = -1;\n\t\tnum = \"\"+num;\n\t\tif (num==\"\") num=\"\"+defa;\n\t\tfor (var i=0; i<num.length; i++) {\n\t\t\tif (decimals==0) break;\n\t\t\telse if (decimals>0) decimals--;\n\t\t\tvar ch = num.substr(i,1);\n\t\t\tif (ch=='.') {\n\t\t\t\tif (precision>0) {\n\t\t\t\t\tres += ch;\n\t\t\t\t}\n\t\t\t\tdecimals = precision;\n\t\t\t} else if ((ch>=0 && ch<=9) || (ch=='-' && i==0))\n\t\t\t\tres+=ch;\n\t\t}\n\t\tif (precision>0 && decimals!=0) {\n\t\t\tif (decimals==-1) {\n\t\t\t\tres += '.';\n\t\t\t\tdecimals = precision;\n\t\t\t}\n\t\t\tfor (i=decimals; i>0; i--)\n\t\t\t\tres +='0'; \n\t\t}\n\t\t//if (isNaN(res)) res = clearNumber(defa, precision, defa);\n\t\treturn res;\n\t};\n\t\n\t// Convert number from decimal to hex\n\twindow.aquapro_dec2hex = function(n) { \n\t\treturn Number(n).toString(16);\n\t};\n\t\n\t// Convert number from hex to decimal\n\twindow.aquapro_hex2dec = function(hex) {\n\t\treturn parseInt(hex,16); \n\t};\n\t\n\t\n\t\n\t/* Array manipulations\n\t---------------------------------------------------------------- */\n\t\n\twindow.aquapro_in_array = function(val, thearray)  {\n\t\tvar rez = false;\n\t\tfor (var i=0; i<thearray.length-1; i++)  {\n\t\t\tif (thearray[i] == val)  {\n\t\t\t\trez = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn rez;\n\t};\n\t\n\twindow.aquapro_sort_array = function(thearray)  {\n\t\tvar caseSensitive = arguments[1]!==undefined ? arguments[1] : false;\n\t\tvar tmp = '';\n\t\tfor (var x=0; x<thearray.length-1; x++)  {\n\t\t\tfor (var y=(x+1); y<thearray.length; y++)  {\n\t\t\t\tif (caseSensitive) {\n\t\t\t\t\tif (thearray[x] > thearray[y])  {\n\t\t\t\t\t\ttmp = thearray[x];\n\t\t\t\t\t\tthearray[x] = thearray[y];\n\t\t\t\t\t\tthearray[y] = tmp;\n\t\t\t\t\t}  \n\t\t\t\t} else {\n\t\t\t\t\tif (thearray[x].toLowerCase() > thearray[y].toLowerCase())  {\n\t\t\t\t\t\ttmp = thearray[x];\n\t\t\t\t\t\tthearray[x] = thearray[y];\n\t\t\t\t\t\tthearray[y] = tmp;\n\t\t\t\t\t}  \n\t\t\t\t}\n\t\t\t}  \n\t\t}\n\t\treturn thearray;\n\t};\n\t\n\t\n\t\n\t/* Date manipulations\n\t---------------------------------------------------------------- */\n\t\n\t// Return array[Year, Month, Day, Hours, Minutes, Seconds]\n\t// from string: Year[-/.]Month[-/.]Day[T ]Hours:Minutes:Seconds\n\twindow.aquapro_parse_date = function(dt) {\n\t\tdt = dt.replace(/\\//g, '-').replace(/\\./g, '-').replace(/T/g, ' ').split('+')[0];\n\t\tvar dt2 = dt.split(' ');\n\t\tvar d = dt2[0].split('-');\n\t\tvar t = dt2[1].split(':');\n\t\td.push(t[0], t[1], t[2]);\n\t\treturn d;\n\t};\n\t\n\t// Return difference string between two dates\n\twindow.aquapro_get_date_difference = function(dt1) {\n\t\tvar dt2 = arguments[1]!==undefined ? arguments[1] : '';\n\t\tvar short_date = arguments[2]!==undefined ? arguments[2] : true;\n\t\tvar sec = arguments[3]!==undefined ? arguments[3] : false;\n\t\tvar a1 = aquapro_parse_date(dt1);\n\t\tdt1 = Date.UTC(a1[0], a1[1], a1[2], a1[3], a1[4], a1[5]);\n\t\tif (dt2 == '') {\n\t\t\tdt2 = new Date();\n\t\t\tvar a2 = [dt2.getFullYear(), dt2.getMonth()+1, dt2.getDate(), dt2.getHours(), dt2.getMinutes(), dt2.getSeconds()];\n\t\t} else\n\t\t\tvar a2 = aquapro_parse_date(dt2);\n\t\tdt2 = Date.UTC(a2[0], a2[1], a2[2], a2[3], a2[4], a2[5]);\n\t\tvar diff = Math.round((dt2 - dt1)/1000);\n\t\tvar days = Math.floor(diff / (24*3600));\n\t\tdiff -= days * 24 * 3600;\n\t\tvar hours = Math.floor(diff / 3600);\n\t\tdiff -= hours * 3600;\n\t\tvar minutes = Math.floor(diff / 60);\n\t\tdiff -= minutes * 60;\n\t\tvar rez = '';\n\t\tif (days > 0)\n\t\t\trez += (rez!='' ? ' ' : '') + days + ' day' + (days > 1 ? 's' : '');\n\t\tif ((!short_date || rez=='') && hours > 0)\n\t\t\trez += (rez!='' ? ' ' : '') + hours + ' hour' + (hours > 1 ? 's' : '');\n\t\tif ((!short_date || rez=='') && minutes > 0)\n\t\t\trez +=  (rez!='' ? ' ' : '') + minutes + ' minute' + (minutes > 1 ? 's' : '');\n\t\tif (sec || rez=='')\n\t\t\trez +=  rez!='' || sec ? (' ' + diff + ' second' + (diff > 1 ? 's' : '')) : 'less then minute';\n\t\treturn rez;\n\t};\n\t\n\t\n\t\n\t/* Colors functions\n\t---------------------------------------------------------------- */\n\t\n\twindow.aquapro_hex2rgb = function(hex) {\n\t\thex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n\t\treturn {r: hex >> 16, g: (hex & 0x00FF00) >> 8, b: (hex & 0x0000FF)};\n\t};\n\t\n\twindow.aquapro_rgb2hex = function(color) {\n\t\tvar aRGB;\n\t\tcolor = color.replace(/\\s/g,\"\").toLowerCase();\n\t\tif (color=='rgba(0,0,0,0)' || color=='rgba(0%,0%,0%,0%)')\n\t\t\tcolor = 'transparent';\n\t\tif (color.indexOf('rgba(')==0)\n\t\t\taRGB = color.match(/^rgba\\((\\d{1,3}[%]?),(\\d{1,3}[%]?),(\\d{1,3}[%]?),(\\d{1,3}[%]?)\\)$/i);\n\t\telse\t\n\t\t\taRGB = color.match(/^rgb\\((\\d{1,3}[%]?),(\\d{1,3}[%]?),(\\d{1,3}[%]?)\\)$/i);\n\t\t\n\t\tif(aRGB) {\n\t\t\tcolor = '';\n\t\t\tfor (var i=1; i<=3; i++) \n\t\t\t\tcolor += Math.round((aRGB[i][aRGB[i].length-1]==\"%\"?2.55:1)*parseInt(aRGB[i])).toString(16).replace(/^(.)$/,'0$1');\n\t\t} else \n\t\t\tcolor = color.replace(/^#?([\\da-f])([\\da-f])([\\da-f])$/i, '$1$1$2$2$3$3');\n\t\treturn (color.substr(0,1)!='#' ? '#' : '') + color;\n\t};\n\t\n\twindow.aquapro_components2hex = function(r,g,b) {\n\t\treturn '#'+\n\t\t\tNumber(r).toString(16).toUpperCase().replace(/^(.)$/,'0$1') +\n\t\t\tNumber(g).toString(16).toUpperCase().replace(/^(.)$/,'0$1') +\n\t\t\tNumber(b).toString(16).toUpperCase().replace(/^(.)$/,'0$1');\n\t};\n\t\n\twindow.aquapro_rgb2components = function(color) {\n\t\tcolor = aquapro_rgb2hex(color);\n\t\tvar matches = color.match(/^#?([\\dabcdef]{2})([\\dabcdef]{2})([\\dabcdef]{2})$/i);\n\t\tif (!matches) return false;\n\t\tfor (var i=1, rgb = new Array(3); i<=3; i++)\n\t\t\trgb[i-1] = parseInt(matches[i],16);\n\t\treturn rgb;\n\t};\n\t\n\twindow.aquapro_hex2hsb = function(hex) {\n\t\tvar h = arguments[1]!==undefined ? arguments[1] : 0;\n\t\tvar s = arguments[2]!==undefined ? arguments[2] : 0;\n\t\tvar b = arguments[3]!==undefined ? arguments[3] : 0;\n\t\tvar hsb = aquapro_rgb2hsb(aquapro_hex2rgb(hex));\n\t\thsb.h = Math.min(359, hsb.h + h);\n\t\thsb.s = Math.min(100, hsb.s + s);\n\t\thsb.b = Math.min(100, hsb.b + b);\n\t\treturn hsb;\n\t};\n\t\n\twindow.aquapro_hsb2hex = function(hsb) {\n\t\tvar rgb = aquapro_hsb2rgb(hsb);\n\t\treturn aquapro_components2hex(rgb.r, rgb.g, rgb.b);\n\t};\n\t\n\twindow.aquapro_rgb2hsb = function(rgb) {\n\t\tvar hsb = {};\n\t\thsb.b = Math.max(Math.max(rgb.r,rgb.g),rgb.b);\n\t\thsb.s = (hsb.b <= 0) ? 0 : Math.round(100*(hsb.b - Math.min(Math.min(rgb.r,rgb.g),rgb.b))/hsb.b);\n\t\thsb.b = Math.round((hsb.b /255)*100);\n\t\tif ((rgb.r==rgb.g) && (rgb.g==rgb.b))  hsb.h = 0;\n\t\telse if (rgb.r>=rgb.g && rgb.g>=rgb.b) hsb.h = 60*(rgb.g-rgb.b)/(rgb.r-rgb.b);\n\t\telse if (rgb.g>=rgb.r && rgb.r>=rgb.b) hsb.h = 60  + 60*(rgb.g-rgb.r)/(rgb.g-rgb.b);\n\t\telse if (rgb.g>=rgb.b && rgb.b>=rgb.r) hsb.h = 120 + 60*(rgb.b-rgb.r)/(rgb.g-rgb.r);\n\t\telse if (rgb.b>=rgb.g && rgb.g>=rgb.r) hsb.h = 180 + 60*(rgb.b-rgb.g)/(rgb.b-rgb.r);\n\t\telse if (rgb.b>=rgb.r && rgb.r>=rgb.g) hsb.h = 240 + 60*(rgb.r-rgb.g)/(rgb.b-rgb.g);\n\t\telse if (rgb.r>=rgb.b && rgb.b>=rgb.g) hsb.h = 300 + 60*(rgb.r-rgb.b)/(rgb.r-rgb.g);\n\t\telse \t\t\t\t\t\t\t\t   hsb.h = 0;\n\t\thsb.h = Math.round(hsb.h);\n\t\treturn hsb;\n\t};\n\t\n\twindow.aquapro_hsb2rgb = function(hsb) {\n\t\tvar rgb = {};\n\t\tvar h = Math.round(hsb.h);\n\t\tvar s = Math.round(hsb.s*255/100);\n\t\tvar v = Math.round(hsb.b*255/100);\n\t\tif (s == 0) {\n\t\t\trgb.r = rgb.g = rgb.b = v;\n\t\t} else {\n\t\t\tvar t1 = v;\n\t\t\tvar t2 = (255-s)*v/255;\n\t\t\tvar t3 = (t1-t2)*(h%60)/60;\n\t\t\tif (h==360) h = 0;\n\t\t\tif (h<60) \t\t{ rgb.r=t1;\trgb.b=t2;   rgb.g=t2+t3; }\n\t\t\telse if (h<120) { rgb.g=t1; rgb.b=t2;\trgb.r=t1-t3; }\n\t\t\telse if (h<180) { rgb.g=t1; rgb.r=t2;\trgb.b=t2+t3; }\n\t\t\telse if (h<240) { rgb.b=t1; rgb.r=t2;\trgb.g=t1-t3; }\n\t\t\telse if (h<300) { rgb.b=t1; rgb.g=t2;\trgb.r=t2+t3; }\n\t\t\telse if (h<360) { rgb.r=t1; rgb.g=t2;\trgb.b=t1-t3; }\n\t\t\telse \t\t\t{ rgb.r=0;  rgb.g=0;\trgb.b=0;\t }\n\t\t}\n\t\treturn { r:Math.round(rgb.r), g:Math.round(rgb.g), b:Math.round(rgb.b) };\n\t};\n\t\n\twindow.aquapro_color_picker = function(){\n\t\tvar id = arguments[0]!==undefined ? arguments[0] : \"iColorPicker\"+Math.round(Math.random()*1000);\n\t\tvar colors = arguments[1]!==undefined ? arguments[1] : \n\t\t'#f00,#ff0,#0f0,#0ff,#00f,#f0f,#fff,#ebebeb,#e1e1e1,#d7d7d7,#cccccc,#c2c2c2,#b7b7b7,#acacac,#a0a0a0,#959595,'\n\t\t+'#ee1d24,#fff100,#00a650,#00aeef,#2f3192,#ed008c,#898989,#7d7d7d,#707070,#626262,#555,#464646,#363636,#262626,#111,#000,'\n\t\t+'#f7977a,#fbad82,#fdc68c,#fff799,#c6df9c,#a4d49d,#81ca9d,#7bcdc9,#6ccff7,#7ca6d8,#8293ca,#8881be,#a286bd,#bc8cbf,#f49bc1,#f5999d,'\n\t\t+'#f16c4d,#f68e54,#fbaf5a,#fff467,#acd372,#7dc473,#39b778,#16bcb4,#00bff3,#438ccb,#5573b7,#5e5ca7,#855fa8,#a763a9,#ef6ea8,#f16d7e,'\n\t\t+'#ee1d24,#f16522,#f7941d,#fff100,#8fc63d,#37b44a,#00a650,#00a99e,#00aeef,#0072bc,#0054a5,#2f3192,#652c91,#91278f,#ed008c,#ee105a,'\n\t\t+'#9d0a0f,#a1410d,#a36209,#aba000,#588528,#197b30,#007236,#00736a,#0076a4,#004a80,#003370,#1d1363,#450e61,#62055f,#9e005c,#9d0039,'\n\t\t+'#790000,#7b3000,#7c4900,#827a00,#3e6617,#045f20,#005824,#005951,#005b7e,#003562,#002056,#0c004b,#30004a,#4b0048,#7a0045,#7a0026';\n\t\tvar colorsList = colors.split(',');\n\t\tvar tbl = '<table class=\"colorPickerTable\"><thead>';\n\t\tfor (var i=0; i<colorsList.length; i++) {\n\t\t\tif (i%16==0) tbl += (i>0 ? '</tr>' : '') + '<tr>';\n\t\t\ttbl += '<td style=\"background-color:'+colorsList[i]+'\">&nbsp;</td>';\n\t\t}\n\t\ttbl += '</tr></thead><tbody>'\n\t\t\t+ '<tr style=\"height:60px;\">'\n\t\t\t+ '<td colspan=\"8\" id=\"'+id+'_colorPreview\" style=\"vertical-align:middle;text-align:center;border:1px solid #000;background:#fff;\">'\n\t\t\t+ '<input style=\"width:55px;color:#000;border:1px solid rgb(0, 0, 0);padding:5px;background-color:#fff;font:11px Arial, Helvetica, sans-serif;\" maxlength=\"7\" />'\n\t\t\t+ '<a href=\"#\" id=\"'+id+'_moreColors\" class=\"iColorPicker_moreColors\"></a>'\n\t\t\t+ '</td>'\n\t\t\t+ '<td colspan=\"8\" id=\"'+id+'_colorOriginal\" style=\"vertical-align:middle;text-align:center;border:1px solid #000;background:#fff;\">'\n\t\t\t+ '<input style=\"width:55px;color:#000;border:1px solid rgb(0, 0, 0);padding:5px;background-color:#fff;font:11px Arial, Helvetica, sans-serif;\" readonly=\"readonly\" />'\n\t\t\t+ '</td>'\n\t\t\t+ '</tr></tbody></table>';\n\t\n\t\tjQuery(document.createElement(\"div\"))\n\t\t\t.attr(\"id\", id)\n\t\t\t.css('display','none')\n\t\t\t.html(tbl)\n\t\t\t.appendTo(\"body\")\n\t\t\t.addClass(\"iColorPickerTable\")\n\t\t\t.on('mouseover', 'thead td', function(){\n\t\t\t\tvar aaa = aquapro_rgb2hex(jQuery(this).css('background-color'));\n\t\t\t\tjQuery('#'+id+'_colorPreview').css('background',aaa);\n\t\t\t\tjQuery('#'+id+'_colorPreview input').val(aaa);\n\t\t\t})\n\t\t\t.on('keypress', '#'+id+'_colorPreview input', function(key){\n\t\t\t\tvar aaa = jQuery(this).val();\n\t\t\t\tif (aaa.length<7 && ((key.which>=48 && key.which<=57) || (key.which>=97 && key.which<=102) || (key.which===35 || aaa.length===0))) {\n\t\t\t\t\taaa += String.fromCharCode(key.which);\n\t\t\t\t} else if (key.which == 8 && aaa.length>0) {\n\t\t\t\t\taaa = aaa.substring(0, aaa.length-1);\n\t\t\t\t} else if (key.which===13 && (aaa.length===4 || aaa.length===7)) {\n\t\t\t\t\tvar fld  = jQuery('#'+id).data('field');\n\t\t\t\t\tvar func = jQuery('#'+id).data('func');\n\t\t\t\t\tif (func!=null && func!='undefined') {\n\t\t\t\t\t\tfunc(fld, aaa);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfld.val(aaa).css('backgroundColor', aaa).trigger('change');\n\t\t\t\t\t}\n\t\t\t\t\tjQuery('#'+id+'_Bg').fadeOut(500);\n\t\t\t\t\tjQuery('#'+id).fadeOut(500);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tkey.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (aaa.substr(0,1)==='#' && (aaa.length===4 || aaa.length===7)) {\n\t\t\t\t\tjQuery('#'+id+'_colorPreview').css('background',aaa);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on('click', 'thead td', function(e){\n\t\t\t\tvar fld  = jQuery('#'+id).data('field');\n\t\t\t\tvar func = jQuery('#'+id).data('func');\n\t\t\t\tvar aaa  = aquapro_rgb2hex(jQuery(this).css('background-color'));\n\t\t\t\tif (func!=null && func!='undefined') {\n\t\t\t\t\tfunc(fld, aaa);\n\t\t\t\t} else {\n\t\t\t\t\tfld.val(aaa).css('backgroundColor', aaa).trigger('change');\n\t\t\t\t}\n\t\t\t\tjQuery('#'+id+'_Bg').fadeOut(500);\n\t\t\t\tjQuery('#'+id).fadeOut(500);\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t})\n\t\t\t.on('click', 'tbody .iColorPicker_moreColors', function(e){\n\t\t\t\tvar thead  = jQuery(this).parents('table').find('thead');\n\t\t\t\tvar out = '';\n\t\t\t\tif (thead.hasClass('more_colors')) {\n\t\t\t\t\tfor (var i=0; i<colorsList.length; i++) {\n\t\t\t\t\t\tif (i%16==0) out += (i>0 ? '</tr>' : '') + '<tr>';\n\t\t\t\t\t\tout += '<td style=\"background-color:'+colorsList[i]+'\">&nbsp;</td>';\n\t\t\t\t\t}\n\t\t\t\t\tthead.removeClass('more_colors').empty().html(out+'</tr>');\n\t\t\t\t\tjQuery('#'+id+'_colorPreview').attr('colspan', 8);\n\t\t\t\t\tjQuery('#'+id+'_colorOriginal').attr('colspan', 8);\n\t\t\t\t} else {\n\t\t\t\t\tvar rgb=[0,0,0], i=0, j=-1;\t// Set j=-1 or j=0 - show 2 different colors layouts\n\t\t\t\t\twhile (rgb[0]<0xF || rgb[1]<0xF || rgb[2]<0xF) {\n\t\t\t\t\t\tif (i%18==0) out += (i>0 ? '</tr>' : '') + '<tr>';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tout += '<td style=\"background-color:'+aquapro_components2hex(rgb[0]*16+rgb[0],rgb[1]*16+rgb[1],rgb[2]*16+rgb[2])+'\">&nbsp;</td>';\n\t\t\t\t\t\trgb[2]+=3;\n\t\t\t\t\t\tif (rgb[2]>0xF) {\n\t\t\t\t\t\t\trgb[1]+=3;\n\t\t\t\t\t\t\tif (rgb[1]>(j===0 ? 6 : 0xF)) {\n\t\t\t\t\t\t\t\trgb[0]+=3;\n\t\t\t\t\t\t\t\tif (rgb[0]>0xF) {\n\t\t\t\t\t\t\t\t\tif (j===0) {\n\t\t\t\t\t\t\t\t\t\tj=1;\n\t\t\t\t\t\t\t\t\t\trgb[0]=0;\n\t\t\t\t\t\t\t\t\t\trgb[1]=9;\n\t\t\t\t\t\t\t\t\t\trgb[2]=0;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\trgb[1]=(j < 1 ? 0 : 9);\n\t\t\t\t\t\t\t\t\trgb[2]=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\trgb[2]=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthead.addClass('more_colors').empty().html(out+'<td  style=\"background-color:#ffffff\" colspan=\"8\">&nbsp;</td></tr>');\n\t\t\t\t\tjQuery('#'+id+'_colorPreview').attr('colspan', 9);\n\t\t\t\t\tjQuery('#'+id+'_colorOriginal').attr('colspan', 9);\n\t\t\t\t}\n\t\t\t\tjQuery('#'+id+' table.colorPickerTable thead td')\n\t\t\t\t\t.css({\n\t\t\t\t\t\t'width':'12px',\n\t\t\t\t\t\t'height':'14px',\n\t\t\t\t\t\t'border':'1px solid #000',\n\t\t\t\t\t\t'cursor':'pointer'\n\t\t\t\t\t});\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t});\n\t\tjQuery(document.createElement(\"div\"))\n\t\t\t.attr(\"id\", id+\"_Bg\")\n\t\t\t.on('click', function(e) {\n\t\t\t\tjQuery(\"#\"+id+\"_Bg\").fadeOut(500);\n\t\t\t\tjQuery(\"#\"+id).fadeOut(500);\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t})\n\t\t\t.appendTo(\"body\");\n\t\tjQuery('#'+id+' table.colorPickerTable thead td')\n\t\t\t.css({\n\t\t\t\t'width':'12px',\n\t\t\t\t'height':'14px',\n\t\t\t\t'border':'1px solid #000',\n\t\t\t\t'cursor':'pointer'\n\t\t\t});\n\t\tjQuery('#'+id+' table.colorPickerTable')\n\t\t\t.css({'border-collapse':'collapse'});\n\t\tjQuery('#'+id)\n\t\t\t.css({\n\t\t\t\t'border':'1px solid #ccc',\n\t\t\t\t'background':'#333',\n\t\t\t\t'padding':'5px',\n\t\t\t\t'color':'#fff',\n\t\t\t\t'z-index':999999\n\t\t\t});\n\t\tjQuery('#'+id+'_colorPreview')\n\t\t\t.css({'height':'50px'});\n\t\treturn id;\n\t};\n\t\n\twindow.aquapro_color_picker_show = function(id, fld, func) { \n\t\tif (id===null || id==='') {\n\t\t\tid = jQuery('.iColorPickerTable').attr('id');\n\t\t}\n\t\tvar eICP = fld.offset();\n\t\tvar w = jQuery('#'+id).width();\n\t\tvar h = jQuery('#'+id).height();\n\t\tvar l = eICP.left + w < jQuery(window).width()-10 ? eICP.left : jQuery(window).width()-10 - w;\n\t\tvar t = eICP.top + fld.outerHeight() + h < jQuery(document).scrollTop() + jQuery(window).height()-10 ? eICP.top + fld.outerHeight() : eICP.top - h - 13;\n\t\tjQuery(\"#\"+id)\n\t\t\t.data({field: fld, func: func})\n\t\t\t.css({\n\t\t\t\t'top':t+\"px\",\n\t\t\t\t'left':l+\"px\",\n\t\t\t\t'position':'absolute',\n\t\t\t\t'z-index':100001\n\t\t\t})\n\t\t\t.fadeIn(500);\n\t\tjQuery(\"#\"+id+\"_Bg\")\n\t\t\t.css({\n\t\t\t\t'position':'fixed',\n\t\t\t\t'z-index':100000,\n\t\t\t\t'top':0,\n\t\t\t\t'left':0,\n\t\t\t\t'width':'100%',\n\t\t\t\t'height':'100%'\n\t\t\t})\n\t\t\t.fadeIn(500);\n\t\tvar def = fld.val().substr(0, 1)=='#' ? fld.val() : aquapro_rgb2hex(fld.css('backgroundColor'));\n\t\tjQuery('#'+id+'_colorPreview input,#'+id+'_colorOriginal input').val(def);\n\t\tjQuery('#'+id+'_colorPreview,#'+id+'_colorOriginal').css('background',def);\n\t};\n\t\n\t\n\t\n\t/* Cookies manipulations\n\t---------------------------------------------------------------- */\n\t\n\twindow.aquapro_get_cookie = function(name) {\n\t\tvar defa = arguments[1]!==undefined ? arguments[1] : null;\n\t\tvar start = document.cookie.indexOf(name + '=');\n\t\tvar len = start + name.length + 1;\n\t\tif ((!start) && (name != document.cookie.substring(0, name.length))) {\n\t\t\treturn defa;\n\t\t}\n\t\tif (start == -1)\n\t\t\treturn defa;\n\t\tvar end = document.cookie.indexOf(';', len);\n\t\tif (end == -1)\n\t\t\tend = document.cookie.length;\n\t\treturn unescape(document.cookie.substring(len, end));\n\t};\n\t\n\t\n\twindow.aquapro_set_cookie = function(name, value, expires, path, domain, secure) {\n\t\tvar expires = arguments[2]!==undefined ? arguments[2] : 0;\n\t\tvar path    = arguments[3]!==undefined ? arguments[3] : '/';\n\t\tvar domain  = arguments[4]!==undefined ? arguments[4] : '';\n\t\tvar secure  = arguments[5]!==undefined ? arguments[5] : '';\n\t\tvar today = new Date();\n\t\ttoday.setTime(today.getTime());\n\t\tif (expires) {\n\t\t\texpires = expires * 1000 * 60 * 60 * 24;\n\t\t}\n\t\tvar expires_date = new Date(today.getTime() + (expires));\n\t\tdocument.cookie = name + '='\n\t\t\t\t+ escape(value)\n\t\t\t\t+ ((expires) ? ';expires=' + expires_date.toGMTString() : '')\n\t\t\t\t+ ((path)    ? ';path=' + path : '')\n\t\t\t\t+ ((domain)  ? ';domain=' + domain : '')\n\t\t\t\t+ ((secure)  ? ';secure' : '');\n\t};\n\t\n\t\n\twindow.aquapro_del_cookie = function(name, path, domain) {\n\t\tvar path   = arguments[1]!==undefined ? arguments[1] : '/';\n\t\tvar domain = arguments[2]!==undefined ? arguments[2] : '';\n\t\tif (aquapro_get_cookie(name))\n\t\t\tdocument.cookie = name + '=' + ((path) ? ';path=' + path : '')\n\t\t\t\t\t+ ((domain) ? ';domain=' + domain : '')\n\t\t\t\t\t+ ';expires=Thu, 01-Jan-1970 00:00:01 GMT';\n\t};\n\t\n\t\n\t\n\t/* ListBox and ComboBox manipulations\n\t---------------------------------------------------------------- */\n\t\n\twindow.aquapro_clear_listbox = function(box) {\n\t\tfor (var i=box.options.length-1; i>=0; i--)\n\t\t\tbox.options[i] = null;\n\t};\n\t\n\twindow.aquapro_add_listbox_item = function(box, val, text) {\n\t\tvar item = new Option();\n\t\titem.value = val;\n\t\titem.text = text;\n\t\tbox.options.add(item);\n\t};\n\t\n\twindow.aquapro_del_listbox_item_by_value = function(box, val) {\n\t\tfor (var i=0; i<box.options.length; i++) {\n\t\t\tif (box.options[i].value == val) {\n\t\t\t\tbox.options[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\t\n\twindow.aquapro_del_listbox_item_by_text = function(box, txt) {\n\t\tfor (var i=0; i<box.options.length; i++) {\n\t\t\tif (box.options[i].text == txt) {\n\t\t\t\tbox.options[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\t\n\twindow.aquapro_find_listbox_item_by_value = function(box, val) {\n\t\tvar idx = -1;\n\t\tfor (var i=0; i<box.options.length; i++) {\n\t\t\tif (box.options[i].value == val) {\n\t\t\t\tidx = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t};\n\t\n\twindow.aquapro_find_listbox_item_by_text = function(box, txt) {\n\t\tvar idx = -1;\n\t\tfor (var i=0; i<box.options.length; i++) {\n\t\t\tif (box.options[i].text == txt) {\n\t\t\t\tidx = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t};\n\t\n\twindow.aquapro_select_listbox_item_by_value = function(box, val) {\n\t\tfor (var i = 0; i < box.options.length; i++) {\n\t\t\tbox.options[i].selected = (val == box.options[i].value);\n\t\t}\n\t};\n\t\n\twindow.aquapro_select_listbox_item_by_text = function(box, txt) {\n\t\tfor (var i = 0; i < box.options.length; i++) {\n\t\t\tbox.options[i].selected = (txt == box.options[i].text);\n\t\t}\n\t};\n\t\n\twindow.aquapro_get_listbox_values = function(box) {\n\t\tvar delim = arguments[1]!==undefined ? arguments[1] : ',';\n\t\tvar str = '';\n\t\tfor (var i=0; i<box.options.length; i++) {\n\t\t\tstr += (str ? delim : '') + box.options[i].value;\n\t\t}\n\t\treturn str;\n\t};\n\t\n\twindow.aquapro_get_listbox_texts = function(box) {\n\t\tvar delim = arguments[1]!==undefined ? arguments[1] : ',';\n\t\tvar str = '';\n\t\tfor (var i=0; i<box.options.length; i++) {\n\t\t\tstr += (str ? delim : '') + box.options[i].text;\n\t\t}\n\t\treturn str;\n\t};\n\t\n\twindow.aquapro_sort_listbox = function(box)  {\n\t\tvar temp_opts = new Array();\n\t\tvar temp = new Option();\n\t\tfor(var i=0; i<box.options.length; i++)  {\n\t\t\ttemp_opts[i] = box.options[i].clone();\n\t\t}\n\t\tfor(var x=0; x<temp_opts.length-1; x++)  {\n\t\t\tfor(var y=(x+1); y<temp_opts.length; y++)  {\n\t\t\t\tif(temp_opts[x].text > temp_opts[y].text)  {\n\t\t\t\t\ttemp = temp_opts[x];\n\t\t\t\t\ttemp_opts[x] = temp_opts[y];\n\t\t\t\t\ttemp_opts[y] = temp;\n\t\t\t\t}  \n\t\t\t}  \n\t\t}\n\t\tfor(var i=0; i<box.options.length; i++)  {\n\t\t\tbox.options[i] = temp_opts[i].clone();\n\t\t}\n\t};\n\t\n\twindow.aquapro_get_listbox_selected_index = function(box) {\n\t\tfor (var i = 0; i < box.options.length; i++) {\n\t\t\tif (box.options[i].selected)\n\t\t\t\treturn i;\n\t\t}\n\t\treturn -1;\n\t};\n\t\n\twindow.aquapro_get_listbox_selected_value = function(box) {\n\t\tfor (var i = 0; i < box.options.length; i++) {\n\t\t\tif (box.options[i].selected) {\n\t\t\t\treturn box.options[i].value;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\t\n\twindow.aquapro_get_listbox_selected_text = function(box) {\n\t\tfor (var i = 0; i < box.options.length; i++) {\n\t\t\tif (box.options[i].selected) {\n\t\t\t\treturn box.options[i].text;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\t\n\twindow.aquapro_get_listbox_selected_option = function(box) {\n\t\tfor (var i = 0; i < box.options.length; i++) {\n\t\t\tif (box.options[i].selected) {\n\t\t\t\treturn box.options[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\t\n\t\n\t\n\t/* Radio buttons manipulations\n\t---------------------------------------------------------------- */\n\t\n\twindow.aquapro_get_radio_value = function(radioGroupObj) {\n\t\tfor (var i=0; i < radioGroupObj.length; i++)\n\t\t\tif (radioGroupObj[i].checked) return radioGroupObj[i].value;\n\t\treturn null;\n\t};\n\t\n\twindow.aquapro_set_radio_checked_by_num = function(radioGroupObj, num) {\n\t\tfor (var i=0; i < radioGroupObj.length; i++)\n\t\t\tif (radioGroupObj[i].checked && i!=num) radioGroupObj[i].checked=false;\n\t\t\telse if (i==num) radioGroupObj[i].checked=true;\n\t};\n\t\n\twindow.aquapro_set_radio_checked_by_value = function(radioGroupObj, val) {\n\t\tfor (var i=0; i < radioGroupObj.length; i++)\n\t\t\tif (radioGroupObj[i].checked && radioGroupObj[i].value!=val) radioGroupObj[i].checked=false;\n\t\t\telse if (radioGroupObj[i].value==val) radioGroupObj[i].checked=true;\n\t};\n\t\n\t\n\t\n\t/* Form manipulations\n\t---------------------------------------------------------------- */\n\t\n\t/*\n\t// Usage example:\n\tvar error = aquapro_form_validate(jQuery(form_selector), {\t\t// -------- Options ---------\n\t\terror_message_show: true,\t\t\t\t\t\t\t\t\t// Display or not error message\n\t\terror_message_time: 5000,\t\t\t\t\t\t\t\t\t// Time to display error message\n\t\terror_message_class: 'messagebox messagebox_style_error',\t// Class, appended to error message block\n\t\terror_message_text: 'Global error text',\t\t\t\t\t// Global error message text (if don't write message in checked field)\n\t\terror_fields_class: 'error_field',\t\t\t\t\t\t\t// Class, appended to error fields\n\t\texit_after_first_error: false,\t\t\t\t\t\t\t\t// Cancel validation and exit after first error\n\t\trules: [\n\t\t\t{\n\t\t\t\tfield: 'author',\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Checking field name\n\t\t\t\tmin_length: { value: 1,\t message: 'The author name can\\'t be empty' },\t\t\t// Min character count (0 - don't check), message - if error occurs\n\t\t\t\tmax_length: { value: 60, message: 'Too long author name'}\t\t\t\t\t\t// Max character count (0 - don't check), message - if error occurs\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'email',\n\t\t\t\tmin_length: { value: 7,\t message: 'Too short (or empty) email address' },\n\t\t\t\tmax_length: { value: 60, message: 'Too long email address'},\n\t\t\t\tmask: { value: '^([a-z0-9_\\\\-]+\\\\.)*[a-z0-9_\\\\-]+@[a-z0-9_\\\\-]+(\\\\.[a-z0-9_\\\\-]+)*\\\\.[a-z]{2,6}$', message: 'Invalid email address'}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'comment',\n\t\t\t\tmin_length: { value: 1,\t message: 'The comment text can\\'t be empty' },\n\t\t\t\tmax_length: { value: 200, message: 'Too long comment'}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'pwd1',\n\t\t\t\tmin_length: { value: 5,\t message: 'The password can\\'t be less then 5 characters' },\n\t\t\t\tmax_length: { value: 20, message: 'Too long password'}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'pwd2',\n\t\t\t\tequal_to: { value: 'pwd1',\t message: 'The passwords in both fields must be equals' }\n\t\t\t}\n\t\t]\n\t});\n\t*/\n\t\n\twindow.aquapro_form_validate = function(form, opt) {\n\t\tvar error_msg = '';\n\t\tform.find(\":input\").each(function() {\n\t\t\tif (error_msg!='' && opt.exit_after_first_error) return;\n\t\t\tfor (var i = 0; i < opt.rules.length; i++) {\n\t\t\t\tif (jQuery(this).attr(\"name\") == opt.rules[i].field) {\n\t\t\t\t\tvar val = jQuery(this).val();\n\t\t\t\t\tvar error = false;\n\t\t\t\t\tif (typeof(opt.rules[i].min_length) == 'object') {\n\t\t\t\t\t\tif (opt.rules[i].min_length.value > 0 && val.length < opt.rules[i].min_length.value) {\n\t\t\t\t\t\t\tif (error_msg=='') jQuery(this).get(0).focus();\n\t\t\t\t\t\t\terror_msg += '<p class=\"error_item\">' + (typeof(opt.rules[i].min_length.message)!='undefined' ? opt.rules[i].min_length.message : opt.error_message_text ) + '</p>';\n\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((!error || !opt.exit_after_first_error) && typeof(opt.rules[i].max_length) == 'object') {\n\t\t\t\t\t\tif (opt.rules[i].max_length.value > 0 && val.length > opt.rules[i].max_length.value) {\n\t\t\t\t\t\t\tif (error_msg=='') jQuery(this).get(0).focus();\n\t\t\t\t\t\t\terror_msg += '<p class=\"error_item\">' + (typeof(opt.rules[i].max_length.message)!='undefined' ? opt.rules[i].max_length.message : opt.error_message_text ) + '</p>';\n\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((!error || !opt.exit_after_first_error) && typeof(opt.rules[i].mask) == 'object') {\n\t\t\t\t\t\tif (opt.rules[i].mask.value != '') {\n\t\t\t\t\t\t\tvar regexp = new RegExp(opt.rules[i].mask.value);\n\t\t\t\t\t\t\tif (!regexp.test(val)) {\n\t\t\t\t\t\t\t\tif (error_msg=='') jQuery(this).get(0).focus();\n\t\t\t\t\t\t\t\terror_msg += '<p class=\"error_item\">' + (typeof(opt.rules[i].mask.message)!='undefined' ? opt.rules[i].mask.message : opt.error_message_text ) + '</p>';\n\t\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((!error || !opt.exit_after_first_error) && typeof(opt.rules[i].state) == 'object') {\n\t\t\t\t\t\tif (opt.rules[i].state.value=='checked' && !jQuery(this).get(0).checked) {\n\t\t\t\t\t\t\tif (error_msg=='') jQuery(this).get(0).focus();\n\t\t\t\t\t\t\terror_msg += '<p class=\"error_item\">' + (typeof(opt.rules[i].state.message)!='undefined' ? opt.rules[i].state.message : opt.error_message_text ) + '</p>';\n\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((!error || !opt.exit_after_first_error) && typeof(opt.rules[i].equal_to) == 'object') {\n\t\t\t\t\t\tif (opt.rules[i].equal_to.value != '' && val!=jQuery(jQuery(this).get(0).form[opt.rules[i].equal_to.value]).val()) {\n\t\t\t\t\t\t\tif (error_msg=='') jQuery(this).get(0).focus();\n\t\t\t\t\t\t\terror_msg += '<p class=\"error_item\">' + (typeof(opt.rules[i].equal_to.message)!='undefined' ? opt.rules[i].equal_to.message : opt.error_message_text ) + '</p>';\n\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.error_fields_class != '') jQuery(this).toggleClass(opt.error_fields_class, error);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tif (error_msg!='' && opt.error_message_show) {\n\t\t\tvar error_message_box = form.find(\".result\");\n\t\t\tif (error_message_box.length == 0) error_message_box = form.parent().find(\".result\");\n\t\t\tif (error_message_box.length == 0) {\n\t\t\t\tform.append('<div class=\"result\"></div>');\n\t\t\t\terror_message_box = form.find(\".result\");\n\t\t\t}\n\t\t\tif (opt.error_message_class) error_message_box.toggleClass(opt.error_message_class, true);\n\t\t\terror_message_box.html(error_msg).fadeIn();\n\t\t\tsetTimeout(function() { error_message_box.fadeOut(); }, opt.error_message_time);\n\t\t}\n\t\treturn error_msg!='';\n\t};\n\t\n\t\n\t\n\t/* Document manipulations\n\t---------------------------------------------------------------- */\n\t\n\t// Animated scroll to selected id\n\twindow.aquapro_document_animate_to = function(id, callback) {\n\t\tvar oft = !isNaN(id) ? Number(id) : 0;\n\t\tif (isNaN(id)) {\n\t\t\tif (id.indexOf('#')==-1) id = '#' + id;\n\t\t\tvar obj = jQuery(id).eq(0);\n\t\t\tif (obj.length == 0) return;\n\t\t\toft = obj.offset().top;\n\t\t}\n\t\tvar st  = jQuery(window).scrollTop();\n\t\tvar speed = Math.min(1200, Math.max(300, Math.round(Math.abs(oft-st) / jQuery(window).height() * 300)));\n\t\tjQuery('body,html').animate( {scrollTop: oft - jQuery('#wpadminbar').height() - jQuery('header.fixedTopMenu .topWrap').height()}, speed, 'linear', callback);\n\t};\n\t\n\t// Change browser address without reload page\n\twindow.aquapro_document_set_location = function(curLoc){\n\t\ttry {\n\t\t\thistory.pushState(null, null, curLoc);\n\t\t\treturn;\n\t\t} catch(e) {}\n\t\tlocation.href = curLoc;\n\t};\n\t\n\t// Add/Change arguments to the url address\n\twindow.aquapro_add_to_url = function(loc, prm) {\n\t\tvar ignore_empty = arguments[2]!==undefined ? arguments[2] : true;\n\t\tvar q = loc.indexOf('?');\n\t\tvar attr = {};\n\t\tif (q > 0) {\n\t\t\tvar qq = loc.substr(q+1).split('&');\n\t\t\tvar parts = '';\n\t\t\tfor (var i=0; i<qq.length; i++) {\n\t\t\t\tvar parts = qq[i].split('=');\n\t\t\t\tattr[parts[0]] = parts.length>1 ? parts[1] : ''; \n\t\t\t}\n\t\t}\n\t\tfor (var p in prm) {\n\t\t\tattr[p] = prm[p];\n\t\t}\n\t\tloc = (q > 0 ? loc.substr(0, q) : loc) + '?';\n\t\tvar i = 0;\n\t\tfor (p in attr) {\n\t\t\tif (ignore_empty && attr[p]=='') continue;\n\t\t\tloc += (i++ > 0 ? '&' : '') + p + '=' + attr[p];\n\t\t}\n\t\treturn loc;\n\t};\n\t\n\t// Check if url is page-inner (local) link\n\twindow.aquapro_is_local_link = function(url) {\n\t\tvar rez = url!==undefined;\n\t\tif (rez) {\n\t\t\tvar url_pos = url.indexOf('#');\n\t\t\tif (url_pos == 0 && url.length == 1)\n\t\t\t\trez = false;\n\t\t\telse {\n\t\t\t\tif (url_pos < 0) url_pos = url.length;\n\t\t\t\tvar loc = window.location.href;\n\t\t\t\tvar loc_pos = loc.indexOf('#');\n\t\t\t\tif (loc_pos > 0) loc = loc.substring(0, loc_pos);\n\t\t\t\trez = url_pos==0;\n\t\t\t\tif (!rez) rez = loc == url.substring(0, url_pos);\n\t\t\t}\n\t\t}\n\t\treturn rez;\n\t};\n\t\n\t\n\t\n\t/* Browsers detection\n\t---------------------------------------------------------------- */\n\t\n\twindow.aquapro_browser_is_mobile = function() {\n\t\tvar check = false;\n\t\t(function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od|ad)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\n\t\treturn check;\n\t};\n\n\twindow.aquapro_browser_is_ios = function() {\n\t\treturn navigator.userAgent.match(/iPad|iPhone|iPod/i) != null;\n\t};\n\n\twindow.aquapro_is_retina = function() {\n\t\tvar mediaQuery = '(-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-resolution: 1.5dppx)';\n\t\treturn (window.devicePixelRatio > 1) || (window.matchMedia && window.matchMedia(mediaQuery).matches);\n\t};\n\t\n\t\n\t\n\t/* File functions\n\t---------------------------------------------------------------- */\n\t\n\twindow.aquapro_get_file_name = function(path) {\n\t\tpath = path.replace(/\\\\/g, '/');\n\t\tvar pos = path.lastIndexOf('/');\n\t\tif (pos >= 0)\n\t\t\tpath = path.substr(pos+1);\n\t\treturn path;\n\t};\n\t\n\twindow.aquapro_get_file_ext = function(path) {\n\t\tvar pos = path.lastIndexOf('.');\n\t\tpath = pos >= 0 ? path.substr(pos+1) : '';\n\t\treturn path;\n\t};\n\t\n\t\n\t\n\t/* Image functions\n\t---------------------------------------------------------------- */\n\t\n\t// Return true, if all images in the specified container are loaded\n\twindow.aquapro_check_images_complete = function(cont) {\n\t\tvar complete = true;\n\t\tcont.find('img').each(function() {\n\t\t\tif (!complete) return;\n\t\t\tif (!jQuery(this).get(0).complete) complete = false;\n\t\t});\n\t\treturn complete;\n\t};\n\t\n\t\n\t\n\t/* Debug functions\n\t---------------------------------------------------------------- */\n\twindow.aquapro_debug_object = function(obj) {\n\t\tvar html = arguments[1]!==undefined ? arguments[1] : false;\t\t\t\t// Tags decorate\n\t\tvar recursive = arguments[2]!==undefined ? arguments[2] : false;\t\t// Show inner objects (arrays)\n\t\tvar showMethods = arguments[3]!==undefined ? arguments[3] : false;\t\t// Show object's methods\n\t\tvar level = arguments[4]!==undefined ? arguments[4] : 0;\t\t\t\t// Nesting level (for internal usage only)\n\t\tvar dispStr = \"\";\n\t\tvar addStr = \"\";\n\t\tif (level>0) {\n\t\t\tdispStr += (obj===null ? \"null\" : typeof(obj)) + (html ? \"\\n<br />\" : \"\\n\");\n\t\t\taddStr = aquapro_replicate(html ? '&nbsp;' : ' ', level*2);\n\t\t}\n\t\tif (obj!==null) {\n\t\t\tvar i = 0;\n\t\t\tfor (var prop in obj) {\n\t\t\t\ti++;\n\t\t\t\tif (i > 100) break;\n\t\t\t\ttry {\n\t\t\t\t\tif (!showMethods && typeof(obj[prop])=='function')\t// || prop=='innerHTML' || prop=='outerHTML' || prop=='innerText' || prop=='outerText')\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (recursive && level <= 3 && (typeof(obj[prop])=='object' || typeof(obj[prop])=='array') && obj[prop]!=obj)\n\t\t\t\t\t\tdispStr += addStr + (html ? \"<b>\" : \"\")+prop+(html ? \"</b>\" : \"\")+'='+aquapro_debug_object(obj[prop], html, recursive, showMethods, level+1);\n\t\t\t\t\telse\n\t\t\t\t\t\tdispStr += addStr + (html ? \"<b>\" : \"\")+prop+(html ? \"</b>\" : \"\")+'='+(typeof(obj[prop])=='string' ? '\"' : '')+obj[prop]+(typeof(obj[prop])=='string' ? '\"' : '')+(html ? \"\\n<br />\" : \"\\n\");\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdispStr += (html ? \"<br><br>\" : \"\\n\\n\") + \"Error parsing on property '\" + prop + \"'. Recursion cancelled!\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dispStr;\t//decodeURI(dispStr);\n\t};\n\t\n\t\n\tjQuery(document).ready(function() {\n\t\tjQuery(\"#debug_log_close\").on('click', function(e) {\n\t\t\tjQuery('#debug_log').hide();\n\t\t\te.preventDefault();\n\t\t\treturn false;\n\t\t});\n\t});\n\t\n\twindow.aquapro_debug_log = function(s) {\n\t\tif (AQUAPRO_STORAGE['user_logged_in']) {\n\t\t\tif (jQuery('#debug_log').length == 0) {\n\t\t\t\tjQuery('body').append('<div id=\"debug_log\"><span id=\"debug_log_close\">x</span><div id=\"debug_log_content\"></div></div>'); \n\t\t\t}\n\t\t\tjQuery('#debug_log_content').append('<br>'+s);\n\t\t\tjQuery('#debug_log').show();\n\t\t}\n\t};\n\t\n\tif (window.dcl===undefined) window.dcl = function(s) { console.log(s); };\n\tif (window.dco===undefined) window.dco = function(s,r) { console.log(aquapro_debug_object(s, false, r)); };\n\tif (window.dal===undefined) window.dal = function(s) { if (AQUAPRO_STORAGE['user_logged_in']) alert(s); };\n\tif (window.dao===undefined) window.dao = function(s,r) { if (AQUAPRO_STORAGE['user_logged_in']) alert(aquapro_debug_object(s,false,r)); };\n\tif (window.ddl===undefined) window.ddl = function(s) { aquapro_debug_log(s); };\n\tif (window.ddo===undefined) window.ddo = function(s,r) { aquapro_debug_log(aquapro_debug_object(s, true, r)); };\n\n})();"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.349Z",
        "time": 0.17999999545281753,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.16099999629659578,
          "receive": 0.018999999156221747,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 983
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/themes/aquapro/js/_init.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 14 Dec 2017 22:56:14 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"917b-56054ca78ff80-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "9046"
            }
          ],
          "cookies": [],
          "content": {
            "size": 37243,
            "mimeType": "application/javascript",
            "text": "/* global jQuery:false */\n/* global AQUAPRO_STORAGE:false */\n\njQuery(document).ready(function() {\n\t\"use strict\";\n\n\tvar theme_init_counter = 0;\n\tvar vc_resize = false;\n\t\n\taquapro_init_actions();\n\t\n\t// Theme init actions\n\tfunction aquapro_init_actions() {\n\n\t\tif (AQUAPRO_STORAGE['vc_edit_mode'] && jQuery('.vc_empty-placeholder').length==0 && theme_init_counter++ < 30) {\n\t\t\tsetTimeout(aquapro_init_actions, 200);\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Add resize on VC action vc-full-width-row\n\t\t// But we emulate 'action.resize_vc_row_start' and 'action.resize_vc_row_end'\n\t\t// to correct resize sliders and video inside 'boxed' pages\n\t\tjQuery(document).on('action.resize_vc_row_start', function(e, el) {\n\t\t\tvc_resize = true;\n\t\t\taquapro_resize_actions();\n\t\t});\n\t\t\n\t\t// Check fullheight elements\n\t\tjQuery(document).on('action.init_hidden_elements', aquapro_stretch_height);\n\t\tjQuery(document).on('action.init_shortcodes', aquapro_stretch_height);\n\t\n\t\t// Resize handlers\n\t\tjQuery(window).resize(function() {\n\t\t\tif (!vc_resize) aquapro_resize_actions();\n\t\t});\n\t\t\n\t\t// Scroll handlers\n\t\tjQuery(window).scroll(function() {\n\t\t\taquapro_scroll_actions();\n\t\t});\n\t\t\n\t\t// First call to init core actions\n\t\taquapro_ready_actions();\n\t\t// Wait for VC init\n\t\tsetTimeout(function() {\n\t\t\tif (!vc_resize) aquapro_resize_actions();\n\t\t\taquapro_scroll_actions();\n\t\t}, 1);\n\t}\n\t\n\t\n\t\n\t// Theme first load actions\n\t//==============================================\n\tfunction aquapro_ready_actions() {\n\t\n\t\t// Add scheme class and js support\n\t\t//------------------------------------\n\t\tdocument.documentElement.className = document.documentElement.className.replace(/\\bno-js\\b/,'js');\n\t\tif (document.documentElement.className.indexOf(AQUAPRO_STORAGE['site_scheme'])==-1)\n\t\t\tdocument.documentElement.className += ' ' + AQUAPRO_STORAGE['site_scheme'];\n\n\t\t// Init background video\n\t\t//------------------------------------\n\t\tif (AQUAPRO_STORAGE['background_video'] && jQuery('.top_panel.with_bg_video').length > 0 && window.Bideo) {\n\t\t\t// Waiting 10ms after mejs init\n\t\t\tsetTimeout(function() {\n\t\t\t\tjQuery('.top_panel.with_bg_video').prepend('<video id=\"background_video\" loop muted></video>');\n\t\t\t\tvar bv = new Bideo();\n\t\t\t\tbv.init({\n\t\t\t\t\t// Video element\n\t\t\t\t\tvideoEl: document.querySelector('#background_video'),\n\t\t\t\t\t\n\t\t\t\t\t// Container element\n\t\t\t\t\tcontainer: document.querySelector('.top_panel'),\n\t\t\t\t\t\n\t\t\t\t\t// Resize\n\t\t\t\t\tresize: true,\n\t\t\t\t\t\n\t\t\t\t\t// autoplay: false,\n\t\t\t\t\t\n\t\t\t\t\tisMobile: window.matchMedia('(max-width: 768px)').matches,\n\t\t\t\t\t\n\t\t\t\t\tplayButton: document.querySelector('#background_video_play'),\n\t\t\t\t\tpauseButton: document.querySelector('#background_video_pause'),\n\t\t\t\t\t\n\t\t\t\t\t// Array of objects containing the src and type\n\t\t\t\t\t// of different video formats to add\n\t\t\t\t\t// For example:\n\t\t\t\t\t//\tsrc: [\n\t\t\t\t\t//\t\t\t{\tsrc: 'night.mp4', type: 'video/mp4' }\n\t\t\t\t\t//\t\t\t{\tsrc: 'night.webm', type: 'video/webm;codecs=\"vp8, vorbis\"' }\n\t\t\t\t\t//\t\t]\n\t\t\t\t\tsrc: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsrc: AQUAPRO_STORAGE['background_video'],\n\t\t\t\t\t\t\ttype: 'video/'+aquapro_get_file_ext(AQUAPRO_STORAGE['background_video'])\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\n\t\t\t\t\t// What to do once video loads (initial frame)\n\t\t\t\t\tonLoad: function () {\n\t\t\t\t\t\t//document.querySelector('#background_video_cover').style.display = 'none';\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 10);\n\t\t}\n\t\n\t\t// Tabs\n\t\t//------------------------------------\n\t\tif (jQuery('.aquapro_tabs:not(.inited)').length > 0 && jQuery.ui && jQuery.ui.tabs) {\n\t\t\tjQuery('.aquapro_tabs:not(.inited)').each(function () {\n\t\t\t\t// Get initially opened tab\n\t\t\t\tvar init = jQuery(this).data('active');\n\t\t\t\tif (isNaN(init)) {\n\t\t\t\t\tinit = 0;\n\t\t\t\t\tvar active = jQuery(this).find('> ul > li[data-active=\"true\"]').eq(0);\n\t\t\t\t\tif (active.length > 0) {\n\t\t\t\t\t\tinit = active.index();\n\t\t\t\t\t\tif (isNaN(init) || init < 0) init = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinit = Math.max(0, init);\n\t\t\t\t}\n\t\t\t\t// Init tabs\n\t\t\t\tjQuery(this).addClass('inited').tabs({\n\t\t\t\t\tactive: init,\n\t\t\t\t\tshow: {\n\t\t\t\t\t\teffect: 'fadeIn',\n\t\t\t\t\t\tduration: 300\n\t\t\t\t\t},\n\t\t\t\t\thide: {\n\t\t\t\t\t\teffect: 'fadeOut',\n\t\t\t\t\t\tduration: 300\n\t\t\t\t\t},\n\t\t\t\t\tcreate: function( event, ui ) {\n\t\t\t\t\t\tif (ui.panel.length > 0) jQuery(document).trigger('action.init_hidden_elements', [ui.panel]);\n\t\t\t\t\t},\n\t\t\t\t\tactivate: function( event, ui ) {\n\t\t\t\t\t\tif (ui.newPanel.length > 0) jQuery(document).trigger('action.init_hidden_elements', [ui.newPanel]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t// AJAX loader for the tabs\n\t\tjQuery('.aquapro_tabs_ajax').on( \"tabsbeforeactivate\", function( event, ui ) {\n\t\t\tif (ui.newPanel.data('need-content')) aquapro_tabs_ajax_content_loader(ui.newPanel, 1, ui.oldPanel);\n\t\t});\n\t\t// AJAX loader for the pages in the tabs\n\t\tjQuery('.aquapro_tabs_ajax').on( \"click\", '.nav-links a', function(e) {\n\t\t\tvar panel = jQuery(this).parents('.aquapro_tabs_content');\n\t\t\tvar page = 1;\n\t\t\tvar href = jQuery(this).attr('href');\n\t\t\tvar pos = -1;\n\t\t\tif ((pos = href.lastIndexOf('/page/')) != -1 ) {\n\t\t\t\tpage = Number(href.substr(pos+6).replace(\"/\", \"\"));\n\t\t\t\tif (!isNaN(page)) page = Math.max(1, page);\n\t\t\t}\n\t\t\taquapro_tabs_ajax_content_loader(panel, page);\n\t\t\te.preventDefault();\n\t\t\treturn false;\n\t\t});\n\t\n\t\t\n\t\t// Headers\n\t\t//----------------------------------------------\n\t\n\t\tvar rows = jQuery('.aquapro_layouts_row_fixed');\n\t\t\n\t\t// If page contain fixed rows\n\t\tif (rows.length > 0) {\n\t\t\t\n\t\t\t// Add placeholders before each row\n\t\t\trows.each(function() {\n\t\t\t\tif (!jQuery(this).next().hasClass('aquapro_layouts_row_fixed_placeholder'))\n\t\t\t\t\tjQuery(this).after('<div class=\"aquapro_layouts_row_fixed_placeholder\"></div>');\n\t\t\t});\n\t\n\t\t\tjQuery(document).on('action.scroll_aquapro', function() {\n\t\t\t\taquapro_fix_header(rows, false);\n\t\t\t});\n\t\t\tjQuery(document).on('action.resize_aquapro', function() {\n\t\t\t\taquapro_fix_header(rows, true);\n\t\t\t});\n\t\t}\n\t\n\t\t// Menu\n\t\t//----------------------------------------------\n\t\n\t\t// Add TOC in the side menu\n\t\tif (jQuery('.menu_side_inner').length > 0 && jQuery('#toc_menu').length > 0)\n\t\t\tjQuery('#toc_menu').appendTo('.menu_side_inner');\n\t\n\t\t// Open/Close side menu\n\t\tjQuery('.menu_side_button').on('click', function(e){\n\t\t\tjQuery(this).parent().toggleClass('opened');\n\t\t\te.preventDefault();\n\t\t\treturn false;\n\t\t});\n\t\n\t\n\t\t// Add arrows to the mobile menu\n\t\tjQuery('.menu_mobile .menu-item-has-children > a').append('<span class=\"open_child_menu\"></span>');\n\t\n\t\t// Open/Close mobile menu\n\t\tjQuery('.sc_layouts_menu_mobile_button > a,.menu_mobile_button,.menu_mobile_description').on('click', function(e) {\n\t\t\tif (jQuery(this).parent().hasClass('sc_layouts_menu_mobile_button_burger') && jQuery(this).next().hasClass('sc_layouts_menu_popup')) return;\n\t\t\tjQuery('.menu_mobile_overlay').fadeIn();\n\t\t\tjQuery('.menu_mobile').addClass('opened');\n\t\t\tjQuery(document).trigger('action.stop_wheel_handlers');\n\t\t\te.preventDefault();\n\t\t\treturn false;\n\t\t});\n\t\tjQuery(document).on('keypress', function(e) {\n\t\t\tif (e.keyCode == 27) {\n\t\t\t\tif (jQuery('.menu_mobile.opened').length == 1) {\n\t\t\t\t\tjQuery('.menu_mobile_overlay').fadeOut();\n\t\t\t\t\tjQuery('.menu_mobile').removeClass('opened');\n\t\t\t\t\tjQuery(document).trigger('action.start_wheel_handlers');\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t});;\n\t\tjQuery('.menu_mobile_close, .menu_mobile_overlay').on('click', function(e){\n\t\t\tjQuery('.menu_mobile_overlay').fadeOut();\n\t\t\tjQuery('.menu_mobile').removeClass('opened');\n\t\t\tjQuery(document).trigger('action.start_wheel_handlers');\n\t\t\te.preventDefault();\n\t\t\treturn false;\n\t\t});\n\t\n\t\t// Open/Close mobile submenu\n\t\tjQuery('.menu_mobile').on('click', 'li a, li a .open_child_menu', function(e) {\n\t\t\tvar $a = jQuery(this).hasClass('open_child_menu') ? jQuery(this).parent() : jQuery(this);\n\t\t\tif ($a.parent().hasClass('menu-item-has-children')) {\n\t\t\t\tif ($a.attr('href')=='#' || jQuery(this).hasClass('open_child_menu')) {\n\t\t\t\t\tif ($a.siblings('ul:visible').length > 0)\n\t\t\t\t\t\t$a.siblings('ul').slideUp().parent().removeClass('opened');\n\t\t\t\t\telse {\n\t\t\t\t\t\tjQuery(this).parents('li').siblings('li').find('ul:visible').slideUp().parent().removeClass('opened');\n\t\t\t\t\t\t$a.siblings('ul').slideDown().parent().addClass('opened');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!jQuery(this).hasClass('open_child_menu') && aquapro_is_local_link($a.attr('href')))\n\t\t\t\tjQuery('.menu_mobile_close').trigger('click');\n\t\t\tif (jQuery(this).hasClass('open_child_menu') || $a.attr('href')=='#') {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\n\t\t// Init superfish menus\n\t\taquapro_init_sfmenu('.sc_layouts_menu_nav:not(.inited)');\n\t\tif (jQuery('.sc_layouts_menu_nav').hasClass('inited')) jQuery('.sc_layouts_menu_nav_area').addClass('inited');\n\t\t\n\t\n\t\t// Forms validation\n\t\t//----------------------------------------------\n\t\n\t\tjQuery('select:not(.esg-sorting-select):not([class*=\"trx_addons_attrib_\"])').wrap('<div class=\"select_container\"></div>');\n\t\n\t\t// Comment form\n\t\tjQuery(\"form#commentform\").submit(function(e) {\n\t\t\tvar rez = aquapro_comments_validate(jQuery(this));\n\t\t\tif (!rez)\n\t\t\t\te.preventDefault();\n\t\t\treturn rez;\n\t\t});\n\t\n\t\tjQuery(\"form\").on('keypress', '.error_field', function() {\n\t\t\tif (jQuery(this).val() != '')\n\t\t\t\tjQuery(this).removeClass('error_field');\n\t\t});\n\t\n\t\n\t\t// WooCommerce\n\t\t//----------------------------------------------\n\t\n\t\t// Change display mode\n\t\tjQuery('.woocommerce,.woocommerce-page').on('click', '.aquapro_shop_mode_buttons a', function(e) {\n\t\t\tvar mode = jQuery(this).hasClass('woocommerce_thumbs') ? 'thumbs' : 'list';\n            aquapro_set_cookie('aquapro_shop_mode', mode, 365);\n\t\t\tjQuery(this).siblings('input').val(mode).parents('form').get(0).submit();\n\t\t\te.preventDefault();\n\t\t\treturn false;\n\t\t});\n\t\t// Add buttons to quantity\n\t\tjQuery('.woocommerce div.quantity,.woocommerce-page div.quantity').append('<span class=\"q_inc\"></span><span class=\"q_dec\"></span>');\n\t\tjQuery('.woocommerce div.quantity').on('click', '>span', function(e) {\n\t\t\tvar f = jQuery(this).siblings('input');\n\t\t\tif (jQuery(this).hasClass('q_inc')) {\n\t\t\t\tf.val(Math.max(0, parseInt(f.val()))+1);\n\t\t\t} else {\n\t\t\t\tf.val(Math.max(1, Math.max(0, parseInt(f.val()))-1));\n\t\t\t}\n\t\t\te.preventDefault();\n\t\t\treturn false;\n\t\t});\n\t\t// Make buttons from links\n\t\tvar wishlist = jQuery('.woocommerce .product .yith-wcwl-add-to-wishlist');\n\t\tif (wishlist.length > 0) {\n\t\t\twishlist.find('.add_to_wishlist').addClass('button');\n\t\t\tif (jQuery('.woocommerce .product .compare').length > 0) jQuery('.woocommerce .product .compare').insertBefore(wishlist);\n\t\t}\n\t\t// Add stretch behaviour to WooC tabs area\n\t\tjQuery('.single-product .woocommerce-tabs').wrap('<div class=\"trx-stretch-width\"></div>');\n\t\tjQuery('.trx-stretch-width').wrap('<div class=\"trx-stretch-width-wrap scheme_default\"></div>');\n\t\tjQuery('.trx-stretch-width').after('<div class=\"trx-stretch-width-original\"></div>');\n\t\taquapro_stretch_width();\n\t\t\t\n\t\n\t\t// Pagination\n\t\t//------------------------------------\n\t\n\t\t// Load more\n\t\tjQuery('.nav-links-more a').on('click', function(e) {\n\t\t\tif (AQUAPRO_STORAGE['load_more_link_busy']) return;\n\t\t\tAQUAPRO_STORAGE['load_more_link_busy'] = true;\n\t\t\tvar more = jQuery(this);\n\t\t\tvar page = Number(more.data('page'));\n\t\t\tvar max_page = Number(more.data('max-page'));\n\t\t\tif (page >= max_page) {\n\t\t\t\tmore.parent().hide();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmore.parent().addClass('loading');\n\t\t\tvar panel = more.parents('.aquapro_tabs_content');\n\t\t\tif (panel.length == 0) {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Load simple page content\n\t\t\t\tjQuery.get(location.href, {\n\t\t\t\t\tpaged: page+1\n\t\t\t\t}).done(function(response) {\n\t\t\t\t\t// Get inline styles and add to the page styles\n\t\t\t\t\tvar selector = 'aquapro-inline-styles-inline-css';\n\t\t\t\t\tvar p1 = response.indexOf(selector);\n\t\t\t\t\tif (p1 < 0) {\n\t\t\t\t\t\tselector = 'trx_addons-inline-styles-inline-css';\n\t\t\t\t\t\tp1 = response.indexOf(selector);\n\t\t\t\t\t}\n\t\t\t\t\tif (p1 > 0) {\n\t\t\t\t\t\tp1 = response.indexOf('>', p1) + 1;\n\t\t\t\t\t\tvar p2 = response.indexOf('</style>', p1);\n\t\t\t\t\t\tvar inline_css_add = response.substring(p1, p2);\n\t\t\t\t\t\tvar inline_css = jQuery('#'+selector);\n\t\t\t\t\t\tif (inline_css.length == 0)\n\t\t\t\t\t\t\tjQuery('body').append('<style id=\"'+selector+'\" type=\"text/css\">' + inline_css_add + '</style>');\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tinline_css.append(inline_css_add);\n\t\t\t\t\t}\n\t\t\t\t\t// Get new posts and append to the .posts_container\n\t\t\t\t\taquapro_loadmore_add_items(jQuery('.content > .posts_container').eq(0), jQuery(response).find('.content > .posts_container > article,.content > .posts_container > div[class*=\"column-\"],.content > .posts_container > .masonry_item'));\n\t\t\t\t});\n\t\t\t} else {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Load tab's panel content\n\t\t\t\tjQuery.post(AQUAPRO_STORAGE['ajax_url'], {\n\t\t\t\t\tnonce: AQUAPRO_STORAGE['ajax_nonce'],\n\t\t\t\t\taction: 'aquapro_ajax_get_posts',\n\t\t\t\t\tblog_template: panel.data('blog-template'),\n\t\t\t\t\tblog_style: panel.data('blog-style'),\n\t\t\t\t\tposts_per_page: panel.data('posts-per-page'),\n\t\t\t\t\tcat: panel.data('cat'),\n\t\t\t\t\tparent_cat: panel.data('parent-cat'),\n\t\t\t\t\tpost_type: panel.data('post-type'),\n\t\t\t\t\ttaxonomy: panel.data('taxonomy'),\n\t\t\t\t\tpage: page+1\n\t\t\t\t}).done(function(response) {\n\t\t\t\t\tvar rez = {};\n\t\t\t\t\ttry {\n\t\t\t\t\t\trez = JSON.parse(response);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\trez = { error: AQUAPRO_STORAGE['strings']['ajax_error'] };\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t}\n\t\t\t\t\tif (rez.error !== '') {\n\t\t\t\t\t\tpanel.html('<div class=\"aquapro_error\">'+rez.error+'</div>');\n\t\t\t\t\t} else {\n\t\t\t\t\t\taquapro_loadmore_add_items(panel.find('.posts_container'), jQuery(rez.data).find('article'));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Append items to the container\n\t\t\tfunction aquapro_loadmore_add_items(container, items) {\n\t\t\t\tif (container.length > 0 && items.length > 0) {\n\t\t\t\t\tcontainer.append(items);\n\t\t\t\t\tif (container.hasClass('portfolio_wrap') || container.hasClass('masonry_wrap')) {\n\t\t\t\t\t\tcontainer.masonry( 'appended', items );\n\t\t\t\t\t\tif (container.hasClass('gallery_wrap')) {\n\t\t\t\t\t\t\tAQUAPRO_STORAGE['GalleryFx'][container.attr('id')].appendItems();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tmore.data('page', page+1).parent().removeClass('loading');\n\t\t\t\t\t// Remove TOC if exists (rebuild on init_shortcodes)\n\t\t\t\t\tjQuery('#toc_menu').remove();\n\t\t\t\t\t// Trigger actions to init new elements\n\t\t\t\t\tAQUAPRO_STORAGE['init_all_mediaelements'] = true;\n\t\t\t\t\tjQuery(document).trigger('action.init_shortcodes', [container.parent()]);\n\t\t\t\t\tjQuery(document).trigger('action.init_hidden_elements', [container.parent()]);\n\t\t\t\t}\n\t\t\t\tif (page+1 >= max_page)\n\t\t\t\t\tmore.parent().hide();\n\t\t\t\telse\n\t\t\t\t\tAQUAPRO_STORAGE['load_more_link_busy'] = false;\n\t\t\t\t// Fire 'window.scroll' after clearing busy state\n\t\t\t\tjQuery(window).trigger('scroll');\n\t\t\t}\n\t\t\te.preventDefault();\n\t\t\treturn false;\n\t\t});\n\t\n\t\t// Infinite scroll\n\t\tjQuery(document).on('action.scroll_aquapro', function(e) {\n\t\t\tif (AQUAPRO_STORAGE['load_more_link_busy']) return;\n\t\t\tvar container = jQuery('.content > .posts_container').eq(0);\n\t\t\tvar inf = jQuery('.nav-links-infinite');\n\t\t\tif (inf.length == 0) return;\n\t\t\tif (container.offset().top + container.height() < jQuery(window).scrollTop() + jQuery(window).height()*1.5)\n\t\t\t\tinf.find('a').trigger('click');\n\t\t});\n\t\t\t\n\t\n\t\t// Other settings\n\t\t//------------------------------------\n\t\n\t\tjQuery(document).trigger('action.ready_aquapro');\n\t\n\t\t// Init post format specific scripts\n\t\tjQuery(document).on('action.init_hidden_elements', aquapro_init_post_formats);\n\t\n\t\t// Init hidden elements (if exists)\n\t\tjQuery(document).trigger('action.init_hidden_elements', [jQuery('body').eq(0)]);\n\t\t\n\t} //end ready\n\t\n\t\n\t\n\t\n\t// Scroll actions\n\t//==============================================\n\t\n\t// Do actions when page scrolled\n\tfunction aquapro_scroll_actions() {\n\t\n\t\tvar scroll_offset = jQuery(window).scrollTop();\n\t\tvar adminbar_height = Math.max(0, jQuery('#wpadminbar').height());\n\t\n\t\t// Call theme/plugins specific action (if exists)\n\t\t//----------------------------------------------\n\t\tjQuery(document).trigger('action.scroll_aquapro');\n\n        // Fix/unfix top panel\n        if (!jQuery('body').hasClass('mobile_layout') && !jQuery('body').hasClass('menu_style_side') && !jQuery('body').hasClass('header_position_under')) {\n            var top_panel_height = jQuery('.top_panel_navi').length > 0 ? jQuery('.top_panel_navi').outerHeight() : 0;\n\n            if (scroll_offset <=  top_panel_height) {\n                if (jQuery('body').hasClass('top_panel_fixed')) {\n                    jQuery('body').removeClass('top_panel_fixed');\n                }\n            } else if (scroll_offset > top_panel_height) {\n                if (!jQuery('body').hasClass('top_panel_fixed')) {\n                    jQuery('body').addClass('top_panel_fixed');\n                }\n            }\n        }\n\t\t\n\t\t// Fix/unfix sidebar\n\t\taquapro_fix_sidebar();\n\t\n\t\t// Shift top and footer panels when header position equal to 'Under content'\n\t\tif (jQuery('body').hasClass('header_position_under') && !aquapro_browser_is_mobile()) {\n\t\t\tvar delta = 50;\n\t\t\tvar adminbar = jQuery('#wpadminbar');\n\t\t\tvar adminbar_height = adminbar.length == 0 && adminbar.css('position') == 'fixed' ? 0 : adminbar.height();\n\t\t\tvar header = jQuery('.top_panel');\n\t\t\tvar header_height = header.height();\n\t\t\tvar mask = header.find('.top_panel_mask');\n\t\t\tif (mask.length==0) {\n\t\t\t\theader.append('<div class=\"top_panel_mask\"></div>');\n\t\t\t\tmask = header.find('.top_panel_mask');\n\t\t\t}\n\t\t\tif (scroll_offset > adminbar_height) {\n\t\t\t\tvar offset = scroll_offset - adminbar_height;\n\t\t\t\tif (offset <= header_height) {\n\t\t\t\t\tvar mask_opacity = Math.max(0, Math.min(0.8, (offset-delta)/header_height));\n\t\t\t\t\t// Don't shift header with Revolution slider in Chrome\n\t\t\t\t\tif ( !(/Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor)) || header.find('.slider_engine_revo').length == 0 )\n\t\t\t\t\t\theader.css('top', Math.round(offset/1.2)+'px');\n\t\t\t\t\tmask.css({\n\t\t\t\t\t\t'opacity': mask_opacity,\n\t\t\t\t\t\t'display': offset==0 ? 'none' : 'block'\n\t\t\t\t\t});\n\t\t\t\t} else if (parseInt(header.css('top')) != 0) {\n\t\t\t\t\theader.css('top', Math.round(offset/1.2)+'px');\n\t\t\t\t}\n\t\t\t} else if (parseInt(header.css('top')) != 0 || mask.css('display')!='none') {\n\t\t\t\theader.css('top', '0px');\n\t\t\t\tmask.css({\n\t\t\t\t\t'opacity': 0,\n\t\t\t\t\t'display': 'none'\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar footer = jQuery('.footer_wrap');\n\t\t\tvar footer_height = Math.min(footer.height(), jQuery(window).height());\n\t\t\tvar footer_visible = (scroll_offset + jQuery(window).height()) - (header.outerHeight() + jQuery('.page_content_wrap').outerHeight());\n\t\t\tif (footer_visible > 0) {\n\t\t\t\tmask = footer.find('.top_panel_mask');\n\t\t\t\tif (mask.length==0) {\n\t\t\t\t\tfooter.append('<div class=\"top_panel_mask\"></div>');\n\t\t\t\t\tmask = footer.find('.top_panel_mask');\n\t\t\t\t}\n\t\t\t\tif (footer_visible <= footer_height) {\n\t\t\t\t\tvar mask_opacity = Math.max(0, Math.min(0.8, (footer_height - footer_visible)/footer_height));\n\t\t\t\t\t// Don't shift header with Revolution slider in Chrome\n\t\t\t\t\tif ( !(/Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor)) || footer.find('.slider_engine_revo').length == 0 )\n\t\t\t\t\t\tfooter.css('top', -Math.round((footer_height - footer_visible)/1.2)+'px');\n\t\t\t\t\tmask.css({\n\t\t\t\t\t\t'opacity': mask_opacity,\n\t\t\t\t\t\t'display': footer_height - footer_visible <= 0 ? 'none' : 'block'\n\t\t\t\t\t});\n\t\t\t\t} else if (parseInt(footer.css('top')) != 0 || mask.css('display')!='none') {\n\t\t\t\t\tfooter.css('top', 0);\n\t\t\t\t\tmask.css({\n\t\t\t\t\t\t'opacity': 0,\n\t\t\t\t\t\t'display': 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t// Resize actions\n\t//==============================================\n\t\n\t// Do actions when page scrolled\n\tfunction aquapro_resize_actions(cont) {\n\t\taquapro_check_layout();\n\t\taquapro_fix_sidebar();\n\t\taquapro_fix_footer();\n\t\taquapro_stretch_width(cont);\n\t\taquapro_stretch_height(null, cont);\n\t\taquapro_vc_row_fullwidth_to_boxed(cont);\n\t\tif (AQUAPRO_STORAGE['menu_side_stretch']) aquapro_stretch_sidemenu();\n\t\n\t\t// Call theme/plugins specific action (if exists)\n\t\t//----------------------------------------------\n\t\tjQuery(document).trigger('action.resize_aquapro', [cont]);\n\t}\n\t\n\t// Stretch sidemenu (if present)\n\tfunction aquapro_stretch_sidemenu() {\n\t\tvar toc_items = jQuery('.menu_side_wrap .toc_menu_item');\n\t\tif (toc_items.length < 5) return;\n\t\tvar toc_items_height = jQuery(window).height() - jQuery('.menu_side_wrap .sc_layouts_logo').outerHeight() - toc_items.length;\n\t\tvar th = Math.floor(toc_items_height / toc_items.length);\n\t\tvar th_add = toc_items_height - th*toc_items.length;\n\t\ttoc_items.find(\".toc_menu_description,.toc_menu_icon\").css({\n\t\t\t'height': th+'px',\n\t\t\t'lineHeight': th+'px'\n\t\t});\n\t\ttoc_items.eq(0).find(\".toc_menu_description,.toc_menu_icon\").css({\n\t\t\t'height': (th+th_add)+'px',\n\t\t\t'lineHeight': (th+th_add)+'px'\n\t\t});\n\t}\n\t\n\t// Check for mobile layout\n\tfunction aquapro_check_layout() {\n\t\tif (jQuery('body').hasClass('no_layout'))\n\t\t\tjQuery('body').removeClass('no_layout');\n\t\tvar w = window.innerWidth;\n\t\tif (w == undefined) \n\t\t\tw = jQuery(window).width()+(jQuery(window).height() < jQuery(document).height() || jQuery(window).scrollTop() > 0 ? 16 : 0);\n\t\tif (AQUAPRO_STORAGE['mobile_layout_width'] >= w) {\n\t\t\tif (!jQuery('body').hasClass('mobile_layout')) {\n\t\t\t\tjQuery('body').removeClass('desktop_layout').addClass('mobile_layout');\n\t\t\t}\n\t\t} else {\n\t\t\tif (!jQuery('body').hasClass('desktop_layout')) {\n\t\t\t\tjQuery('body').removeClass('mobile_layout').addClass('desktop_layout');\n\t\t\t\tjQuery('.menu_mobile').removeClass('opened');\n\t\t\t\tjQuery('.menu_mobile_overlay').hide();\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Stretch area to full window width\n\tfunction aquapro_stretch_width(cont) {\n\t\tif (cont===undefined) cont = jQuery('body');\n\t\tcont.find('.trx-stretch-width').each(function() {\n\t\t\tvar $el = jQuery(this);\n\t\t\tvar $el_cont = $el.parents('.page_wrap');\n\t\t\tvar $el_cont_offset = 0;\n\t\t\tif ($el_cont.length == 0) \n\t\t\t\t$el_cont = jQuery(window);\n\t\t\telse\n\t\t\t\t$el_cont_offset = $el_cont.offset().left;\n\t\t\tvar $el_full = $el.next('.trx-stretch-width-original');\n\t\t\tvar el_margin_left = parseInt( $el.css( 'margin-left' ), 10 );\n\t\t\tvar el_margin_right = parseInt( $el.css( 'margin-right' ), 10 );\n\t\t\tvar offset = $el_cont_offset - $el_full.offset().left - el_margin_left;\n\t\t\tvar width = $el_cont.width();\n\t\t\tif (!$el.hasClass('inited')) {\n\t\t\t\t$el.addClass('inited invisible');\n\t\t\t\t$el.css({\n\t\t\t\t\t'position': 'relative',\n\t\t\t\t\t'box-sizing': 'border-box'\n\t\t\t\t});\n\t\t\t}\n\t\t\t$el.css({\n\t\t\t\t'left': offset,\n\t\t\t\t'width': $el_cont.width()\n\t\t\t});\n\t\t\tif ( !$el.hasClass('trx-stretch-content') ) {\n\t\t\t\tvar padding = Math.max(0, -1*offset);\n\t\t\t\tvar paddingRight = Math.max(0, width - padding - $el_full.width() + el_margin_left + el_margin_right);\n\t\t\t\t$el.css( { 'padding-left': padding + 'px', 'padding-right': paddingRight + 'px' } );\n\t\t\t}\n\t\t\t$el.removeClass('invisible');\n\t\t});\n\t}\n\t\n\t// Stretch area to the full window height\n\tfunction aquapro_stretch_height(e, cont) {\n\t\tif (cont===undefined) cont = jQuery('body');\n\t\tcont.find('.trx-stretch-height').each(function () {\n\t\t\tvar fullheight_item = jQuery(this);\n\t\t\t// If item now invisible\n\t\t\tif (jQuery(this).parents('div:hidden,article:hidden').length > 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar wh = 0;\n\t\t\tvar fullheight_row = jQuery(this).parents('.vc_row-o-full-height');\n\t\t\tif (fullheight_row.length > 0) {\n\t\t\t\twh = fullheight_row.height();\n\t\t\t} else {\n\t\t\t\tif (screen.width > 1000) {\n\t\t\t\t\tvar adminbar = jQuery('#wpadminbar');\n\t\t\t\t\twh = jQuery(window).height() - (adminbar.length > 0 ? adminbar.height() : 0);\n\t\t\t\t} else\n\t\t\t\t\twh = 'auto';\n\t\t\t}\n\t\t\tif (wh=='auto' || wh > 0) fullheight_item.height(wh);\n\t\t});\n\t}\n\t\t\n\t// Recalculate width of the vc_row[data-vc-full-width=\"true\"] when content boxed or menu_style=='left|right'\n\tfunction aquapro_vc_row_fullwidth_to_boxed(row) {\n\t\tif (jQuery('body').hasClass('body_style_boxed') || jQuery('body').hasClass('menu_style_side')) {\n\t\t\tif (row === undefined) row = jQuery('.vc_row[data-vc-full-width=\"true\"]');\n\t\t\tvar width_content = jQuery('.page_wrap').width();\n\t\t\tvar width_content_wrap = jQuery('.page_content_wrap  .content_wrap').width();\n\t\t\tvar indent = ( width_content - width_content_wrap ) / 2;\n\t\t\tvar rtl = jQuery('html').attr('dir') == 'rtl';\n\t\t\trow.each( function() {\n\t\t\t\tvar mrg = parseInt(jQuery(this).css('marginLeft'));\n\t\t\t\tjQuery(this).css({\n\t\t\t\t\t'width': width_content,\n\t\t\t\t\t'left': rtl ? 'auto' : -indent-mrg,\n\t\t\t\t\t'right': rtl ? -indent-mrg : 'auto',\n\t\t\t\t\t'padding-left': indent+mrg,\n\t\t\t\t\t'padding-right': indent+mrg\n\t\t\t\t});\n\t\t\t\tif (jQuery(this).attr('data-vc-stretch-content')) {\n\t\t\t\t\tjQuery(this).css({\n\t\t\t\t\t\t'padding-left': 0,\n\t\t\t\t\t\t'padding-right': 0\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t\n\t\n\t// Fix/unfix header\n\tfunction aquapro_fix_header(rows, resize) {\n\t\tif (jQuery(window).width() <= 800) {\n\t\t\trows.removeClass('aquapro_layouts_row_fixed_on').css({'top': 'auto'});\n\t\t\treturn;\n\t\t}\n\t\tvar scroll_offset = jQuery(window).scrollTop();\n\t\tvar admin_bar = jQuery('#wpadminbar');\n\t\tvar rows_offset = Math.max(0, admin_bar.length > 0 && admin_bar.css('position')=='fixed' ? admin_bar.height() : 0);\n\t\t\n\t\trows.each(function() {\n\t\t\tvar placeholder = jQuery(this).next();\n\t\t\tvar offset = parseInt(jQuery(this).hasClass('aquapro_layouts_row_fixed_on') ? placeholder.offset().top : jQuery(this).offset().top);\n\t\t\tif (isNaN(offset)) offset = 0;\n\t\n\t\t\t// Fix/unfix row\n\t\t\tif (scroll_offset + rows_offset <= offset) {\n\t\t\t\tif (jQuery(this).hasClass('aquapro_layouts_row_fixed_on')) {\n\t\t\t\t\tjQuery(this).removeClass('aquapro_layouts_row_fixed_on').css({'top': 'auto'});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar h = jQuery(this).outerHeight();\n\t\t\t\tif (!jQuery(this).hasClass('aquapro_layouts_row_fixed_on')) {\n\t\t\t\t\tif (rows_offset + h < jQuery(window).height() * 0.33) {\n\t\t\t\t\t\tplaceholder.height(h);\n\t\t\t\t\t\tjQuery(this).addClass('aquapro_layouts_row_fixed_on').css({'top': rows_offset+'px'});\n\t\t\t\t\t\th = jQuery(this).outerHeight();\n\t\t\t\t\t}\n\t\t\t\t} else if (resize && jQuery(this).hasClass('aquapro_layouts_row_fixed_on') && jQuery(this).offset().top != rows_offset) {\n\t\t\t\t\tjQuery(this).css({'top': rows_offset+'px'});\n\t\t\t\t}\n\t\t\t\trows_offset += h;\n\t\t\t}\n\t\t});\n\t}\n\t\n\t\n\t// Fix/unfix footer\n\tfunction aquapro_fix_footer() {\n\t\tif (jQuery('body').hasClass('header_position_under') && !aquapro_browser_is_mobile()) {\n\t\t\tvar ft = jQuery('.footer_wrap');\n\t\t\tif (ft.length > 0) {\n\t\t\t\tvar ft_height = ft.outerHeight(false),\n\t\t\t\t\tpc = jQuery('.page_content_wrap'),\n\t\t\t\t\tpc_offset = pc.offset().top,\n\t\t\t\t\tpc_height = pc.height();\n\t\t\t\tif (pc_offset + pc_height + ft_height < jQuery(window).height()) {\n\t\t\t\t\tif (ft.css('position')!='absolute') {\n\t\t\t\t\t\tft.css({\n\t\t\t\t\t\t\t'position': 'absolute',\n\t\t\t\t\t\t\t'left': 0,\n\t\t\t\t\t\t\t'bottom': 0,\n\t\t\t\t\t\t\t'width' :'100%'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (ft.css('position')!='relative') {\n\t\t\t\t\t\tft.css({\n\t\t\t\t\t\t\t'position': 'relative',\n\t\t\t\t\t\t\t'left': 'auto',\n\t\t\t\t\t\t\t'bottom': 'auto'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t// Fix/unfix sidebar\n\tfunction aquapro_fix_sidebar() {\n\t\tvar sb = jQuery('.sidebar');\n\t\tif (sb.length > 0) {\n\t\n\t\t\t// Unfix when sidebar is under content\n\t\t\tif (jQuery('.page_content_wrap .content_wrap .content').css('float') == 'none') {\n\t\t\t\tif (sb.css('position')=='fixed') {\n\t\t\t\t\tsb.css({\n\t\t\t\t\t\t'float': sb.hasClass('right') ? 'right' : 'left',\n\t\t\t\t\t\t'position': 'static'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t} else {\n\t\n\t\t\t\tvar sb_height = sb.outerHeight() + 30;\n\t\t\t\tvar content_height = sb.siblings('.content').outerHeight();\n\t\t\t\tvar scroll_offset = jQuery(window).scrollTop();\n\t\t\t\tvar top_panel_height = jQuery('.top_panel').length > 0 ? jQuery('.top_panel').outerHeight() : 0;\n\t\t\t\tvar widgets_above_page_height = jQuery('.widgets_above_page_wrap').length > 0 ? jQuery('.widgets_above_page_wrap').height() : 0;\n\t\t\t\tvar page_padding = parseInt(jQuery('.page_content_wrap').css('paddingTop'));\n\t\t\t\tif (isNaN(page_padding)) page_padding = 0;\n\t\t\t\tvar top_panel_fixed_height = top_panel_height;\n\t\t\t\tif (jQuery('.sc_layouts_row_fixed_on').length > 0) {\n\t\t\t\t\ttop_panel_fixed_height = 0;\n\t\t\t\t\tjQuery('.sc_layouts_row_fixed_on').each(function() {\n\t\t\t\t\t\ttop_panel_fixed_height += jQuery(this).outerHeight();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tif (sb_height < content_height && \n\t\t\t\t\t(sb_height >= jQuery(window).height() && scroll_offset + jQuery(window).height() > sb_height+top_panel_height+widgets_above_page_height+page_padding\n\t\t\t\t\t||\n\t\t\t\t\tsb_height < jQuery(window).height() && scroll_offset > top_panel_height+widgets_above_page_height+page_padding )\n\t\t\t\t\t) {\n\t\t\t\t\t\n\t\t\t\t\t// Fix when sidebar bottom appear\n\t\t\t\t\tif (sb.css('position')!=='fixed') {\n\t\t\t\t\t\tvar sb_top = sb_height >= jQuery(window).height()\n\t\t\t\t\t\t\t\t\t\t\t? Math.min(0, jQuery(window).height() - sb_height)\n\t\t\t\t\t\t\t\t\t\t\t: top_panel_fixed_height+widgets_above_page_height+page_padding;\n\t\t\t\t\t\tsb.css({\n\t\t\t\t\t\t\t'float': 'none',\n\t\t\t\t\t\t\t'position': 'fixed',\n\t\t\t\t\t\t\t'top': sb_top + 'px'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Detect horizontal position when resize\n\t\t\t\t\tvar pos = jQuery('.page_content_wrap .content_wrap').position();\n\t\t\t\t\tpos = pos.left + Math.max(0, parseInt(jQuery('.page_content_wrap .content_wrap').css('paddingLeft'))) + Math.max(0, parseInt(jQuery('.page_content_wrap .content_wrap').css('marginLeft')));\n\t\t\t\t\tif (sb.hasClass('right'))\n\t\t\t\t\t\tsb.css({ 'right': pos });\n\t\t\t\t\telse\n\t\t\t\t\t\tsb.css({ 'left': pos });\n\t\t\t\t\t\n\t\t\t\t\t// Shift to top when footer appear\n\t\t\t\t\tvar footer_top = 0;\n\t\t\t\t\tvar footer_pos = jQuery('.footer_wrap').position();\n\t\t\t\t\tvar widgets_below_page_pos = jQuery('.widgets_below_page_wrap').position();\n\t\t\t\t\tif (widgets_below_page_pos)\n\t\t\t\t\t\tfooter_top = widgets_below_page_pos.top;\n\t\t\t\t\telse if (footer_pos)\n\t\t\t\t\t\tfooter_top = footer_pos.top;\n\t\t\t\t\tif (footer_top > 0 && scroll_offset + jQuery(window).height() > footer_top)\n\t\t\t\t\t\tsb.css({\n\t\t\t\t\t\t\t'top': Math.min(top_panel_fixed_height+page_padding, jQuery(window).height() - sb_height - (scroll_offset + jQuery(window).height() - footer_top + 30)) + 'px'\n\t\t\t\t\t\t});\n\t\t\t\t\telse\n\t\t\t\t\t\tsb.css({\n\t\t\t\t\t\t\t'top': Math.min(top_panel_fixed_height+page_padding, jQuery(window).height() - sb_height) + 'px'\n\t\t\t\t\t\t});\n\t\t\t\t\t\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Unfix when page scrolling to top\n\t\t\t\t\tif (sb.css('position')=='fixed') {\n\t\t\t\t\t\tsb.css({\n\t\t\t\t\t\t\t'float': sb.hasClass('right') ? 'right' : 'left',\n\t\t\t\t\t\t\t'position': 'static',\n\t\t\t\t\t\t\t'top': 'auto',\n\t\t\t\t\t\t\t'left': 'auto',\n\t\t\t\t\t\t\t'right': 'auto'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t\n\t\n\t// Navigation\n\t//==============================================\n\t\n\t// Init Superfish menu\n\tfunction aquapro_init_sfmenu(selector) {\n\t\tjQuery(selector).show().each(function() {\n\t\t\tvar animation_in = jQuery(this).parent().data('animation_in');\n\t\t\tif (animation_in == undefined) animation_in = \"none\";\n\t\t\tvar animation_out = jQuery(this).parent().data('animation_out');\n\t\t\tif (animation_out == undefined) animation_out = \"none\";\n\t\t\tjQuery(this).addClass('inited').superfish({\n\t\t\t\tdelay: 500,\n\t\t\t\tanimation: {\n\t\t\t\t\topacity: 'show'\n\t\t\t\t},\n\t\t\t\tanimationOut: {\n\t\t\t\t\topacity: 'hide'\n\t\t\t\t},\n\t\t\t\tspeed: \t\tanimation_in!='none' ? 500 : 200,\n\t\t\t\tspeedOut:\tanimation_out!='none' ? 500 : 200,\n\t\t\t\tautoArrows: false,\n\t\t\t\tdropShadows: false,\n\t\t\t\tonBeforeShow: function(ul) {\n\t\t\t\t\tif (jQuery(this).parents(\"ul\").length > 1){\n\t\t\t\t\t\tvar w = jQuery(window).width();  \n\t\t\t\t\t\tvar par_offset = jQuery(this).parents(\"ul\").offset().left;\n\t\t\t\t\t\tvar par_width  = jQuery(this).parents(\"ul\").outerWidth();\n\t\t\t\t\t\tvar ul_width   = jQuery(this).outerWidth();\n\t\t\t\t\t\tif (par_offset+par_width+ul_width > w-20 && par_offset-ul_width > 0)\n\t\t\t\t\t\t\tjQuery(this).addClass('submenu_left');\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tjQuery(this).removeClass('submenu_left');\n\t\t\t\t\t}\n\t\t\t\t\tif (animation_in!='none') {\n\t\t\t\t\t\tjQuery(this).removeClass('animated fast '+animation_out);\n\t\t\t\t\t\tjQuery(this).addClass('animated fast '+animation_in);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonBeforeHide: function(ul) {\n\t\t\t\t\tif (animation_out!='none') {\n\t\t\t\t\t\tjQuery(this).removeClass('animated fast '+animation_in);\n\t\t\t\t\t\tjQuery(this).addClass('animated fast '+animation_out);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\t\n\t\n\t\n\t\n\t// Post formats init\n\t//=====================================================\n\t\n\tfunction aquapro_init_post_formats(e, cont) {\n\t\n\t\t// MediaElement init\n\t\taquapro_init_media_elements(cont);\n\t\t\n\t\t// Video play button\n\t\tcont.find('.format-video .post_featured.with_thumb .post_video_hover:not(.inited)')\n\t\t\t.addClass('inited')\n\t\t\t.on('click', function(e) {\n\t\t\t\tjQuery(this).parents('.post_featured')\n\t\t\t\t\t.addClass('post_video_play')\n\t\t\t\t\t.find('.post_video').html(jQuery(this).data('video'));\n\t\t\t\tjQuery(window).trigger('resize');\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t});\n\t}\n\t\n\t\n\tfunction aquapro_init_media_elements(cont) {\n\t\tif (AQUAPRO_STORAGE['use_mediaelements'] && cont.find('audio:not(.inited),video:not(.inited)').length > 0) {\n            if (window.mejs) {\n                if (window.mejs.MepDefaults) window.mejs.MepDefaults.enableAutosize = true;\n                if (window.mejs.MediaElementDefaults) window.mejs.MediaElementDefaults.enableAutosize = true;\n\n                cont.find('audio:not(.inited),video:not(.inited)').each(function() {\n\t\t\t\t\tif (jQuery(this).parents('.mejs-mediaelement').length == 0 && (AQUAPRO_STORAGE['init_all_mediaelements'] || (!jQuery(this).hasClass('wp-audio-shortcode') && !jQuery(this).hasClass('wp-video-shortcode') && !jQuery(this).parent().hasClass('wp-playlist')))) {\n\t\t\t\t\t\tvar media_tag = jQuery(this);\n\t\t\t\t\t\tvar settings = {\n\t\t\t\t\t\t\tenableAutosize: true,\n\t\t\t\t\t\t\tvideoWidth: -1,\t\t// if set, overrides <video width>\n\t\t\t\t\t\t\tvideoHeight: -1,\t// if set, overrides <video height>\n\t\t\t\t\t\t\taudioWidth: '100%',\t// width of audio player\n\t\t\t\t\t\t\taudioHeight: 30,\t// height of audio player\n\t\t\t\t\t\t\tsuccess: function(mejs) {\n\t\t\t\t\t\t\t\tvar autoplay, loop;\n\t\t\t\t\t\t\t\tif ( 'flash' === mejs.pluginType ) {\n\t\t\t\t\t\t\t\t\tautoplay = mejs.attributes.autoplay && 'false' !== mejs.attributes.autoplay;\n\t\t\t\t\t\t\t\t\tloop = mejs.attributes.loop && 'false' !== mejs.attributes.loop;\n\t\t\t\t\t\t\t\t\tautoplay && mejs.addEventListener( 'canplay', function () {\n\t\t\t\t\t\t\t\t\t\tmejs.play();\n\t\t\t\t\t\t\t\t\t}, false );\n\t\t\t\t\t\t\t\t\tloop && mejs.addEventListener( 'ended', function () {\n\t\t\t\t\t\t\t\t\t\tmejs.play();\n\t\t\t\t\t\t\t\t\t}, false );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tjQuery(this).mediaelementplayer(settings);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else\n\t\t\t\tsetTimeout(function() { aquapro_init_media_elements(cont); }, 400);\n\t\t}\n\t}\n\t\n\t\n\t// Load the tab's content\n\tfunction aquapro_tabs_ajax_content_loader(panel, page, oldPanel) {\n\t\tif (panel.html().replace(/\\s/g, '')=='') {\n\t\t\tvar height = oldPanel === undefined ? panel.height() : oldPanel.height();\n\t\t\tif (isNaN(height) || height < 100) height = 100;\n\t\t\tpanel.html('<div class=\"aquapro_tab_holder\" style=\"min-height:'+height+'px;\"></div>');\n\t\t} else\n\t\t\tpanel.find('> *').addClass('aquapro_tab_content_remove');\n\t\tpanel.data('need-content', false).addClass('aquapro_loading');\n\t\tjQuery.post(AQUAPRO_STORAGE['ajax_url'], {\n\t\t\tnonce: AQUAPRO_STORAGE['ajax_nonce'],\n\t\t\taction: 'aquapro_ajax_get_posts',\n\t\t\tblog_template: panel.data('blog-template'),\n\t\t\tblog_style: panel.data('blog-style'),\n\t\t\tposts_per_page: panel.data('posts-per-page'),\n\t\t\tcat: panel.data('cat'),\n\t\t\tparent_cat: panel.data('parent-cat'),\n\t\t\tpost_type: panel.data('post-type'),\n\t\t\ttaxonomy: panel.data('taxonomy'),\n\t\t\tpage: page\n\t\t}).done(function(response) {\n\t\t\tpanel.removeClass('aquapro_loading');\n\t\t\tvar rez = {};\n\t\t\ttry {\n\t\t\t\trez = JSON.parse(response);\n\t\t\t} catch (e) {\n\t\t\t\trez = { error: AQUAPRO_STORAGE['strings']['ajax_error'] };\n\t\t\t\tconsole.log(response);\n\t\t\t}\n\t\t\tif (rez.error !== '') {\n\t\t\t\tpanel.html('<div class=\"aquapro_error\">'+rez.error+'</div>');\n\t\t\t} else {\n\t\t\t\tpanel.prepend(rez.data).fadeIn(function() {\n\t\t\t\t\tjQuery(document).trigger('action.init_shortcodes', [panel]);\n\t\t\t\t\tjQuery(document).trigger('action.init_hidden_elements', [panel]);\n\t\t\t\t\tjQuery(window).trigger('scroll');\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tpanel.find('.aquapro_tab_holder,.aquapro_tab_content_remove').remove();\n\t\t\t\t\t\tjQuery(window).trigger('scroll');\n\t\t\t\t\t}, 600);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\t\n\t\n\t// Forms validation\n\t//-------------------------------------------------------\n\t\n\t// Comments form\n\tfunction aquapro_comments_validate(form) {\n\t\tform.find('input').removeClass('error_field');\n\t\tvar comments_args = {\n\t\t\terror_message_text: AQUAPRO_STORAGE['strings']['error_global'],\t// Global error message text (if don't write in checked field)\n\t\t\terror_message_show: true,\t\t\t\t\t\t\t\t\t// Display or not error message\n\t\t\terror_message_time: 4000,\t\t\t\t\t\t\t\t\t// Error message display time\n\t\t\terror_message_class: 'aquapro_messagebox aquapro_messagebox_style_error',\t// Class appended to error message block\n\t\t\terror_fields_class: 'error_field',\t\t\t\t\t\t\t// Class appended to error fields\n\t\t\texit_after_first_error: false,\t\t\t\t\t\t\t\t// Cancel validation and exit after first error\n\t\t\trules: [\n\t\t\t\t{\n\t\t\t\t\tfield: 'comment',\n\t\t\t\t\tmin_length: { value: 1, message: AQUAPRO_STORAGE['strings']['text_empty'] },\n\t\t\t\t\tmax_length: { value: AQUAPRO_STORAGE['message_maxlength'], message: AQUAPRO_STORAGE['strings']['text_long']}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tif (form.find('.comments_author input[aria-required=\"true\"]').length > 0) {\n\t\t\tcomments_args.rules.push(\n\t\t\t\t{\n\t\t\t\t\tfield: 'author',\n\t\t\t\t\tmin_length: { value: 1, message: AQUAPRO_STORAGE['strings']['name_empty']},\n\t\t\t\t\tmax_length: { value: 60, message: AQUAPRO_STORAGE['strings']['name_long']}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tif (form.find('.comments_email input[aria-required=\"true\"]').length > 0) {\n\t\t\tcomments_args.rules.push(\n\t\t\t\t{\n\t\t\t\t\tfield: 'email',\n\t\t\t\t\tmin_length: { value: 1, message: AQUAPRO_STORAGE['strings']['email_empty']},\n\t\t\t\t\tmax_length: { value: 60, message: AQUAPRO_STORAGE['strings']['email_long']},\n\t\t\t\t\tmask: { value: AQUAPRO_STORAGE['email_mask'], message: AQUAPRO_STORAGE['strings']['email_not_valid']}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tvar error = aquapro_form_validate(form, comments_args);\n\t\treturn !error;\n\t}\n\n});"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.349Z",
        "time": 0.20899999799439684,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.18599999748403206,
          "receive": 0.02300000051036477,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 984
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-includes/js/mediaelement/wp-mediaelement.min.js?ver=4.9.22",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [
            {
              "name": "ver",
              "value": "4.9.22"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 15 Apr 2021 04:52:56 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"38b-5bffba301670b-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "475"
            }
          ],
          "cookies": [],
          "content": {
            "size": 907,
            "mimeType": "application/javascript",
            "text": "!function(e,n){e.wp=e.wp||{},e.wp.mediaelement=new function(){var e={};return{initialize:function(){(e=\"undefined\"!=typeof _wpmejsSettings?n.extend(!0,{},_wpmejsSettings):e).classPrefix=\"mejs-\",e.success=e.success||function(e){var n,t;e.rendererName&&-1!==e.rendererName.indexOf(\"flash\")&&(n=e.attributes.autoplay&&\"false\"!==e.attributes.autoplay,t=e.attributes.loop&&\"false\"!==e.attributes.loop,n&&e.addEventListener(\"canplay\",function(){e.play()},!1),t&&e.addEventListener(\"ended\",function(){e.play()},!1))},e.customError=function(e,n){if(-1!==e.rendererName.indexOf(\"flash\")||-1!==e.rendererName.indexOf(\"flv\"))return'<a href=\"'+n.src+'\">'+mejsL10n.strings[\"mejs.download-video\"]+\"</a>\"},n(\".wp-audio-shortcode, .wp-video-shortcode\").not(\".mejs-container\").filter(function(){return!n(this).parent().hasClass(\"mejs-mediaelement\")}).mediaelementplayer(e)}}},n(e.wp.mediaelement.initialize)}(window,jQuery);"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.349Z",
        "time": 0.20400000357767567,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.1340000017080456,
          "receive": 0.07000000186963007,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 985
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/themes/aquapro/includes/theme.hovers/theme.hovers.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Fri, 03 Mar 2017 22:59:18 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"ea5-549db7ed35d80-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "933"
            }
          ],
          "cookies": [],
          "content": {
            "size": 3749,
            "mimeType": "application/javascript",
            "text": "// Buttons decoration (add 'hover' class)\n// Attention! Not use cont.find('selector')! Use jQuery('selector') instead!\n\njQuery(document).on('action.init_hidden_elements', function(e, cont) {\n\t\"use strict\";\n\tif (AQUAPRO_STORAGE['button_hover'] && AQUAPRO_STORAGE['button_hover']!='default') {\n\t\tjQuery('button:not(.search_submit):not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t.theme_button:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t.sc_item_button > a:not([class*=\"sc_button_hover_\"]):not([class*=\"sc_button_simple\"]),\\\n\t\t\t\t.sc_form_field button:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t.sc_price_link:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t.sc_action_item_link:not(.sc_action_item_link_over):not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t.more-link:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t.trx_addons_hover_content .trx_addons_hover_links a:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t.aquapro_tabs .aquapro_tabs_titles li a:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t.hover_shop_buttons .icons a:not([class*=\"sc_button_hover_style_\"]),\\\n\t\t\t\t.woocommerce #respond input#submit:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t.woocommerce .button:not([class*=\"shop_\"]):not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t.woocommerce-page .button:not([class*=\"shop_\"]):not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t#buddypress a.button:not([class*=\"sc_button_hover_\"])\\\n\t\t\t\t').addClass('sc_button_hover_just_init sc_button_hover_'+AQUAPRO_STORAGE['button_hover']);\n\t\tif (AQUAPRO_STORAGE['button_hover']!='arrow') {\n\t\t\tjQuery('input[type=\"submit\"]:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t\tinput[type=\"button\"]:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t\t.single-product div.product .trx-stretch-width .woocommerce-tabs .wc-tabs li a,\\\n\t\t\t\t\t.tribe-events-button:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t\t#tribe-bar-views .tribe-bar-views-list .tribe-bar-views-option a:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t\t.tribe-bar-mini #tribe-bar-views .tribe-bar-views-list .tribe-bar-views-option a:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t\t.tribe-events-cal-links a:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t\t.tribe-events-sub-nav li a:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t\t.isotope_filters_button:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t\t.trx_addons_scroll_to_top:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t\t.sc_slider_controller_titles .slider_controls_wrap > a:not([class*=\"sc_button_hover_\"]),\\\n\t\t\t\t\t.tagcloud > a:not([class*=\"sc_button_hover_\"])\\\n\t\t\t\t\t').addClass('sc_button_hover_just_init sc_button_hover_'+AQUAPRO_STORAGE['button_hover']);\n\t\t}\n\t\t// Add alter styles of buttons\n\t\tjQuery('.sc_slider_controller_titles .slider_controls_wrap > a:not([class*=\"sc_button_hover_style_\"])\\\n\t\t\t\t').addClass('sc_button_hover_just_init sc_button_hover_style_default');\n\t\tjQuery('.sc_button_bordered,\\\n\t\t\t\t.sc_promo .sc_promo_button .sc_button\\\n\t\t\t\t').addClass('sc_button_hover_just_init sc_button_hover_style_inverse');\n\t\tjQuery('.sidebar .trx_addons_tabs .trx_addons_tabs_titles li a:not([class*=\"sc_button_hover_style_\"]),\\\n\t\t\t\t.aquapro_tabs .aquapro_tabs_titles li a:not([class*=\"sc_button_hover_style_\"]),\\\n\t\t\t\t.widget_tag_cloud a:not([class*=\"sc_button_hover_style_\"]),\\\n\t\t\t\t.widget_product_tag_cloud a:not([class*=\"sc_button_hover_style_\"])\\\n\t\t\t\t').addClass('sc_button_hover_just_init sc_button_hover_style_alterbd');\n\t\tjQuery('.sc_button_inversed\\\n\t\t\t\t').addClass('sc_button_hover_just_init sc_button_hover_style_dark');\n\t\t// Remove just init hover class\n\t\tsetTimeout(function() {\n\t\t\tjQuery('.sc_button_hover_just_init').removeClass('sc_button_hover_just_init');\n\t\t\t}, 500);\n\t\t// Remove hover class\n\t\tjQuery('.mejs-controls button,\\\n\t\t\t\t.mfp-close,\\\n\t\t\t\t.sc_button_bg_image,\\\n\t\t\t\t.hover_shop_buttons a,\\\n\t\t\t\t.sc_layouts_row_type_narrow .sc_button\\\n\t\t\t\t').removeClass('sc_button_hover_'+AQUAPRO_STORAGE['button_hover']);\n\n\t}\n\t\n});"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.350Z",
        "time": 0.2590000003692694,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.22199999511940405,
          "receive": 0.03700000524986535,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 986
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/themes/aquapro/plugins/trx_addons/trx_addons.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Fri, 03 Mar 2017 22:59:18 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"b5f-549db7ed35d80-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "747"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2911,
            "mimeType": "application/javascript",
            "text": "/* global jQuery:false */\n/* global AQUAPRO_STORAGE:false */\n/* global TRX_ADDONS_STORAGE:false */\n\n(function() {\n\t\"use strict\";\n\t\n\tjQuery(document).on('action.add_googlemap_styles', aquapro_trx_addons_add_googlemap_styles);\n\tjQuery(document).on('action.init_shortcodes', aquapro_trx_addons_init);\n\tjQuery(document).on('action.init_hidden_elements', aquapro_trx_addons_init);\n\t\n\t// Add theme specific styles to the Google map\n\tfunction aquapro_trx_addons_add_googlemap_styles(e) {\n\t\tTRX_ADDONS_STORAGE['googlemap_styles']['dark'] = [{\"featureType\":\"all\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"saturation\":36},{\"color\":\"#000000\"},{\"lightness\":40}]},{\"featureType\":\"all\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"visibility\":\"on\"},{\"color\":\"#000000\"},{\"lightness\":16}]},{\"featureType\":\"all\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":20}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":17},{\"weight\":1.2}]},{\"featureType\":\"landscape\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"on\"}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":20}]},{\"featureType\":\"landscape\",\"elementType\":\"labels.icon\",\"stylers\":[{\"saturation\":\"-100\"},{\"lightness\":\"-54\"}]},{\"featureType\":\"poi\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"on\"},{\"lightness\":\"0\"}]},{\"featureType\":\"poi\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":21}]},{\"featureType\":\"poi\",\"elementType\":\"labels.icon\",\"stylers\":[{\"saturation\":\"-89\"},{\"lightness\":\"-55\"}]},{\"featureType\":\"road\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":17}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":29},{\"weight\":0.2}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":18}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":16}]},{\"featureType\":\"transit\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":19}]},{\"featureType\":\"transit.station\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"on\"},{\"saturation\":\"-100\"},{\"lightness\":\"-51\"}]},{\"featureType\":\"water\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":17}]}];\n\t}\n\t\n\t\n\tfunction aquapro_trx_addons_init(e, container) {\n\t\tif (arguments.length < 2) var container = jQuery('body');\n\t\tif (container===undefined || container.length === undefined || container.length == 0) return;\n\t\tcontainer.find('.sc_countdown_item canvas:not(.inited)').addClass('inited').attr('data-color', AQUAPRO_STORAGE['alter_link_color']);\n\t}\n\n})();"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.350Z",
        "time": 0.16199999663513154,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.14199999714037403,
          "receive": 0.019999999494757503,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 987
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-includes/js/wp-embed.min.js?ver=4.9.22",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [
            {
              "name": "ver",
              "value": "4.9.22"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 15 Apr 2021 04:52:56 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"56f-5bffba301576b-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "739"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1391,
            "mimeType": "application/javascript",
            "text": "!function(c,d){\"use strict\";var e=!1,n=!1;if(d.querySelector)if(c.addEventListener)e=!0;if(c.wp=c.wp||{},!c.wp.receiveEmbedMessage)if(c.wp.receiveEmbedMessage=function(e){var t=e.data;if(t)if(t.secret||t.message||t.value)if(!/[^a-zA-Z0-9]/.test(t.secret)){for(var r,a,i,s=d.querySelectorAll('iframe[data-secret=\"'+t.secret+'\"]'),n=d.querySelectorAll('blockquote[data-secret=\"'+t.secret+'\"]'),o=0;o<n.length;o++)n[o].style.display=\"none\";for(o=0;o<s.length;o++)if(r=s[o],e.source===r.contentWindow){if(r.removeAttribute(\"style\"),\"height\"===t.message){if(1e3<(i=parseInt(t.value,10)))i=1e3;else if(~~i<200)i=200;r.height=i}if(\"link\"===t.message)if(a=d.createElement(\"a\"),i=d.createElement(\"a\"),a.href=r.getAttribute(\"src\"),i.href=t.value,i.host===a.host)if(d.activeElement===r)c.top.location.href=t.value}}},e)c.addEventListener(\"message\",c.wp.receiveEmbedMessage,!1),d.addEventListener(\"DOMContentLoaded\",t,!1),c.addEventListener(\"load\",t,!1);function t(){if(!n){n=!0;for(var e,t,r=-1!==navigator.appVersion.indexOf(\"MSIE 10\"),a=!!navigator.userAgent.match(/Trident.*rv:11\\./),i=d.querySelectorAll(\"iframe.wp-embedded-content\"),s=0;s<i.length;s++){if(!(e=i[s]).getAttribute(\"data-secret\"))t=Math.random().toString(36).substr(2,10),e.src+=\"#?secret=\"+t,e.setAttribute(\"data-secret\",t);if(r||a)(t=e.cloneNode(!0)).removeAttribute(\"security\"),e.parentNode.replaceChild(t,e)}}}}(window,document);"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.351Z",
        "time": 0.21600000036414713,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.137999995786231,
          "receive": 0.07800000457791612,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 988
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/js_composer/assets/js/dist/js_composer_front.min.js?ver=5.4.5",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [
            {
              "name": "ver",
              "value": "5.4.5"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:05:16 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"4d45-5873fa5afbb00-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "5712"
            }
          ],
          "cookies": [],
          "content": {
            "size": 19781,
            "mimeType": "application/javascript",
            "text": "function vc_js(){vc_toggleBehaviour(),vc_tabsBehaviour(),vc_accordionBehaviour(),vc_teaserGrid(),vc_carouselBehaviour(),vc_slidersBehaviour(),vc_prettyPhoto(),vc_googleplus(),vc_pinterest(),vc_progress_bar(),vc_plugin_flexslider(),vc_google_fonts(),vc_gridBehaviour(),vc_rowBehaviour(),vc_prepareHoverBox(),vc_googleMapsPointer(),vc_ttaActivation(),jQuery(document).trigger(\"vc_js\"),window.setTimeout(vc_waypoints,500)}function getSizeName(){var screen_w=jQuery(window).width();return 1170<screen_w?\"desktop_wide\":960<screen_w&&1169>screen_w?\"desktop\":768<screen_w&&959>screen_w?\"tablet\":300<screen_w&&767>screen_w?\"mobile\":300>screen_w?\"mobile_portrait\":\"\"}function loadScript(url,$obj,callback){var script=document.createElement(\"script\");script.type=\"text/javascript\",script.readyState&&(script.onreadystatechange=function(){\"loaded\"!==script.readyState&&\"complete\"!==script.readyState||(script.onreadystatechange=null,callback())}),script.src=url,$obj.get(0).appendChild(script)}function vc_ttaActivation(){jQuery(\"[data-vc-accordion]\").on(\"show.vc.accordion\",function(e){var $=window.jQuery,ui={};ui.newPanel=$(this).data(\"vc.accordion\").getTarget(),window.wpb_prepare_tab_content(e,ui)})}function vc_accordionActivate(event,ui){if(ui.newPanel.length&&ui.newHeader.length){var $pie_charts=ui.newPanel.find(\".vc_pie_chart:not(.vc_ready)\"),$round_charts=ui.newPanel.find(\".vc_round-chart\"),$line_charts=ui.newPanel.find(\".vc_line-chart\"),$carousel=ui.newPanel.find('[data-ride=\"vc_carousel\"]');void 0!==jQuery.fn.isotope&&ui.newPanel.find(\".isotope, .wpb_image_grid_ul\").isotope(\"layout\"),ui.newPanel.find(\".vc_masonry_media_grid, .vc_masonry_grid\").length&&ui.newPanel.find(\".vc_masonry_media_grid, .vc_masonry_grid\").each(function(){var grid=jQuery(this).data(\"vcGrid\");grid&&grid.gridBuilder&&grid.gridBuilder.setMasonry&&grid.gridBuilder.setMasonry()}),vc_carouselBehaviour(ui.newPanel),vc_plugin_flexslider(ui.newPanel),$pie_charts.length&&jQuery.fn.vcChat&&$pie_charts.vcChat(),$round_charts.length&&jQuery.fn.vcRoundChart&&$round_charts.vcRoundChart({reload:!1}),$line_charts.length&&jQuery.fn.vcLineChart&&$line_charts.vcLineChart({reload:!1}),$carousel.length&&jQuery.fn.carousel&&$carousel.carousel(\"resizeAction\"),ui.newPanel.parents(\".isotope\").length&&ui.newPanel.parents(\".isotope\").each(function(){jQuery(this).isotope(\"layout\")})}}function initVideoBackgrounds(){return window.console&&window.console.warn&&window.console.warn(\"this function is deprecated use vc_initVideoBackgrounds\"),vc_initVideoBackgrounds()}function vc_initVideoBackgrounds(){jQuery(\"[data-vc-video-bg]\").each(function(){var youtubeUrl,youtubeId,$element=jQuery(this);$element.data(\"vcVideoBg\")?(youtubeUrl=$element.data(\"vcVideoBg\"),youtubeId=vcExtractYoutubeId(youtubeUrl),youtubeId&&($element.find(\".vc_video-bg\").remove(),insertYoutubeVideoAsBackground($element,youtubeId)),jQuery(window).on(\"grid:items:added\",function(event,$grid){$element.has($grid).length&&vcResizeVideoBackground($element)})):$element.find(\".vc_video-bg\").remove()})}function insertYoutubeVideoAsBackground($element,youtubeId,counter){if(\"undefined\"==typeof YT||void 0===YT.Player)return 100<(counter=void 0===counter?0:counter)?void console.warn(\"Too many attempts to load YouTube api\"):void setTimeout(function(){insertYoutubeVideoAsBackground($element,youtubeId,counter++)},100);var $container=$element.prepend('<div class=\"vc_video-bg vc_hidden-xs\"><div class=\"inner\"></div></div>').find(\".inner\");new YT.Player($container[0],{width:\"100%\",height:\"100%\",videoId:youtubeId,playerVars:{playlist:youtubeId,iv_load_policy:3,enablejsapi:1,disablekb:1,autoplay:1,controls:0,showinfo:0,rel:0,loop:1,wmode:\"transparent\"},events:{onReady:function(event){event.target.mute().setLoop(!0)}}}),vcResizeVideoBackground($element),jQuery(window).bind(\"resize\",function(){vcResizeVideoBackground($element)})}function vcResizeVideoBackground($element){var iframeW,iframeH,marginLeft,marginTop,containerW=$element.innerWidth(),containerH=$element.innerHeight();containerW/containerH<16/9?(iframeW=containerH*(16/9),iframeH=containerH,marginLeft=-Math.round((iframeW-containerW)/2)+\"px\",marginTop=-Math.round((iframeH-containerH)/2)+\"px\",iframeW+=\"px\",iframeH+=\"px\"):(iframeW=containerW,iframeH=containerW*(9/16),marginTop=-Math.round((iframeH-containerH)/2)+\"px\",marginLeft=-Math.round((iframeW-containerW)/2)+\"px\",iframeW+=\"px\",iframeH+=\"px\"),$element.find(\".vc_video-bg iframe\").css({maxWidth:\"1000%\",marginLeft:marginLeft,marginTop:marginTop,width:iframeW,height:iframeH})}function vcExtractYoutubeId(url){if(void 0===url)return!1;var id=url.match(/(?:https?:\\/{2})?(?:w{3}\\.)?youtu(?:be)?\\.(?:com|be)(?:\\/watch\\?v=|\\/)([^\\s&]+)/);return null!==id&&id[1]}function vc_googleMapsPointer(){var $=window.jQuery,$wpbGmapsWidget=$(\".wpb_gmaps_widget\");$wpbGmapsWidget.click(function(){$(\"iframe\",this).css(\"pointer-events\",\"auto\")}),$wpbGmapsWidget.mouseleave(function(){$(\"iframe\",this).css(\"pointer-events\",\"none\")}),$(\".wpb_gmaps_widget iframe\").css(\"pointer-events\",\"none\")}function vc_setHoverBoxPerspective(hoverBox){hoverBox.each(function(){var $this=jQuery(this),width=$this.width(),perspective=4*width+\"px\";$this.css(\"perspective\",perspective)})}function vc_setHoverBoxHeight(hoverBox){hoverBox.each(function(){var $this=jQuery(this),hoverBoxInner=$this.find(\".vc-hoverbox-inner\");hoverBoxInner.css(\"min-height\",0);var frontHeight=$this.find(\".vc-hoverbox-front-inner\").outerHeight(),backHeight=$this.find(\".vc-hoverbox-back-inner\").outerHeight(),hoverBoxHeight=frontHeight>backHeight?frontHeight:backHeight;hoverBoxHeight<250&&(hoverBoxHeight=250),hoverBoxInner.css(\"min-height\",hoverBoxHeight+\"px\")})}function vc_prepareHoverBox(){var hoverBox=jQuery(\".vc-hoverbox\");vc_setHoverBoxHeight(hoverBox),vc_setHoverBoxPerspective(hoverBox)}document.documentElement.className+=\" js_active \",document.documentElement.className+=\"ontouchstart\"in document.documentElement?\" vc_mobile \":\" vc_desktop \",function(){for(var prefix=[\"-webkit-\",\"-moz-\",\"-ms-\",\"-o-\",\"\"],i=0;i<prefix.length;i++)prefix[i]+\"transform\"in document.documentElement.style&&(document.documentElement.className+=\" vc_transform \")}(),\"function\"!=typeof window.vc_plugin_flexslider&&(window.vc_plugin_flexslider=function($parent){($parent?$parent.find(\".wpb_flexslider\"):jQuery(\".wpb_flexslider\")).each(function(){var this_element=jQuery(this),sliderTimeout=1e3*parseInt(this_element.attr(\"data-interval\")),sliderFx=this_element.attr(\"data-flex_fx\"),slideshow=!0;0===sliderTimeout&&(slideshow=!1),this_element.is(\":visible\")&&this_element.flexslider({animation:sliderFx,slideshow:slideshow,slideshowSpeed:sliderTimeout,sliderSpeed:800,smoothHeight:!0})})}),\"function\"!=typeof window.vc_googleplus&&(window.vc_googleplus=function(){0<jQuery(\".wpb_googleplus\").length&&function(){var po=document.createElement(\"script\");po.type=\"text/javascript\",po.async=!0,po.src=\"//apis.google.com/js/plusone.js\";var s=document.getElementsByTagName(\"script\")[0];s.parentNode.insertBefore(po,s)}()}),\"function\"!=typeof window.vc_pinterest&&(window.vc_pinterest=function(){0<jQuery(\".wpb_pinterest\").length&&function(){var po=document.createElement(\"script\");po.type=\"text/javascript\",po.async=!0,po.src=\"//assets.pinterest.com/js/pinit.js\";var s=document.getElementsByTagName(\"script\")[0];s.parentNode.insertBefore(po,s)}()}),\"function\"!=typeof window.vc_progress_bar&&(window.vc_progress_bar=function(){void 0!==jQuery.fn.waypoint&&jQuery(\".vc_progress_bar\").waypoint(function(){jQuery(this).find(\".vc_single_bar\").each(function(index){var $this=jQuery(this),bar=$this.find(\".vc_bar\"),val=bar.data(\"percentage-value\");setTimeout(function(){bar.css({width:val+\"%\"})},200*index)})},{offset:\"85%\"})}),\"function\"!=typeof window.vc_waypoints&&(window.vc_waypoints=function(){void 0!==jQuery.fn.waypoint&&jQuery(\".wpb_animate_when_almost_visible:not(.wpb_start_animation)\").waypoint(function(){jQuery(this).addClass(\"wpb_start_animation animated\")},{offset:\"85%\"})}),\"function\"!=typeof window.vc_toggleBehaviour&&(window.vc_toggleBehaviour=function($el){function event(e){e&&e.preventDefault&&e.preventDefault();var title=jQuery(this),element=title.closest(\".vc_toggle\"),content=element.find(\".vc_toggle_content\");element.hasClass(\"vc_toggle_active\")?content.slideUp({duration:300,complete:function(){element.removeClass(\"vc_toggle_active\")}}):content.slideDown({duration:300,complete:function(){element.addClass(\"vc_toggle_active\")}})}$el?$el.hasClass(\"vc_toggle_title\")?$el.unbind(\"click\").click(event):$el.find(\".vc_toggle_title\").unbind(\"click\").click(event):jQuery(\".vc_toggle_title\").unbind(\"click\").on(\"click\",event)}),\"function\"!=typeof window.vc_tabsBehaviour&&(window.vc_tabsBehaviour=function($tab){if(jQuery.ui){var $call=$tab||jQuery(\".wpb_tabs, .wpb_tour\"),ver=jQuery.ui&&jQuery.ui.version?jQuery.ui.version.split(\".\"):\"1.10\",old_version=1===parseInt(ver[0])&&9>parseInt(ver[1]);$call.each(function(index){var $tabs,interval=jQuery(this).attr(\"data-interval\"),tabs_array=[];if($tabs=jQuery(this).find(\".wpb_tour_tabs_wrapper\").tabs({show:function(event,ui){wpb_prepare_tab_content(event,ui)},beforeActivate:function(event,ui){1!==ui.newPanel.index()&&ui.newPanel.find(\".vc_pie_chart:not(.vc_ready)\")},activate:function(event,ui){wpb_prepare_tab_content(event,ui)}}),interval&&0<interval)try{$tabs.tabs(\"rotate\",1e3*interval)}catch(e){window.console&&window.console.log&&console.log(e)}jQuery(this).find(\".wpb_tab\").each(function(){tabs_array.push(this.id)}),jQuery(this).find(\".wpb_tabs_nav li\").click(function(e){return e.preventDefault(),old_version?$tabs.tabs(\"select\",jQuery(\"a\",this).attr(\"href\")):$tabs.tabs(\"option\",\"active\",jQuery(this).index()),!1}),jQuery(this).find(\".wpb_prev_slide a, .wpb_next_slide a\").click(function(e){if(e.preventDefault(),old_version){var index=$tabs.tabs(\"option\",\"selected\");jQuery(this).parent().hasClass(\"wpb_next_slide\")?index++:index--,0>index?index=$tabs.tabs(\"length\")-1:index>=$tabs.tabs(\"length\")&&(index=0),$tabs.tabs(\"select\",index)}else{var index=$tabs.tabs(\"option\",\"active\"),length=$tabs.find(\".wpb_tab\").length;index=jQuery(this).parent().hasClass(\"wpb_next_slide\")?index+1>=length?0:index+1:0>index-1?length-1:index-1,$tabs.tabs(\"option\",\"active\",index)}})})}}),\"function\"!=typeof window.vc_accordionBehaviour&&(window.vc_accordionBehaviour=function(){jQuery(\".wpb_accordion\").each(function(index){var $tabs,$this=jQuery(this),active_tab=($this.attr(\"data-interval\"),!isNaN(jQuery(this).data(\"active-tab\"))&&0<parseInt($this.data(\"active-tab\"))&&parseInt($this.data(\"active-tab\"))-1),collapsible=!1===active_tab||\"yes\"===$this.data(\"collapsible\");$tabs=$this.find(\".wpb_accordion_wrapper\").accordion({header:\"> div > h3\",autoHeight:!1,heightStyle:\"content\",active:active_tab,collapsible:collapsible,navigation:!0,activate:vc_accordionActivate,change:function(event,ui){void 0!==jQuery.fn.isotope&&ui.newContent.find(\".isotope\").isotope(\"layout\"),vc_carouselBehaviour(ui.newPanel)}}),!0===$this.data(\"vcDisableKeydown\")&&($tabs.data(\"uiAccordion\")._keydown=function(){})})}),\"function\"!=typeof window.vc_teaserGrid&&(window.vc_teaserGrid=function(){var layout_modes={fitrows:\"fitRows\",masonry:\"masonry\"};jQuery(\".wpb_grid .teaser_grid_container:not(.wpb_carousel), .wpb_filtered_grid .teaser_grid_container:not(.wpb_carousel)\").each(function(){var $container=jQuery(this),$thumbs=$container.find(\".wpb_thumbnails\"),layout_mode=$thumbs.attr(\"data-layout-mode\");$thumbs.isotope({itemSelector:\".isotope-item\",layoutMode:void 0===layout_modes[layout_mode]?\"fitRows\":layout_modes[layout_mode]}),$container.find(\".categories_filter a\").data(\"isotope\",$thumbs).click(function(e){e.preventDefault();var $thumbs=jQuery(this).data(\"isotope\");jQuery(this).parent().parent().find(\".active\").removeClass(\"active\"),jQuery(this).parent().addClass(\"active\"),$thumbs.isotope({filter:jQuery(this).attr(\"data-filter\")})}),jQuery(window).bind(\"load resize\",function(){$thumbs.isotope(\"layout\")})})}),\"function\"!=typeof window.vc_carouselBehaviour&&(window.vc_carouselBehaviour=function($parent){($parent?$parent.find(\".wpb_carousel\"):jQuery(\".wpb_carousel\")).each(function(){var $this=jQuery(this);if(!0!==$this.data(\"carousel_enabled\")&&$this.is(\":visible\")){$this.data(\"carousel_enabled\",!0),getColumnsCount(jQuery(this)),jQuery(this).hasClass(\"columns_count_1\");var carousele_li=jQuery(this).find(\".wpb_thumbnails-fluid li\");carousele_li.css({\"margin-right\":carousele_li.css(\"margin-left\"),\"margin-left\":0});var fluid_ul=jQuery(this).find(\"ul.wpb_thumbnails-fluid\");fluid_ul.width(fluid_ul.width()+300),jQuery(window).resize(function(){var before_resize=screen_size;screen_size=getSizeName(),before_resize!=screen_size&&window.setTimeout(\"location.reload()\",20)})}})}),\"function\"!=typeof window.vc_slidersBehaviour&&(window.vc_slidersBehaviour=function(){jQuery(\".wpb_gallery_slides\").each(function(index){var $imagesGrid,this_element=jQuery(this);if(this_element.hasClass(\"wpb_slider_nivo\")){var sliderTimeout=1e3*this_element.attr(\"data-interval\");0===sliderTimeout&&(sliderTimeout=9999999999),this_element.find(\".nivoSlider\").nivoSlider({effect:\"boxRainGrow,boxRain,boxRainReverse,boxRainGrowReverse\",slices:15,boxCols:8,boxRows:4,animSpeed:800,pauseTime:sliderTimeout,startSlide:0,directionNav:!0,directionNavHide:!0,controlNav:!0,keyboardNav:!1,pauseOnHover:!0,manualAdvance:!1,prevText:\"Prev\",nextText:\"Next\"})}else this_element.hasClass(\"wpb_image_grid\")&&(jQuery.fn.imagesLoaded?$imagesGrid=this_element.find(\".wpb_image_grid_ul\").imagesLoaded(function(){$imagesGrid.isotope({itemSelector:\".isotope-item\",layoutMode:\"fitRows\"})}):this_element.find(\".wpb_image_grid_ul\").isotope({itemSelector:\".isotope-item\",layoutMode:\"fitRows\"}))})}),\"function\"!=typeof window.vc_prettyPhoto&&(window.vc_prettyPhoto=function(){try{jQuery&&jQuery.fn&&jQuery.fn.prettyPhoto&&jQuery('a.prettyphoto, .gallery-icon a[href*=\".jpg\"]').prettyPhoto({animationSpeed:\"normal\",hook:\"data-rel\",padding:15,opacity:.7,showTitle:!0,allowresize:!0,counter_separator_label:\"/\",hideflash:!1,deeplinking:!1,modal:!1,callback:function(){location.href.indexOf(\"#!prettyPhoto\")>-1&&(location.hash=\"\")},social_tools:\"\"})}catch(err){window.console&&window.console.log&&console.log(err)}}),\"function\"!=typeof window.vc_google_fonts&&(window.vc_google_fonts=function(){return!1}),window.vcParallaxSkroll=!1,\"function\"!=typeof window.vc_rowBehaviour&&(window.vc_rowBehaviour=function(){function fullWidthRow(){var $elements=$('[data-vc-full-width=\"true\"]');$.each($elements,function(key,item){var $el=$(this);$el.addClass(\"vc_hidden\");var $el_full=$el.next(\".vc_row-full-width\");if($el_full.length||($el_full=$el.parent().next(\".vc_row-full-width\")),$el_full.length){var el_margin_left=parseInt($el.css(\"margin-left\"),10),el_margin_right=parseInt($el.css(\"margin-right\"),10),offset=0-$el_full.offset().left-el_margin_left,width=$(window).width();if($el.css({position:\"relative\",left:offset,\"box-sizing\":\"border-box\",width:$(window).width()}),!$el.data(\"vcStretchContent\")){var padding=-1*offset;0>padding&&(padding=0);var paddingRight=width-padding-$el_full.width()+el_margin_left+el_margin_right;0>paddingRight&&(paddingRight=0),$el.css({\"padding-left\":padding+\"px\",\"padding-right\":paddingRight+\"px\"})}$el.attr(\"data-vc-full-width-init\",\"true\"),$el.removeClass(\"vc_hidden\"),$(document).trigger(\"vc-full-width-row-single\",{el:$el,offset:offset,marginLeft:el_margin_left,marginRight:el_margin_right,elFull:$el_full,width:width})}}),$(document).trigger(\"vc-full-width-row\",$elements)}function fullHeightRow(){var $element=$(\".vc_row-o-full-height:first\");if($element.length){var $window,windowHeight,offsetTop,fullHeight;$window=$(window),windowHeight=$window.height(),offsetTop=$element.offset().top,offsetTop<windowHeight&&(fullHeight=100-offsetTop/(windowHeight/100),$element.css(\"min-height\",fullHeight+\"vh\"))}$(document).trigger(\"vc-full-height-row\",$element)}var $=window.jQuery;$(window).off(\"resize.vcRowBehaviour\").on(\"resize.vcRowBehaviour\",fullWidthRow).on(\"resize.vcRowBehaviour\",fullHeightRow),fullWidthRow(),fullHeightRow(),function(){(window.navigator.userAgent.indexOf(\"MSIE \")>0||navigator.userAgent.match(/Trident.*rv\\:11\\./))&&$(\".vc_row-o-full-height\").each(function(){\"flex\"===$(this).css(\"display\")&&$(this).wrap('<div class=\"vc_ie-flexbox-fixer\"></div>')})}(),vc_initVideoBackgrounds(),function(){var vcSkrollrOptions,callSkrollInit=!1;window.vcParallaxSkroll&&window.vcParallaxSkroll.destroy(),$(\".vc_parallax-inner\").remove(),$(\"[data-5p-top-bottom]\").removeAttr(\"data-5p-top-bottom data-30p-top-bottom\"),$(\"[data-vc-parallax]\").each(function(){var skrollrSpeed,skrollrSize,skrollrStart,skrollrEnd,$parallaxElement,parallaxImage,youtubeId;callSkrollInit=!0,\"on\"===$(this).data(\"vcParallaxOFade\")&&$(this).children().attr(\"data-5p-top-bottom\",\"opacity:0;\").attr(\"data-30p-top-bottom\",\"opacity:1;\"),skrollrSize=100*$(this).data(\"vcParallax\"),$parallaxElement=$(\"<div />\").addClass(\"vc_parallax-inner\").appendTo($(this)),$parallaxElement.height(skrollrSize+\"%\"),parallaxImage=$(this).data(\"vcParallaxImage\"),youtubeId=vcExtractYoutubeId(parallaxImage),youtubeId?insertYoutubeVideoAsBackground($parallaxElement,youtubeId):void 0!==parallaxImage&&$parallaxElement.css(\"background-image\",\"url(\"+parallaxImage+\")\"),skrollrSpeed=skrollrSize-100,skrollrStart=-skrollrSpeed,skrollrEnd=0,$parallaxElement.attr(\"data-bottom-top\",\"top: \"+skrollrStart+\"%;\").attr(\"data-top-bottom\",\"top: \"+skrollrEnd+\"%;\")}),!(!callSkrollInit||!window.skrollr)&&(vcSkrollrOptions={forceHeight:!1,smoothScrolling:!1,mobileCheck:function(){return!1}},window.vcParallaxSkroll=skrollr.init(vcSkrollrOptions),window.vcParallaxSkroll)}()}),\"function\"!=typeof window.vc_gridBehaviour&&(window.vc_gridBehaviour=function(){jQuery.fn.vcGrid&&jQuery(\"[data-vc-grid]\").vcGrid()}),\"function\"!=typeof window.getColumnsCount&&(window.getColumnsCount=function(el){for(var find=!1,i=1;!1===find;){if(el.hasClass(\"columns_count_\"+i))return find=!0,i;i++}});var screen_size=getSizeName();\"function\"!=typeof window.wpb_prepare_tab_content&&(window.wpb_prepare_tab_content=function(event,ui){var $ui_panel,$google_maps,panel=ui.panel||ui.newPanel,$pie_charts=panel.find(\".vc_pie_chart:not(.vc_ready)\"),$round_charts=panel.find(\".vc_round-chart\"),$line_charts=panel.find(\".vc_line-chart\"),$carousel=panel.find('[data-ride=\"vc_carousel\"]');if(vc_carouselBehaviour(),vc_plugin_flexslider(panel),ui.newPanel.find(\".vc_masonry_media_grid, .vc_masonry_grid\").length&&ui.newPanel.find(\".vc_masonry_media_grid, .vc_masonry_grid\").each(function(){var grid=jQuery(this).data(\"vcGrid\");grid&&grid.gridBuilder&&grid.gridBuilder.setMasonry&&grid.gridBuilder.setMasonry()}),panel.find(\".vc_masonry_media_grid, .vc_masonry_grid\").length&&panel.find(\".vc_masonry_media_grid, .vc_masonry_grid\").each(function(){var grid=jQuery(this).data(\"vcGrid\");grid&&grid.gridBuilder&&grid.gridBuilder.setMasonry&&grid.gridBuilder.setMasonry()}),$pie_charts.length&&jQuery.fn.vcChat&&$pie_charts.vcChat(),$round_charts.length&&jQuery.fn.vcRoundChart&&$round_charts.vcRoundChart({reload:!1}),$line_charts.length&&jQuery.fn.vcLineChart&&$line_charts.vcLineChart({reload:!1}),$carousel.length&&jQuery.fn.carousel&&$carousel.carousel(\"resizeAction\"),$ui_panel=panel.find(\".isotope, .wpb_image_grid_ul\"),$google_maps=panel.find(\".wpb_gmaps_widget\"),0<$ui_panel.length&&$ui_panel.isotope(\"layout\"),$google_maps.length&&!$google_maps.is(\".map_ready\")){var $frame=$google_maps.find(\"iframe\");$frame.attr(\"src\",$frame.attr(\"src\")),$google_maps.addClass(\"map_ready\")}panel.parents(\".isotope\").length&&panel.parents(\".isotope\").each(function(){jQuery(this).isotope(\"layout\")})}),window.vc_googleMapsPointer,jQuery(document).ready(vc_prepareHoverBox),jQuery(window).resize(vc_prepareHoverBox),jQuery(document).ready(function($){window.vc_js()});"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.351Z",
        "time": 0.2720000047702342,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.2520000052754767,
          "receive": 0.019999999494757503,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 989
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/cpt/layouts/shortcodes/logo/logo.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:09 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"15c-5873f96f6cf40-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "254"
            }
          ],
          "cookies": [],
          "content": {
            "size": 348,
            "mimeType": "application/javascript",
            "text": "/* global jQuery:false */\n\njQuery(document).on('action.ready_trx_addons', function() {\n\n\t\"use strict\";\n\t\n\t// Click on the logo on home page - scroll to top action\n\tjQuery('.sc_layouts_logo').on('click', function(e){\n\t\tif (jQuery(this).attr('href') == '#') {\n\t\t\ttrx_addons_document_animate_to(0);\n\t\t\te.preventDefault();\n\t\t\treturn false;\n\t\t}\n\t});\n});"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.351Z",
        "time": 0.25999999343184754,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.21399999968707561,
          "receive": 0.04599999374477193,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 990
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/cpt/layouts/shortcodes/menu/menu.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:09 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"157e-5873f96f6cf40-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "1683"
            }
          ],
          "cookies": [],
          "content": {
            "size": 5502,
            "mimeType": "application/javascript",
            "text": "/* global jQuery:false */\n\n(function() {\n\t\"use strict\";\n\n\tjQuery(document).on('action.ready_trx_addons', function() {\n\t\t// Init Superfish menu - global declaration to use in other scripts\n\t\twindow.trx_addons_init_sfmenu = function(selector) {\n\t\t\tjQuery(selector).show().each(function() {\n\t\t\t\tvar animation_in = jQuery(this).parent().data('animation-in');\n\t\t\t\tif (animation_in == undefined) animation_in = \"none\";\n\t\t\t\tvar animation_out = jQuery(this).parent().data('animation-out');\n\t\t\t\tif (animation_out == undefined) animation_out = \"none\";\n\t\t\t\tjQuery(this).addClass('inited').superfish({\n\t\t\t\t\tdelay: 500,\n\t\t\t\t\tanimation: {\n\t\t\t\t\t\topacity: 'show'\n\t\t\t\t\t},\n\t\t\t\t\tanimationOut: {\n\t\t\t\t\t\topacity: 'hide'\n\t\t\t\t\t},\n\t\t\t\t\tspeed: \t\tanimation_in!='none' ? 500 : 200,\n\t\t\t\t\tspeedOut:\tanimation_out!='none' ? 500 : 200,\n\t\t\t\t\tautoArrows: false,\n\t\t\t\t\tdropShadows: false,\n\t\t\t\t\tonBeforeShow: function(ul) {\n\t\t\t\t\t\tif (jQuery(this).parents(\"ul\").length > 1){\n\t\t\t\t\t\t\tvar w = jQuery(window).width();  \n\t\t\t\t\t\t\tvar par_offset = jQuery(this).parents(\"ul\").offset().left;\n\t\t\t\t\t\t\tvar par_width  = jQuery(this).parents(\"ul\").outerWidth();\n\t\t\t\t\t\t\tvar ul_width   = jQuery(this).outerWidth();\n\t\t\t\t\t\t\tif (par_offset+par_width+ul_width > w-20 && par_offset-ul_width > 0)\n\t\t\t\t\t\t\t\tjQuery(this).addClass('submenu_left');\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tjQuery(this).removeClass('submenu_left');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (jQuery(this).parents('[class*=\"columns-\"]').length == 0 && animation_in!='none') {\n\t\t\t\t\t\t\tjQuery(this).removeClass('animated fast '+animation_out);\n\t\t\t\t\t\t\tjQuery(this).addClass('animated fast '+animation_in);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonBeforeHide: function(ul) {\n\t\t\t\t\t\tif (jQuery(this).parents('[class*=\"columns-\"]').length == 0 && animation_out!='none') {\n\t\t\t\t\t\t\tjQuery(this).removeClass('animated fast '+animation_in);\n\t\t\t\t\t\t\tjQuery(this).addClass('animated fast '+animation_out);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\n\t\t// Init superfish menus\n\t\ttrx_addons_init_sfmenu('.sc_layouts_menu:not(.inited) > ul:not(.inited)');\n\t\n\t\t// Check if menu need collapse (before menu showed)\n\t\ttrx_addons_menu_collapse();\n\n\t\t// Show menu\t\t\n\t\tjQuery('.sc_layouts_menu:not(.inited)').each(function() {\n\t\t\tif (jQuery(this).find('>ul.inited').length == 1) jQuery(this).addClass('inited');\n\t\t});\n\t\n\t\t// Slide effect for menu\n\t\tjQuery('.menu_hover_slide_line:not(.slide_inited),.menu_hover_slide_box:not(.slide_inited)').each(function() {\n\t\t\tvar menu = jQuery(this).addClass('slide_inited');\n\t\t\tvar style = menu.hasClass('menu_hover_slide_line') ? 'line' : 'box';\n\t\t\tsetTimeout(function() {\n\t\t\t\tmenu.find('>ul').spasticNav({\n\t\t\t\t\tstyle: style,\n\t\t\t\t\t//color: '',\n\t\t\t\t\tcolorOverride: false\n\t\t\t\t});\n\t\t\t}, 500);\n\t\t});\n\t\n\t\t// Burger with popup\n\t\tjQuery('.sc_layouts_menu_mobile_button_burger:not(.inited)').each(function() {\n\t\t\tvar burger = jQuery(this);\n\t\t\tvar popup = burger.find('.sc_layouts_menu_popup');\n\t\t\tif (popup.length == 1) {\n\t\t\t\tburger.addClass('inited').on('click', '>a', function(e) {\n\t\t\t\t\tpopup.toggleClass('opened').slideToggle();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\tjQuery(document).on('click', function(e) {\n\t\t\t\t\tjQuery('.sc_layouts_menu_popup.opened').removeClass('opened').slideUp();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\n\t});\n\t\n\n\t// Collapse menu on resize\n\tjQuery(document).on('action.resize_trx_addons', function() {\n\t\ttrx_addons_menu_collapse();\n\t});\n\t\n\t// Collapse menu items\n\tfunction trx_addons_menu_collapse() {\n\t\tjQuery('.sc_layouts_menu').each(function() {\n\t\t\tvar ul = jQuery(this).find('>ul.inited');\n\t\t\tif (ul.length == 0) return;\n\t\t\tvar w_max = ul.parents('.wpb_wrapper').width();\n\t\t\tvar w_all = 0;\n\t\t\tvar move = false;\n\t\t\tvar li_collapse = ul.find('li.menu-item.menu-collapse');\n\t\t\tif (li_collapse.length==0) {\n\t\t\t\tul.append('<li class=\"menu-item menu-collapse\"><a href=\"#\" class=\"sf-with-ul trx_addons_icon-dot3\"></a><ul class=\"submenu\"></ul></li>');\n\t\t\t\tli_collapse = ul.find('li.menu-item.menu-collapse');\n\t\t\t}\n\t\t\tvar li_collapse_ul = li_collapse.find('> ul');\n\t\t\t// Check if need to move items\n\t\t\tul.find('> li').each(function(idx) {\n\t\t\t\tvar cur_item = jQuery(this);\n\t\t\t\tcur_item.data('index', idx);\n\t\t\t\tif (move) return;\n\t\t\t\tw_all += !cur_item.hasClass('menu-collapse') || cur_item.css('display')!='none' ? cur_item.outerWidth() : 0;\n\t\t\t\tif (w_all > w_max) move = true;\n\t\t\t});\n\t\t\t// If need to move items to the collapsed item\n\t\t\tif (move) {\n\t\t\t\tw_all = li_collapse.outerWidth();\n\t\t\t\tul.find(\"> li:not('.menu-collapse')\").each(function(idx) {\n\t\t\t\t\tvar cur_item = jQuery(this);\n\t\t\t\t\tvar cur_width = cur_item.outerWidth();\n\t\t\t\t\tif (w_all <= w_max) w_all += cur_width;\n\t\t\t\t\tif (w_all > w_max) {\n\t\t\t\t\t\tvar moved = false;\n\t\t\t\t\t\tli_collapse_ul.find('>li').each(function() {\n\t\t\t\t\t\t\tif (!moved && Number(jQuery(this).data('index')) > idx) {\n\t\t\t\t\t\t\t\tcur_item.attr('data-width', cur_width).insertBefore(jQuery(this));\n\t\t\t\t\t\t\t\tmoved = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!moved) cur_item.attr('data-width', cur_width).appendTo(li_collapse_ul);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tli_collapse.show();\n\t\t\t\t\n\t\t\t// Else - move items to the menu again\n\t\t\t} else {\n\t\t\t\tvar items = li_collapse_ul.find('>li');\n\t\t\t\tvar cnt = 0;\n\t\t\t\tmove = true;\n\t\t\t\tw_all += 20; \t// Leave 20px empty\n\t\t\t\titems.each(function() {\n\t\t\t\t\tif (!move) return;\n\t\t\t\t\tif (items.length - cnt == 1)\n\t\t\t\t\t\tw_all -= li_collapse.outerWidth();\n\t\t\t\t\tw_all += parseFloat(jQuery(this).data('width'));\n\t\t\t\t\tif (w_all < w_max) {\n\t\t\t\t\t\tjQuery(this).insertBefore(li_collapse);\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t} else\n\t\t\t\t\t\tmove = false;\n\t\t\t\t});\n\t\t\t\tif (items.length - cnt == 0) li_collapse.hide();\n\t\t\t}\n\t\t});\n\t}\n\n})();"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.352Z",
        "time": 0.7690000056754798,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.7470000055036508,
          "receive": 0.022000000171829015,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 991
        },
        "_priority": "Medium",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/trx_addons/cpt/layouts/shortcodes/search/search.js",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:09 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "ETag",
              "value": "\"c7c-5873f96f6cf40-gzip\""
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Length",
              "value": "963"
            }
          ],
          "cookies": [],
          "content": {
            "size": 3196,
            "mimeType": "application/javascript",
            "text": "/* global jQuery:false */\n/* global TRX_ADDONS_STORAGE:false */\n\njQuery(document).on('action.ready_trx_addons', function() {\n\t\"use strict\";\n\n\tif (jQuery('.search_wrap:not(.inited)').length > 0) {\n\t\tjQuery('.search_wrap:not(.inited)').each(function() {\n\t\t\tvar search_wrap = jQuery(this).addClass('inited');\n\t\t\tvar search_field = search_wrap.find('.search_field');\n\t\t\tvar ajax_timer = null;\n\t\t\tsearch_field.on('keyup', function(e) {\n\t\t\t\t// ESC is pressed\n\t\t\t\tif (e.keyCode == 27) {\n\t\t\t\t\tsearch_field.val('');\n\t\t\t\t\ttrx_addons_search_close(search_wrap);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// AJAX search\n\t\t\t\tif (search_wrap.hasClass('search_ajax')) {\n\t\t\t\t\tvar s = search_field.val();\n\t\t\t\t\tif (ajax_timer) {\n\t\t\t\t\t\tclearTimeout(ajax_timer);\n\t\t\t\t\t\tajax_timer = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (s.length >= 4) {\n\t\t\t\t\t\tajax_timer = setTimeout(function() {\n\t\t\t\t\t\t\tjQuery.post(TRX_ADDONS_STORAGE['ajax_url'], {\n\t\t\t\t\t\t\t\taction: 'ajax_search',\n\t\t\t\t\t\t\t\tnonce: TRX_ADDONS_STORAGE['ajax_nonce'],\n\t\t\t\t\t\t\t\ttext: s\n\t\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\t\tclearTimeout(ajax_timer);\n\t\t\t\t\t\t\t\tajax_timer = null;\n\t\t\t\t\t\t\t\tvar rez = {};\n\t\t\t\t\t\t\t\tif (response=='' || response==0) {\n\t\t\t\t\t\t\t\t\trez = { error: TRX_ADDONS_STORAGE['msg_search_error'] };\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\trez = JSON.parse(response);\n\t\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t\trez = { error: TRX_ADDONS_STORAGE['msg_search_error'] };\n\t\t\t\t\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar msg = rez.error === '' ? rez.data : rez.error;\n\t\t\t\t\t\t\t\tsearch_field.parents('.search_ajax').find('.search_results_content').empty().append(msg);\n\t\t\t\t\t\t\t\tsearch_field.parents('.search_ajax').find('.search_results').fadeIn();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t// Click \"Search submit\"\n\t\t\tsearch_wrap.find('.search_submit').on('click', function(e) {\n\t\t\t\tif ((search_wrap.hasClass('search_style_expand') || search_wrap.hasClass('search_style_fullscreen')) && !search_wrap.hasClass('search_opened')) {\n\t\t\t\t\tsearch_wrap.addClass('search_opened');\n\t\t\t\t\tsetTimeout(function() { search_field.get(0).focus(); }, 500);\n\t\t\t\t} else if (search_field.val() == '') {\n\t\t\t\t\tif (search_wrap.hasClass('search_opened'))\n\t\t\t\t\t\ttrx_addons_search_close(search_wrap);\n\t\t\t\t\telse\n\t\t\t\t\t\tsearch_field.get(0).focus();\n\t\t\t\t} else {\n\t\t\t\t\tsearch_wrap.find('form').get(0).submit();\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\t// Click \"Search close\"\n\t\t\tsearch_wrap.find('.search_close').on('click', function(e) {\n\t\t\t\ttrx_addons_search_close(search_wrap);\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\t// Click \"Close search results\"\n\t\t\tsearch_wrap.find('.search_results_close').on('click', function(e) {\n\t\t\t\tjQuery(this).parent().fadeOut();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\t// Click \"More results\"\n\t\t\tsearch_wrap.on('click', '.search_more', function(e) {\n\t\t\t\tif (search_field.val() != '')\n\t\t\t\t\tsearch_wrap.find('form').get(0).submit();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t});\n\t\t});\n\t}\n\t\n\t// Close search field (remove class 'search_opened' and close search results)\n\tfunction trx_addons_search_close(search_wrap) {\n\t\tsearch_wrap.removeClass('search_opened');\n\t\tsearch_wrap.find('.search_results').fadeOut();\n\t}\n\n});"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.353Z",
        "time": 1.4919999957783148,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 1.410999997460749,
          "receive": 0.08099999831756577,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "c",
                "scriptId": "420",
                "url": "https://exactspace.co/",
                "lineNumber": 15,
                "columnNumber": 429
              },
              {
                "functionName": "",
                "scriptId": "420",
                "url": "https://exactspace.co/",
                "lineNumber": 15,
                "columnNumber": 1636
              },
              {
                "functionName": "",
                "scriptId": "420",
                "url": "https://exactspace.co/",
                "lineNumber": 15,
                "columnNumber": 1704
              }
            ]
          }
        },
        "_priority": "Low",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-includes/js/wp-emoji-release.min.js?ver=4.9.22",
          "httpVersion": "HTTP/1.1",
          "headers": [],
          "queryString": [
            {
              "name": "ver",
              "value": "4.9.22"
            }
          ],
          "cookies": [],
          "headersSize": 65,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Content-Length",
              "value": "4347"
            },
            {
              "name": "Content-Type",
              "value": "application/javascript"
            },
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "ETag",
              "value": "\"2ea7-5bffba301670b-gzip\""
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 15 Apr 2021 04:52:56 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "cookies": [],
          "content": {
            "size": 11943,
            "mimeType": "application/javascript",
            "text": "// Source: wp-includes/js/twemoji.min.js\nvar twemoji=function(){\"use strict\";var f={base:\"https://twemoji.maxcdn.com/2/\",ext:\".png\",size:\"72x72\",className:\"emoji\",convert:{fromCodePoint:function(d){d=\"string\"==typeof d?parseInt(d,16):d;if(d<65536)return a(d);return a(55296+((d-=65536)>>10),56320+(1023&d))},toCodePoint:i},onerror:function(){this.parentNode&&this.parentNode.replaceChild(g(this.alt,!1),this)},parse:function(d,u){u&&\"function\"!=typeof u||(u={callback:u});return(\"string\"==typeof d?function(d,t){return o(d,function(d){var u,f,e=d,c=x(d),a=t.callback(c,t);if(a){for(f in e=\"<img \".concat('class=\"',t.className,'\" ','draggable=\"false\" ','alt=\"',d,'\"',' src=\"',a,'\"'),u=t.attributes(d,c))u.hasOwnProperty(f)&&0!==f.indexOf(\"on\")&&-1===e.indexOf(\" \"+f+\"=\")&&(e=e.concat(\" \",f,'=\"',u[f].replace(n,r),'\"'));e=e.concat(\"/>\")}return e})}:function(d,u){var f,e,c,a,t,n,r,b,o,i,s,l=function d(u,f){var e,c,a=u.childNodes,t=a.length;for(;t--;)e=a[t],3===(c=e.nodeType)?f.push(e):1!==c||\"ownerSVGElement\"in e||h.test(e.nodeName.toLowerCase())||d(e,f);return f}(d,[]),p=l.length;for(;p--;){for(c=!1,a=document.createDocumentFragment(),t=l[p],n=t.nodeValue,r=0;i=m.exec(n);){if((s=i.index)!==r&&a.appendChild(g(n.slice(r,s),!0)),o=i[0],i=x(o),r=s+o.length,s=u.callback(i,u)){for(e in(b=new Image).onerror=u.onerror,b.setAttribute(\"draggable\",\"false\"),f=u.attributes(o,i))f.hasOwnProperty(e)&&0!==e.indexOf(\"on\")&&!b.hasAttribute(e)&&b.setAttribute(e,f[e]);b.className=u.className,b.alt=o,b.src=s,c=!0,a.appendChild(b)}b||a.appendChild(g(o,!1)),b=null}c&&(r<n.length&&a.appendChild(g(n.slice(r),!0)),t.parentNode.replaceChild(a,t))}return d})(d,{callback:u.callback||t,attributes:\"function\"==typeof u.attributes?u.attributes:b,base:(\"string\"==typeof u.base?u:f).base,ext:u.ext||f.ext,size:u.folder||function(d){return\"number\"==typeof d?d+\"x\"+d:d}(u.size||f.size),className:u.className||f.className,onerror:u.onerror||f.onerror})},replace:o,test:function(d){m.lastIndex=0;d=m.test(d);return m.lastIndex=0,d}},u={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",\"'\":\"&#39;\",'\"':\"&quot;\"},m=/(?:\\ud83d[\\udc68\\udc69])(?:\\ud83c[\\udffb-\\udfff])?\\u200d(?:\\u2695\\ufe0f|\\u2696\\ufe0f|\\u2708\\ufe0f|\\ud83c[\\udf3e\\udf73\\udf93\\udfa4\\udfa8\\udfeb\\udfed]|\\ud83d[\\udcbb\\udcbc\\udd27\\udd2c\\ude80\\ude92]|\\ud83e[\\uddb0-\\uddb3])|(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75]|\\u26f9)((?:\\ud83c[\\udffb-\\udfff]|\\ufe0f)\\u200d[\\u2640\\u2642]\\ufe0f)|(?:\\ud83c[\\udfc3\\udfc4\\udfca]|\\ud83d[\\udc6e\\udc71\\udc73\\udc77\\udc81\\udc82\\udc86\\udc87\\ude45-\\ude47\\ude4b\\ude4d\\ude4e\\udea3\\udeb4-\\udeb6]|\\ud83e[\\udd26\\udd35\\udd37-\\udd39\\udd3d\\udd3e\\uddb8\\uddb9\\uddd6-\\udddd])(?:\\ud83c[\\udffb-\\udfff])?\\u200d[\\u2640\\u2642]\\ufe0f|(?:\\ud83d\\udc68\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc8b\\u200d\\ud83d[\\udc68\\udc69]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc68|\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\u2764\\ufe0f\\u200d\\ud83d[\\udc68\\udc69]|\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83c\\udff3\\ufe0f\\u200d\\ud83c\\udf08|\\ud83c\\udff4\\u200d\\u2620\\ufe0f|\\ud83d\\udc41\\u200d\\ud83d\\udde8|\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc6f\\u200d\\u2640\\ufe0f|\\ud83d\\udc6f\\u200d\\u2642\\ufe0f|\\ud83e\\udd3c\\u200d\\u2640\\ufe0f|\\ud83e\\udd3c\\u200d\\u2642\\ufe0f|\\ud83e\\uddde\\u200d\\u2640\\ufe0f|\\ud83e\\uddde\\u200d\\u2642\\ufe0f|\\ud83e\\udddf\\u200d\\u2640\\ufe0f|\\ud83e\\udddf\\u200d\\u2642\\ufe0f)|[\\u0023\\u002a\\u0030-\\u0039]\\ufe0f?\\u20e3|(?:[\\u00a9\\u00ae\\u2122\\u265f]\\ufe0f)|(?:\\ud83c[\\udc04\\udd70\\udd71\\udd7e\\udd7f\\ude02\\ude1a\\ude2f\\ude37\\udf21\\udf24-\\udf2c\\udf36\\udf7d\\udf96\\udf97\\udf99-\\udf9b\\udf9e\\udf9f\\udfcd\\udfce\\udfd4-\\udfdf\\udff3\\udff5\\udff7]|\\ud83d[\\udc3f\\udc41\\udcfd\\udd49\\udd4a\\udd6f\\udd70\\udd73\\udd76-\\udd79\\udd87\\udd8a-\\udd8d\\udda5\\udda8\\uddb1\\uddb2\\uddbc\\uddc2-\\uddc4\\uddd1-\\uddd3\\udddc-\\uddde\\udde1\\udde3\\udde8\\uddef\\uddf3\\uddfa\\udecb\\udecd-\\udecf\\udee0-\\udee5\\udee9\\udef0\\udef3]|[\\u203c\\u2049\\u2139\\u2194-\\u2199\\u21a9\\u21aa\\u231a\\u231b\\u2328\\u23cf\\u23ed-\\u23ef\\u23f1\\u23f2\\u23f8-\\u23fa\\u24c2\\u25aa\\u25ab\\u25b6\\u25c0\\u25fb-\\u25fe\\u2600-\\u2604\\u260e\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262a\\u262e\\u262f\\u2638-\\u263a\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267b\\u267f\\u2692-\\u2697\\u2699\\u269b\\u269c\\u26a0\\u26a1\\u26aa\\u26ab\\u26b0\\u26b1\\u26bd\\u26be\\u26c4\\u26c5\\u26c8\\u26cf\\u26d1\\u26d3\\u26d4\\u26e9\\u26ea\\u26f0-\\u26f5\\u26f8\\u26fa\\u26fd\\u2702\\u2708\\u2709\\u270f\\u2712\\u2714\\u2716\\u271d\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u2764\\u27a1\\u2934\\u2935\\u2b05-\\u2b07\\u2b1b\\u2b1c\\u2b50\\u2b55\\u3030\\u303d\\u3297\\u3299])(?:\\ufe0f|(?!\\ufe0e))|(?:(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75\\udd90]|[\\u261d\\u26f7\\u26f9\\u270c\\u270d])(?:\\ufe0f|(?!\\ufe0e))|(?:\\ud83c[\\udf85\\udfc2-\\udfc4\\udfc7\\udfca]|\\ud83d[\\udc42\\udc43\\udc46-\\udc50\\udc66-\\udc69\\udc6e\\udc70-\\udc78\\udc7c\\udc81-\\udc83\\udc85-\\udc87\\udcaa\\udd7a\\udd95\\udd96\\ude45-\\ude47\\ude4b-\\ude4f\\udea3\\udeb4-\\udeb6\\udec0\\udecc]|\\ud83e[\\udd18-\\udd1c\\udd1e\\udd1f\\udd26\\udd30-\\udd39\\udd3d\\udd3e\\uddb5\\uddb6\\uddb8\\uddb9\\uddd1-\\udddd]|[\\u270a\\u270b]))(?:\\ud83c[\\udffb-\\udfff])?|(?:\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc65\\udb40\\udc6e\\udb40\\udc67\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc73\\udb40\\udc63\\udb40\\udc74\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc77\\udb40\\udc6c\\udb40\\udc73\\udb40\\udc7f|\\ud83c\\udde6\\ud83c[\\udde8-\\uddec\\uddee\\uddf1\\uddf2\\uddf4\\uddf6-\\uddfa\\uddfc\\uddfd\\uddff]|\\ud83c\\udde7\\ud83c[\\udde6\\udde7\\udde9-\\uddef\\uddf1-\\uddf4\\uddf6-\\uddf9\\uddfb\\uddfc\\uddfe\\uddff]|\\ud83c\\udde8\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\uddee\\uddf0-\\uddf5\\uddf7\\uddfa-\\uddff]|\\ud83c\\udde9\\ud83c[\\uddea\\uddec\\uddef\\uddf0\\uddf2\\uddf4\\uddff]|\\ud83c\\uddea\\ud83c[\\udde6\\udde8\\uddea\\uddec\\udded\\uddf7-\\uddfa]|\\ud83c\\uddeb\\ud83c[\\uddee-\\uddf0\\uddf2\\uddf4\\uddf7]|\\ud83c\\uddec\\ud83c[\\udde6\\udde7\\udde9-\\uddee\\uddf1-\\uddf3\\uddf5-\\uddfa\\uddfc\\uddfe]|\\ud83c\\udded\\ud83c[\\uddf0\\uddf2\\uddf3\\uddf7\\uddf9\\uddfa]|\\ud83c\\uddee\\ud83c[\\udde8-\\uddea\\uddf1-\\uddf4\\uddf6-\\uddf9]|\\ud83c\\uddef\\ud83c[\\uddea\\uddf2\\uddf4\\uddf5]|\\ud83c\\uddf0\\ud83c[\\uddea\\uddec-\\uddee\\uddf2\\uddf3\\uddf5\\uddf7\\uddfc\\uddfe\\uddff]|\\ud83c\\uddf1\\ud83c[\\udde6-\\udde8\\uddee\\uddf0\\uddf7-\\uddfb\\uddfe]|\\ud83c\\uddf2\\ud83c[\\udde6\\udde8-\\udded\\uddf0-\\uddff]|\\ud83c\\uddf3\\ud83c[\\udde6\\udde8\\uddea-\\uddec\\uddee\\uddf1\\uddf4\\uddf5\\uddf7\\uddfa\\uddff]|\\ud83c\\uddf4\\ud83c\\uddf2|\\ud83c\\uddf5\\ud83c[\\udde6\\uddea-\\udded\\uddf0-\\uddf3\\uddf7-\\uddf9\\uddfc\\uddfe]|\\ud83c\\uddf6\\ud83c\\udde6|\\ud83c\\uddf7\\ud83c[\\uddea\\uddf4\\uddf8\\uddfa\\uddfc]|\\ud83c\\uddf8\\ud83c[\\udde6-\\uddea\\uddec-\\uddf4\\uddf7-\\uddf9\\uddfb\\uddfd-\\uddff]|\\ud83c\\uddf9\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\udded\\uddef-\\uddf4\\uddf7\\uddf9\\uddfb\\uddfc\\uddff]|\\ud83c\\uddfa\\ud83c[\\udde6\\uddec\\uddf2\\uddf3\\uddf8\\uddfe\\uddff]|\\ud83c\\uddfb\\ud83c[\\udde6\\udde8\\uddea\\uddec\\uddee\\uddf3\\uddfa]|\\ud83c\\uddfc\\ud83c[\\uddeb\\uddf8]|\\ud83c\\uddfd\\ud83c\\uddf0|\\ud83c\\uddfe\\ud83c[\\uddea\\uddf9]|\\ud83c\\uddff\\ud83c[\\udde6\\uddf2\\uddfc]|\\ud83c[\\udccf\\udd8e\\udd91-\\udd9a\\udde6-\\uddff\\ude01\\ude32-\\ude36\\ude38-\\ude3a\\ude50\\ude51\\udf00-\\udf20\\udf2d-\\udf35\\udf37-\\udf7c\\udf7e-\\udf84\\udf86-\\udf93\\udfa0-\\udfc1\\udfc5\\udfc6\\udfc8\\udfc9\\udfcf-\\udfd3\\udfe0-\\udff0\\udff4\\udff8-\\udfff]|\\ud83d[\\udc00-\\udc3e\\udc40\\udc44\\udc45\\udc51-\\udc65\\udc6a-\\udc6d\\udc6f\\udc79-\\udc7b\\udc7d-\\udc80\\udc84\\udc88-\\udca9\\udcab-\\udcfc\\udcff-\\udd3d\\udd4b-\\udd4e\\udd50-\\udd67\\udda4\\uddfb-\\ude44\\ude48-\\ude4a\\ude80-\\udea2\\udea4-\\udeb3\\udeb7-\\udebf\\udec1-\\udec5\\uded0-\\uded2\\udeeb\\udeec\\udef4-\\udef9]|\\ud83e[\\udd10-\\udd17\\udd1d\\udd20-\\udd25\\udd27-\\udd2f\\udd3a\\udd3c\\udd40-\\udd45\\udd47-\\udd70\\udd73-\\udd76\\udd7a\\udd7c-\\udda2\\uddb4\\uddb7\\uddc0-\\uddc2\\uddd0\\uddde-\\uddff]|[\\u23e9-\\u23ec\\u23f0\\u23f3\\u267e\\u26ce\\u2705\\u2728\\u274c\\u274e\\u2753-\\u2755\\u2795-\\u2797\\u27b0\\u27bf\\ue50a])|\\ufe0f/g,e=/\\uFE0F/g,c=String.fromCharCode(8205),n=/[&<>'\"]/g,h=/^(?:iframe|noframes|noscript|script|select|style|textarea)$/,a=String.fromCharCode;return f;function g(d,u){return document.createTextNode(u?d.replace(e,\"\"):d)}function t(d,u){return\"\".concat(u.base,u.size,\"/\",d,u.ext)}function x(d){return i(d.indexOf(c)<0?d.replace(e,\"\"):d)}function r(d){return u[d]}function b(){return null}function o(d,u){return String(d).replace(m,u)}function i(d,u){for(var f=[],e=0,c=0,a=0;a<d.length;)e=d.charCodeAt(a++),c?(f.push((65536+(c-55296<<10)+(e-56320)).toString(16)),c=0):55296<=e&&e<=56319?c=e:f.push(e.toString(16));return f.join(u||\"-\")}}();\n// Source: wp-includes/js/wp-emoji.min.js\n!function(c,l){c.wp=c.wp||{},c.wp.emoji=new function(){var n,u,e=c.MutationObserver||c.WebKitMutationObserver||c.MozMutationObserver,a=c.document,t=!1,r=0,o=0<c.navigator.userAgent.indexOf(\"Trident/7.0\");function i(){return!a.implementation.hasFeature||a.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#Image\",\"1.1\")}function s(){if(!t){if(void 0===c.twemoji)return 600<r?void 0:(c.clearTimeout(u),u=c.setTimeout(s,50),void r++);n=c.twemoji,t=!0,e&&new e(function(u){for(var e,t,n,a,r=u.length;r--;){if(e=u[r].addedNodes,t=u[r].removedNodes,1===(n=e.length)&&1===t.length&&3===e[0].nodeType&&\"IMG\"===t[0].nodeName&&e[0].data===t[0].alt&&\"load-failed\"===t[0].getAttribute(\"data-error\"))return;for(;n--;){if(3===(a=e[n]).nodeType){if(!a.parentNode)continue;if(o)for(;a.nextSibling&&3===a.nextSibling.nodeType;)a.nodeValue=a.nodeValue+a.nextSibling.nodeValue,a.parentNode.removeChild(a.nextSibling);a=a.parentNode}!a||1!==a.nodeType||a.className&&\"string\"==typeof a.className&&-1!==a.className.indexOf(\"wp-exclude-emoji\")||d(a.textContent)&&f(a)}}}).observe(a.body,{childList:!0,subtree:!0}),f(a.body)}}function d(u){return!!u&&(/[\\uDC00-\\uDFFF]/.test(u)||/[\\u203C\\u2049\\u20E3\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u2300\\u231A\\u231B\\u2328\\u2388\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638\\u2639\\u263A\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692\\u2693\\u2694\\u2696\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753\\u2754\\u2755\\u2757\\u2763\\u2764\\u2795\\u2796\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05\\u2B06\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]/.test(u))}function f(u,e){var t;return!l.supports.everything&&n&&u&&(\"string\"==typeof u||u.childNodes&&u.childNodes.length)?(e=e||{},t={base:i()?l.svgUrl:l.baseUrl,ext:i()?l.svgExt:l.ext,className:e.className||\"emoji\",callback:function(u,e){switch(u){case\"a9\":case\"ae\":case\"2122\":case\"2194\":case\"2660\":case\"2663\":case\"2665\":case\"2666\":return!1}return!(l.supports.everythingExceptFlag&&!/^1f1(?:e[6-9a-f]|f[0-9a-f])-1f1(?:e[6-9a-f]|f[0-9a-f])$/.test(u)&&!/^(1f3f3-fe0f-200d-1f308|1f3f4-200d-2620-fe0f)$/.test(u))&&\"\".concat(e.base,u,e.ext)},onerror:function(){n.parentNode&&(this.setAttribute(\"data-error\",\"load-failed\"),n.parentNode.replaceChild(a.createTextNode(n.alt),n))}},\"object\"==typeof e.imgAttr&&(t.attributes=function(){return e.imgAttr}),n.parse(u,t)):u}return l&&(l.DOMReady?s():l.readyCallback=s),{parse:f,test:d}}}(window,window._wpemojiSettings);"
          },
          "redirectURL": "",
          "headersSize": 295,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.457Z",
        "time": 566.1919999984093,
        "timings": {
          "blocked": 563.9890000013513,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 1.2460000004973262,
          "receive": 0.9569999965606257,
          "_blocked_queueing": 563.9010000013513
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/wp-content/plugins/revslider/public/assets/css/settings.css?ver=5.4.6.4"
        },
        "_priority": "VeryHigh",
        "_resourceType": "font",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/plugins/revslider/public/assets/fonts/revicons/revicons.woff?5510888",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/wp-content/plugins/revslider/public/assets/css/settings.css?ver=5.4.6.4"
            },
            {
              "name": "Origin",
              "value": "https://exactspace.co"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [
            {
              "name": "5510888",
              "value": ""
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:55 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 24 Apr 2019 05:01:19 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"1d70-5873f978f65c0\""
            },
            {
              "name": "Content-Length",
              "value": "7536"
            },
            {
              "name": "Content-Type",
              "value": "application/font-woff"
            }
          ],
          "cookies": [],
          "content": {
            "size": 7536,
            "mimeType": "application/font-woff"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.608Z",
        "time": 0.7229999973787926,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.32699999428587034,
          "receive": 0.39600000309292227,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://fonts.googleapis.com/css?family=Neuton%3A400%2C400i%7CMontserrat%3A400%2C700&subset=latin%2Clatin-ext&ver=4.9.22"
        },
        "_priority": "VeryHigh",
        "_resourceType": "font",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://fonts.gstatic.com/s/montserrat/v25/JTUSjIg1_i6t8kCHKm459Wlhyw.woff2",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://fonts.googleapis.com/"
            },
            {
              "name": "Origin",
              "value": "https://exactspace.co"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "date",
              "value": "Thu, 08 Dec 2022 19:56:39 GMT"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "age",
              "value": "398174"
            },
            {
              "name": "content-security-policy-report-only",
              "value": "require-trusted-types-for 'script'; report-uri https://csp.withgoogle.com/csp/apps-themes"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
            },
            {
              "name": "content-length",
              "value": "30928"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "last-modified",
              "value": "Mon, 11 Jul 2022 18:57:39 GMT"
            },
            {
              "name": "server",
              "value": "sffe"
            },
            {
              "name": "cross-origin-opener-policy",
              "value": "same-origin; report-to=\"apps-themes\""
            },
            {
              "name": "report-to",
              "value": "{\"group\":\"apps-themes\",\"max_age\":2592000,\"endpoints\":[{\"url\":\"https://csp.withgoogle.com/csp/report-to/apps-themes\"}]}"
            },
            {
              "name": "content-type",
              "value": "font/woff2"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "expires",
              "value": "Fri, 08 Dec 2023 19:56:39 GMT"
            }
          ],
          "cookies": [],
          "content": {
            "size": 30928,
            "mimeType": "font/woff2"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "142.250.193.35",
        "startedDateTime": "2022-12-13T14:53:32.614Z",
        "time": 0.4639999970095232,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.428999999712687,
          "receive": 0.03499999729683623,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://fonts.googleapis.com/css?family=Neuton%3A400%2C400i%7CMontserrat%3A400%2C700&subset=latin%2Clatin-ext&ver=4.9.22"
        },
        "_priority": "VeryHigh",
        "_resourceType": "font",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://fonts.gstatic.com/s/neuton/v18/UMBTrPtMoH62xUZCz4g6.woff2",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://fonts.googleapis.com/"
            },
            {
              "name": "Origin",
              "value": "https://exactspace.co"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "date",
              "value": "Fri, 09 Dec 2022 03:32:50 GMT"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "age",
              "value": "370896"
            },
            {
              "name": "content-security-policy-report-only",
              "value": "require-trusted-types-for 'script'; report-uri https://csp.withgoogle.com/csp/apps-themes"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
            },
            {
              "name": "content-length",
              "value": "19588"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "last-modified",
              "value": "Mon, 09 May 2022 18:37:59 GMT"
            },
            {
              "name": "server",
              "value": "sffe"
            },
            {
              "name": "cross-origin-opener-policy",
              "value": "same-origin; report-to=\"apps-themes\""
            },
            {
              "name": "report-to",
              "value": "{\"group\":\"apps-themes\",\"max_age\":2592000,\"endpoints\":[{\"url\":\"https://csp.withgoogle.com/csp/report-to/apps-themes\"}]}"
            },
            {
              "name": "content-type",
              "value": "font/woff2"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "expires",
              "value": "Sat, 09 Dec 2023 03:32:50 GMT"
            }
          ],
          "cookies": [],
          "content": {
            "size": 19588,
            "mimeType": "font/woff2"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "142.250.193.35",
        "startedDateTime": "2022-12-13T14:53:32.619Z",
        "time": 0.5259999961708672,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.49899999430635944,
          "receive": 0.027000001864507794,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 327
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2020/04/Pre-Loader.png",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:53 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 16 Apr 2020 09:30:32 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"8639-5a365158d3889\""
            },
            {
              "name": "Content-Length",
              "value": "34361"
            },
            {
              "name": "Content-Type",
              "value": "image/png"
            }
          ],
          "cookies": [],
          "content": {
            "size": 34361,
            "mimeType": "image/png",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:32.965Z",
        "time": 0.22500000341096893,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.20899999799439684,
          "receive": 0.016000005416572094,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://fonts.googleapis.com/css?family=Montserrat:400%2C700%7CRoboto:500"
        },
        "_priority": "VeryHigh",
        "_resourceType": "font",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fBBc4.woff2",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://fonts.googleapis.com/"
            },
            {
              "name": "Origin",
              "value": "https://exactspace.co"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "date",
              "value": "Wed, 07 Dec 2022 19:37:44 GMT"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "age",
              "value": "485710"
            },
            {
              "name": "content-security-policy-report-only",
              "value": "require-trusted-types-for 'script'; report-uri https://csp.withgoogle.com/csp/apps-themes"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
            },
            {
              "name": "content-length",
              "value": "15920"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "last-modified",
              "value": "Wed, 11 May 2022 19:24:45 GMT"
            },
            {
              "name": "server",
              "value": "sffe"
            },
            {
              "name": "cross-origin-opener-policy",
              "value": "same-origin; report-to=\"apps-themes\""
            },
            {
              "name": "report-to",
              "value": "{\"group\":\"apps-themes\",\"max_age\":2592000,\"endpoints\":[{\"url\":\"https://csp.withgoogle.com/csp/report-to/apps-themes\"}]}"
            },
            {
              "name": "content-type",
              "value": "font/woff2"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "expires",
              "value": "Thu, 07 Dec 2023 19:37:44 GMT"
            }
          ],
          "cookies": [],
          "content": {
            "size": 15920,
            "mimeType": "font/woff2"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "142.250.193.35",
        "startedDateTime": "2022-12-13T14:53:32.997Z",
        "time": 0.24300000222865492,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.20300000323913991,
          "receive": 0.03999999898951501,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 758
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2020/03/ventilator-349658_1920-e1583147951414.jpg",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Mon, 02 Mar 2020 11:19:11 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"cb0f-59fdd5b3f09c0\""
            },
            {
              "name": "Content-Length",
              "value": "51983"
            },
            {
              "name": "Content-Type",
              "value": "image/jpeg"
            }
          ],
          "cookies": [],
          "content": {
            "size": 51983,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:33.056Z",
        "time": 0.7310000000870787,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.6160000048112124,
          "receive": 0.11499999527586624,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 775
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2020/03/drill-3702674_1920-1-e1583149317365.jpg",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Mon, 02 Mar 2020 11:41:57 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"1a5d9-59fddacaa8b40\""
            },
            {
              "name": "Content-Length",
              "value": "107993"
            },
            {
              "name": "Content-Type",
              "value": "image/jpeg"
            }
          ],
          "cookies": [],
          "content": {
            "size": 107993,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "52.74.55.127",
        "startedDateTime": "2022-12-13T14:53:33.061Z",
        "time": 0.5319999982020818,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.5059999966761097,
          "receive": 0.02600000152597204,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://exactspace.co/",
          "lineNumber": 792
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://exactspace.co/wp-content/uploads/2019/10/Service-and-Spare-Optimization-2-e1583151351969.jpg",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua",
              "value": "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\""
            },
            {
              "name": "Referer",
              "value": "https://exactspace.co/"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 13 Dec 2022 10:32:54 GMT"
            },
            {
              "name": "Last-Modified",
              "value": "Mon, 02 Mar 2020 12:15:51 GMT"
            },
            {
              "name": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "ETag",
              "value": "\"1b4ab-59fde25e6ebc0\""
            },
            {
              "name": "Content-Length",
              "value": "111787"
            },
            {
              "name": "Content-Type",
              "value": "image/jpeg"
            }
          ],
          "cookies": [],
          "content": {
            "size": 111787,
            "mimeType": "image/jpeg",
            "text": "